# Pre-commit configuration optimized for speed and parallel execution
default_language_version:
  python: python3

# Optimized exclude patterns
exclude: (?x)(
  ^\.venv/.*|
  ^venv/.*|
  ^env/.*|
  \.venv/.*|
  venv/.*|
  env/.*|
  \.git/.*|
  node_modules/.*|
  .*__pycache__/.*|
  .*\.pytest_cache/.*|
  .*\.mypy_cache/.*|
  .*\.ruff_cache/.*|
  build/.*|
  dist/.*|
  .*\.egg-info/.*|
  ui/react_frontend/node_modules/.*|
  sdk/javascript/node_modules/.*
  )

default_stages: [pre-commit]
fail_fast: false

repos:
  # Fast validation hooks (run first)
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-added-large-files
        args: ["--maxkb=1024"]

  # Primary code quality tool: Ruff (formatting, linting, import sorting)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.11.9
    hooks:
      - id: ruff-format
        name: Format code with Ruff
        types: [python]
        files: \.py$
      - id: ruff
        name: Lint with Ruff
        args: [--fix, --exit-non-zero-on-fix]
        types: [python]
        files: \.py$

  # Security checking with Bandit
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.7
    hooks:
      - id: bandit
        name: Check for security issues with Bandit
        args: ["-c", "bandit.yaml", "-r"]
        types: [python]
        exclude: "tests/.*"
  # Type checking (run after formatting/linting)
  - repo: local
    hooks:
      - id: pyright
        name: Type check with Pyright
        entry: pyright
        language: system
        types: [python]
        require_serial: true
        exclude: |
          (?x)(
            ^scripts/__init__.py$|
            ^.github/scripts/__init__.py$
          )
        stages: [manual]  # Skip pyright in normal pre-commit runs

      # Custom security fixes
      - id: security-fixes
        name: Apply security fixes
        entry: python scripts/fix/fix_all_security_and_types.py --security-only
        language: system
        types: [python]
        pass_filenames: false
        require_serial: true

      # Duplicate logging check
      - id: fix-duplicate-logging
        name: Fix duplicate logging issues
        entry: python scripts/fix/fix_duplicate_logging.py
        language: system
        types: [python]
        pass_filenames: false
        require_serial: true
