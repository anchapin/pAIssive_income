version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: paissive_income_app
    ports:
      - "5000:5000"
    volumes:
      - ./data:/app/data
    environment:
      - FLASK_ENV=production
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-default_jwt_secret_key_for_development_only}
      - PASSWORD_RESET_SECRET_KEY=${PASSWORD_RESET_SECRET_KEY:-default_password_reset_secret_key_for_development_only}
      - REFRESH_TOKEN_SECRET_KEY=${REFRESH_TOKEN_SECRET_KEY:-default_refresh_token_secret_key_for_development_only}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  # Uncomment to add Redis for caching and session storage
  # redis:
  #   image: redis:alpine
  #   container_name: paissive_income_redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 5s

  # Uncomment to add a database
  # db:
  #   image: postgres:13-alpine
  #   container_name: paissive_income_db
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   environment:
  #     - POSTGRES_USER=${DB_USER:-paissive_income}
  #     - POSTGRES_PASSWORD=${DB_PASSWORD:-paissive_income_password}
  #     - POSTGRES_DB=${DB_NAME:-paissive_income}
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U paissive_income"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 5s

# Uncomment to add volumes for Redis and Postgres
# volumes:
#   redis_data:
#   postgres_data:
