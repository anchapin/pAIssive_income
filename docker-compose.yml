services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: paissive-income-app
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs:rw
    environment:
      - FLASK_ENV=production
      - FLASK_APP=run_ui.py
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql://myuser:mypassword@db:5432/mydb
      - PATH=/app/.venv/bin:$PATH
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=mydb
      - POSTGRES_HOST=db
      - LOG_LEVEL=INFO
    networks:
      - paissive-network
    healthcheck:
      test: ["CMD", "/usr/local/bin/docker-healthcheck.sh"]
      interval: 30s
      timeout: 60s
      retries: 12
      start_period: 240s
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 4G
        reservations:
          cpus: "0.5"
          memory: 1G
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15.3-alpine
    container_name: paissive-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=mydb
    networks:
      - paissive-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydb"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s
    command: ["postgres", "-c", "log_statement=all", "-c", "log_connections=on"]

networks:
  paissive-network:
    driver: bridge
    name: paissive-network

volumes:
  postgres-data:
    driver: local
