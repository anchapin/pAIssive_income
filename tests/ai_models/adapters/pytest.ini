[pytest]
testpaths = tests
pythonpath = .
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Disable coverage for MCP tests to avoid conflicts
addopts = -v -p no:cov

# Configure pytest-asyncio
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Define all markers to prevent warnings
markers =
    unit: mark a test as a unit test
    integration: mark a test as an integration test
    slow: mark test as slow (taking more than 1 second to run)
    smoke: mark test as a smoke test (critical functionality)
    webhook: mark test related to webhook functionality
    api: mark test related to API functionality
    payment: mark test related to payment functionality
    security: mark test related to security features
    model: mark test related to AI model functionality
    performance: mark test performance-sensitive test
    flaky: mark test as flaky (occasionally fails)
    dependency: mark test as requiring external dependencies
    asyncio: mark test as an async test

# Configure test timeouts
timeout = 300
timeout_method = thread
