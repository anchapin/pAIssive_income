name: Test Docker Compose Fix

on:
  workflow_dispatch:  # Allow manual triggering
  pull_request:
    paths:
      - 'docker-compose*.yml'
      - 'scripts/fix-docker-*.sh'
      - 'scripts/run-docker-compose-ci.sh'
      - '.github/workflows/docker-compose-integration*.yml'
      - '.github/workflows/test-docker-compose-fix.yml'

jobs:
  test-docker-compose-fix:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Clean up Docker system
        run: |
          echo "Cleaning up Docker system..."
          docker system prune -a -f --volumes
          echo "Disk space after cleanup:"
          df -h

      - name: Make scripts executable
        run: |
          chmod +x scripts/fix-docker-network.sh
          chmod +x scripts/fix-docker-compose.sh
          chmod +x scripts/run-docker-compose-ci.sh

      - name: Run Docker network fix script
        run: |
          echo "Running Docker network fix script..."
          ./scripts/fix-docker-network.sh

      - name: Run Docker Compose fix script
        run: |
          echo "Running Docker Compose fix script..."
          ./scripts/fix-docker-compose.sh

      - name: Run Docker Compose CI script
        run: |
          echo "Running Docker Compose CI script..."
          ./scripts/run-docker-compose-ci.sh

      - name: Check service status
        run: |
          echo "Checking service status..."
          docker ps
          
          # Check if database is running
          if docker ps | grep -q paissive-postgres; then
            echo "✅ Database container is running"
          else
            echo "❌ Database container is not running"
            exit 1
          fi
          
          # Check if app is running
          if docker ps | grep -q paissive-income-app; then
            echo "✅ App container is running"
          else
            echo "❌ App container is not running"
            exit 1
          fi
          
          # Check if frontend is running (if it exists)
          if [ -d "ui/react_frontend" ]; then
            if docker ps | grep -q paissive-frontend; then
              echo "✅ Frontend container is running"
            else
              echo "❌ Frontend container is not running"
              exit 1
            fi
          fi

      - name: Check database health
        run: |
          echo "Checking database health..."
          if docker exec paissive-postgres pg_isready -U myuser -d mydb; then
            echo "✅ Database is healthy"
          else
            echo "❌ Database is not healthy"
            docker logs paissive-postgres
            exit 1
          fi

      - name: Check app health
        run: |
          echo "Checking app health..."
          # Wait for app to be ready
          max_attempts=10
          for i in $(seq 1 $max_attempts); do
            echo "Attempt $i of $max_attempts..."
            if curl -s http://localhost:5000/health | grep -q "healthy"; then
              echo "✅ App is healthy"
              break
            else
              echo "⚠️ App is not healthy yet"
              if [ $i -eq $max_attempts ]; then
                echo "❌ App did not become healthy within the timeout period"
                docker logs paissive-income-app
                exit 1
              fi
              sleep 10
            fi
          done

      - name: Collect logs
        if: always()
        run: |
          echo "Collecting logs..."
          mkdir -p logs
          
          # Collect Docker logs
          docker logs paissive-postgres > logs/postgres.log 2>&1 || true
          docker logs paissive-income-app > logs/app.log 2>&1 || true
          if [ -d "ui/react_frontend" ]; then
            docker logs paissive-frontend > logs/frontend.log 2>&1 || true
          fi
          
          # Collect Docker Compose logs
          docker compose logs > logs/docker-compose.log 2>&1 || true
          
          # Collect system information
          df -h > logs/disk-space.log
          docker system df -v > logs/docker-disk-usage.log
          docker ps -a > logs/docker-containers.log
          docker images > logs/docker-images.log
          docker network ls > logs/docker-networks.log
          docker volume ls > logs/docker-volumes.log

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: docker-compose-logs
          path: logs/
