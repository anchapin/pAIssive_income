name: Setup uv (Reusable)
on:
  workflow_call:
    inputs:
      python-version:
        required: false
        type: string
        default: '3.10'
      working-directory:
        required: false
        type: string
        default: .
      install-dependencies:
        required: false
        type: boolean
        default: true
      requirements-file:
        required: false
        type: string
        default: requirements.txt
      dev-requirements-file:
        required: false
        type: string
        default: requirements-dev.txt
jobs:
  setup-uv:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - windows-latest
      fail-fast: false
    steps:
    - name: Set up Python ${{ inputs.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: '~/.cache/pip

          ~/.cache/uv

          .pytest_cache'
        key: ${{ runner.os }}-deps-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: ${{ runner.os }}-deps-
    - name: Install uv using official action
      uses: astral-sh/setup-uv@v6
      with:
        version: 0.7.8
        enable-cache: true
    - name: Verify uv installation
      run: 'uv --version

        python --version

        '
    - name: Install dependencies (if requested)
      if: inputs.install-dependencies == true
      working-directory: ${{ inputs.working-directory }}
      run: "python -m pip install --upgrade pip\nif [ -f ${{ inputs.requirements-file\
        \ }} ]; then\n  uv pip install -r ${{ inputs.requirements-file }}\nfi\nif\
        \ [ -f ${{ inputs.dev-requirements-file }} ]; then\n  uv pip install -r ${{\
        \ inputs.dev-requirements-file }}\nfi\n"
      shell: bash
    timeout-minutes: 30
