name: Setup uv (Reusable)

on:
  workflow_call:
    inputs:
      python-version:
        required: false
        type: string
        default: '3.10'
      working-directory:
        required: false
        type: string
        default: '.'
      install-dependencies:
        required: false
        type: boolean
        default: true
      requirements-file:
        required: false
        type: string
        default: 'requirements.txt'
      dev-requirements-file:
        required: false
        type: string
        default: 'requirements-dev.txt'

jobs:
  setup-uv:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
          
      - name: Install uv
        shell: bash
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade uv
          uv --version
          
      - name: Create virtual environment
        shell: bash
        working-directory: ${{ inputs.working-directory }}
        run: |
          uv venv .venv || {
            echo "Failed to create virtual environment with uv. Falling back to Python's venv module..."
            python -m venv .venv
          }
          
      - name: Install dependencies (Linux/macOS)
        if: runner.os != 'Windows' && inputs.install-dependencies
        shell: bash
        working-directory: ${{ inputs.working-directory }}
        run: |
          source .venv/bin/activate
          
          if [ -f "${{ inputs.requirements-file }}" ]; then
            uv pip install -r "${{ inputs.requirements-file }}" || {
              echo "Failed to install dependencies with uv pip. Falling back to regular pip..."
              python -m pip install -r "${{ inputs.requirements-file }}"
            }
          fi
          
          if [ -f "${{ inputs.dev-requirements-file }}" ]; then
            uv pip install -r "${{ inputs.dev-requirements-file }}" || {
              echo "Failed to install dev dependencies with uv pip. Falling back to regular pip..."
              python -m pip install -r "${{ inputs.dev-requirements-file }}"
            }
          fi
          
      - name: Install dependencies (Windows)
        if: runner.os == 'Windows' && inputs.install-dependencies
        shell: pwsh
        working-directory: ${{ inputs.working-directory }}
        run: |
          .\.venv\Scripts\Activate.ps1
          
          if (Test-Path "${{ inputs.requirements-file }}") {
            uv pip install -r "${{ inputs.requirements-file }}"
            if ($LASTEXITCODE -ne 0) {
              Write-Host "Failed to install dependencies with uv pip. Falling back to regular pip..."
              python -m pip install -r "${{ inputs.requirements-file }}"
            }
          }
          
          if (Test-Path "${{ inputs.dev-requirements-file }}") {
            uv pip install -r "${{ inputs.dev-requirements-file }}"
            if ($LASTEXITCODE -ne 0) {
              Write-Host "Failed to install dev dependencies with uv pip. Falling back to regular pip..."
              python -m pip install -r "${{ inputs.dev-requirements-file }}"
            }
          }
