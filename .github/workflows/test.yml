name: Python Tests (Reusable)

on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string
      test-path:
        required: false
        type: string
        default: "tests/"

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
          cache: pip

      - name: Cache Python packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            .pytest_cache
          key: ${{ runner.os }}-pip-test-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-test-

      - name: Install dependencies
        run: |
          # Cleanup old distributions
          find . -type d -name "*.egg-info" -exec rm -rf {} + || true
          find . -type d -name "*.dist-info" -exec rm -rf {} + || true
          find . -name "*.egg" -exec rm -f {} + || true

          pip cache purge || true

          python -m pip install --upgrade pip setuptools wheel
          python -m pip install pytest pytest-cov pytest-xdist pytest-asyncio

          if [ -f requirements-dev.txt ]; then
            python -m pip install -r requirements-dev.txt
          fi
          if [ -f requirements.txt ]; then
            python -m pip install -r requirements.txt
          fi

          python -m pip install -e . -v

      - name: Create junit directory
        run: mkdir -p junit

      - name: Run tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          pytest ${{ inputs.test-path }} \
            -n auto \
            -v \
            --import-mode=importlib \
          --cov=. \
          --cov-report=xml \
          --cov-report=term-missing \
          --cov-fail-under=5 \
          --junitxml=junit/test-results.xml

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ github.run_id }}-${{ github.job }}
          path: junit/test-results.xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ github.run_id }}
          path: coverage.xml
