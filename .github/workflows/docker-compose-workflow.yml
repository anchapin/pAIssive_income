name: Docker Compose Integration
true:
  push:
    branches:
    - main
    - develop
    - cosine/add/ag-ui-pnpm-zt2ztr
    paths:
    - docker-compose*.yml
    - scripts/fix-docker-*.sh
    - scripts/run-docker-compose-ci.sh
    - .github/workflows/docker-compose-workflow.yml
    - ui/react_frontend/Dockerfile.dev
    - ui/react_frontend/package.json
    - Dockerfile
    - docker-healthcheck.sh
    - wait-for-db.sh
  pull_request:
    branches:
    - main
    - develop
    - master
    paths:
    - docker-compose*.yml
    - scripts/fix-docker-*.sh
    - scripts/run-docker-compose-ci.sh
    - .github/workflows/docker-compose-workflow.yml
    - ui/react_frontend/Dockerfile.dev
    - ui/react_frontend/package.json
    - Dockerfile
    - docker-healthcheck.sh
    - wait-for-db.sh
  workflow_dispatch: {}
jobs:
  docker-compose-integration:
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      DOCKER_BUILDKIT: 1
      COMPOSE_DOCKER_CLI_BUILD: 1
      CI: true
      BUILDKIT_PROGRESS: plain
      BUILDKIT_INLINE_CACHE: 1
    steps:
    - name: Optimize runner for Docker workloads
      run: "echo \"Initial disk space and memory:\"\ndf -h\nfree -m\n\n# More aggressive\
        \ cleanup to free up space\necho \"Performing aggressive cleanup...\"\nsudo\
        \ rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /usr/local/.ghcup\
        \ || true\nsudo rm -rf /usr/local/share/boost /usr/local/share/rust /usr/share/swift\
        \ || true\nsudo rm -rf /tmp/* /var/tmp/* || true\nsudo apt-get clean\nsudo\
        \ apt-get autoremove -y\n\n# Optimize Docker configuration for performance\n\
        echo \"Optimizing Docker configuration...\"\necho '{\n  \"builder\": { \"\
        gc\": { \"enabled\": true, \"defaultKeepStorage\": \"20GB\" } },\n  \"experimental\"\
        : true,\n  \"features\": { \"buildkit\": true },\n  \"registry-mirrors\":\
        \ [\"https://mirror.gcr.io\"]\n}' | sudo tee /etc/docker/daemon.json\nsudo\
        \ systemctl restart docker || true\n\n# Prune Docker system\necho \"Pruning\
        \ Docker system...\"\ndocker system prune -a -f --volumes\n\necho \"Disk space\
        \ after optimization:\"\ndf -h\n"
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - name: Set up Python and detect frontend
      id: setup
      run: "# Install Python 3.12 directly (faster than actions/setup-python)\nsudo\
        \ apt-get update -q\nsudo apt-get install -y --no-install-recommends python3\
        \ python3-venv python3-dev\n\n# Create symlink to make it the default python\n\
        sudo ln -sf /usr/bin/python3 /usr/bin/python\n\n# Verify Python version\n\
        python3 --version\n\n# Check for frontend in parallel\nif [ -d \"ui/react_frontend\"\
        \ ]; then\n  echo \"has_frontend=true\" >> $GITHUB_OUTPUT\nelse\n  echo \"\
        has_frontend=false\" >> $GITHUB_OUTPUT\nfi\n"
    timeout-minutes: 30
'on':
  push:
    branches:
    - main
    - develop
    - master
  pull_request:
    branches:
    - main
    - develop
    - master
  workflow_dispatch: {}
