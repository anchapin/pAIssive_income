name: CI/CD Monitoring

on:
  workflow_run:
    workflows: ["CI/CD Pipeline", "Security Scan", "Deploy"]
    types:
      - completed

jobs:
  Monitor_Workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Check workflow status
        id: check_status
        run: |
          echo "Workflow ${{ github.event.workflow_run.name }} completed with status: ${{ github.event.workflow_run.conclusion }}"
          echo "workflow_status=${{ github.event.workflow_run.conclusion }}" >> $GITHUB_OUTPUT
          echo "workflow_name=${{ github.event.workflow_run.name }}" >> $GITHUB_OUTPUT
          echo "workflow_url=${{ github.event.workflow_run.html_url }}" >> $GITHUB_OUTPUT
          echo "repo_name=${{ github.repository }}" >> $GITHUB_OUTPUT

          # Safely extract and validate branch name to prevent expression injection
          # Store raw branch name in a variable
          RAW_BRANCH=$(echo "${{ github.event.workflow_run.head_branch }}" | tr -d '\n')

          # Validate branch name - only allow alphanumeric characters, dashes, underscores, and slashes
          if [[ "$RAW_BRANCH" =~ ^[a-zA-Z0-9_\-\/]+$ ]]; then
            # Branch name is valid, store it safely
            echo "branch_name=$RAW_BRANCH" >> $GITHUB_OUTPUT
          else
            # Invalid branch name, use a safe default
            echo "branch_name=invalid-branch-name" >> $GITHUB_OUTPUT
            echo "WARNING: Invalid branch name detected. Using placeholder instead."
          fi

      - name: Send Slack notification on failure
        if: steps.check_status.outputs.workflow_status != 'success'
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "⚠️ CI/CD Workflow Failed",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "⚠️ CI/CD Workflow Failed",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Workflow:*\n${{ steps.check_status.outputs.workflow_name }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Status:*\n${{ steps.check_status.outputs.workflow_status }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Repository:*\n${{ steps.check_status.outputs.repo_name }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:*\n${{ steps.check_status.outputs.branch_name }}"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Workflow",
                        "emoji": true
                      },
                      "url": "${{ steps.check_status.outputs.workflow_url }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      - name: Send email notification on failure
        if: steps.check_status.outputs.workflow_status != 'success'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.MAIL_SERVER }}
          server_port: ${{ secrets.MAIL_PORT }}
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "⚠️ CI/CD Workflow Failed: ${{ steps.check_status.outputs.workflow_name }}"
          body: |
            CI/CD Workflow has failed!

            Workflow: ${{ steps.check_status.outputs.workflow_name }}
            Status: ${{ steps.check_status.outputs.workflow_status }}
            Repository: ${{ steps.check_status.outputs.repo_name }}
            Branch: ${{ steps.check_status.outputs.branch_name }}

            View the workflow run: ${{ steps.check_status.outputs.workflow_url }}
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: CI/CD Monitoring <${{ secrets.MAIL_USERNAME }}>

  Collect_Metrics:
    runs-on: ubuntu-latest
    needs: Monitor_Workflow
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pandas matplotlib

      - name: Validate branch name and calculate duration
        id: validate_branch
        run: |
          # Safely extract and validate branch name
          RAW_BRANCH=$(echo "${{ github.event.workflow_run.head_branch }}" | tr -d '\n')

          # Validate branch name - only allow alphanumeric characters, dashes, underscores, and slashes
          if [[ "$RAW_BRANCH" =~ ^[a-zA-Z0-9_\-\/]+$ ]]; then
            # Branch name is valid, store it safely
            echo "branch=$RAW_BRANCH" >> $GITHUB_OUTPUT
          else
            # Invalid branch name, use a safe default
            echo "branch=invalid-branch-name" >> $GITHUB_OUTPUT
            echo "WARNING: Invalid branch name detected. Using placeholder instead."
          fi

          # Safely calculate duration in seconds
          # Extract timestamps and remove any potential newlines
          CREATED_AT=$(echo "${{ github.event.workflow_run.created_at }}" | tr -d '\n')
          UPDATED_AT=$(echo "${{ github.event.workflow_run.updated_at }}" | tr -d '\n')

          # Validate timestamps format (ISO 8601)
          if [[ "$CREATED_AT" =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$ ]] &&
             [[ "$UPDATED_AT" =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$ ]]; then
            # Calculate duration only if timestamps are valid
            DURATION=$(( $(date -d "$UPDATED_AT" +%s) - $(date -d "$CREATED_AT" +%s) ))
            echo "duration=$DURATION" >> $GITHUB_OUTPUT
          else
            # Use a default duration if timestamps are invalid
            echo "duration=0" >> $GITHUB_OUTPUT
            echo "WARNING: Invalid timestamp format detected. Using 0 for duration."
          fi

      - name: Collect workflow metrics
        run: |
          python .github/scripts/collect_workflow_metrics.py \
            --workflow "${{ github.event.workflow_run.name }}" \
            --status "${{ github.event.workflow_run.conclusion }}" \
            --duration "${{ steps.validate_branch.outputs.duration }}" \
            --branch "${{ steps.validate_branch.outputs.branch }}" \
            --commit "${{ github.event.workflow_run.head_sha }}" \
            --output "workflow_metrics.json"

      - name: Upload metrics as artifact
        uses: actions/upload-artifact@v3
        with:
          name: workflow-metrics
          path: workflow_metrics.json
          retention-days: 90
