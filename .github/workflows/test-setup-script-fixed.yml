name: Test Setup Script (Fixed)

on:
  workflow_call:
  push:
    branches: [main]
    paths:
      - '.github/workflows/test-setup-script-fixed.yml'
  pull_request:
    branches: [main]
    paths:
      - '.github/workflows/test-setup-script-fixed.yml'
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to test on'
        required: false
        default: 'ubuntu'
        type: choice
        options:
          - ubuntu
          - windows
          - macos
      python_version:
        description: 'Python version to test'
        required: false
        default: '3.12'
        type: choice
        options:
          - '3.10'
          - '3.11'
          - '3.12'

permissions:
  contents: read

jobs:
  test-ubuntu:
    name: Test Setup on Ubuntu
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.platform == 'ubuntu' || github.event.inputs.platform == '' || !github.event.inputs.platform }}
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ github.event.inputs.python_version || '3.12' }}

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          enable-cache: true

      - name: Create virtual environment
        run: |
          uv venv .venv || python -m venv .venv
          source .venv/bin/activate
          echo "Virtual environment created successfully"

      - name: Install basic dependencies
        run: |
          source .venv/bin/activate
          python -m pip install --upgrade pip
          pip install pytest ruff pyyaml

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Node.js dependencies
        run: |
          pnpm install --no-optional || npm install --no-optional || echo "Node install failed"

      - name: Run basic tests
        run: |
          source .venv/bin/activate
          echo "✅ Python setup completed"
          python --version
          pip --version
          echo "✅ Node.js setup completed"
          node --version
          pnpm --version || npm --version
          echo "✅ Basic test setup completed successfully"

  test-windows:
    name: Test Setup on Windows
    runs-on: windows-latest
    if: ${{ github.event.inputs.platform == 'windows' }}
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ github.event.inputs.python_version || '3.12' }}

      - name: Create virtual environment
        shell: pwsh
        run: |
          python -m venv .venv
          .\.venv\Scripts\Activate.ps1
          Write-Host "Virtual environment created successfully"

      - name: Install basic dependencies
        shell: pwsh
        run: |
          .\.venv\Scripts\Activate.ps1
          python -m pip install --upgrade pip
          pip install pytest ruff pyyaml

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Node.js dependencies
        shell: pwsh
        run: |
          pnpm install --no-optional
          if ($LASTEXITCODE -ne 0) {
            npm install --no-optional
          }

      - name: Run basic tests
        shell: pwsh
        run: |
          .\.venv\Scripts\Activate.ps1
          Write-Host "✅ Python setup completed"
          python --version
          pip --version
          Write-Host "✅ Node.js setup completed"
          node --version
          pnpm --version
          Write-Host "✅ Basic test setup completed successfully"

  test-macos:
    name: Test Setup on macOS
    runs-on: macos-latest
    if: ${{ github.event.inputs.platform == 'macos' }}
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ github.event.inputs.python_version || '3.12' }}

      - name: Create virtual environment
        run: |
          python -m venv .venv
          source .venv/bin/activate
          echo "Virtual environment created successfully"

      - name: Install basic dependencies
        run: |
          source .venv/bin/activate
          python -m pip install --upgrade pip
          pip install pytest ruff pyyaml

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Node.js dependencies
        run: |
          pnpm install --no-optional || npm install --no-optional || echo "Node install failed"

      - name: Run basic tests
        run: |
          source .venv/bin/activate
          echo "✅ Python setup completed"
          python --version
          pip --version
          echo "✅ Node.js setup completed"
          node --version
          pnpm --version || npm --version
          echo "✅ Basic test setup completed successfully" 