name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Lint_Code:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          pip install flake8 black isort mypy
      - name: Lint with flake8
        run: |
          flake8 . --count --statistics
      - name: Check formatting with black
        run: |
          black . --check
      - name: Check imports with isort
        run: |
          isort . --check-only
      - name: Type check with mypy
        run: |
          mypy .

  Run_Tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install pytest-cov
      - name: Run tests with pytest
        run: |
          pytest tests/ --cov=./ --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml

  Security_Scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety semgrep pylint
      - name: Run bandit
        run: |
          bandit -r . -c pyproject.toml -ll || bandit -r . -ll
      - name: Run safety
        run: |
          safety check -i 51457 -i 51668
      - name: Run semgrep security scan
        run: |
          python -m pip install semgrep
          semgrep scan --config=auto --severity=ERROR
      - name: Run pylint security checks
        run: |
          pylint --disable=all --enable=security . || true
