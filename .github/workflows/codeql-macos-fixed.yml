name: CodeQL Analysis - macOS
true:
  pull_request:
    branches:
    - main
    - dev
    - master
    - develop
    paths-ignore:
    - '**/*.md'
    - '**/*.txt'
    - '**/*.rst'
    - '**/*.png'
    - '**/*.jpg'
    - '**/*.jpeg'
    - '**/*.gif'
    - '**/*.svg'
    - '**/*.ico'
    - .gitignore
    - docs/**
    - LICENSE
    - SECURITY.md
    - CONTRIBUTING.md
    - CODE_OF_CONDUCT.md
  schedule:
  - cron: 0 4 * * 1
  workflow_dispatch: {}
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  security-events: write
  actions: read
  contents: read
jobs:
  analyze-javascript:
    name: Analyze JavaScript/TypeScript
    runs-on: macos-latest
    timeout-minutes: 60
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Cache CodeQL database
      uses: actions/cache@v4
      with:
        path: ~/.codeql/databases
        key: codeql-javascript-${{ github.sha }}
        restore-keys: 'codeql-javascript-

          '
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: '8'
    - name: Add pnpm to PATH
      shell: bash
      run: 'export PATH=$(pnpm bin):$PATH

        echo "PATH=$(pnpm bin):$PATH" >> $GITHUB_ENV

        echo "Current PATH: $PATH"

        which pnpm || { echo "Error: pnpm is still not in PATH."; exit 1; }

        '
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: pnpm
    - name: Check pnpm version
      run: pnpm --version
    - name: Install dependencies
      run: "# Check for package.json in the root directory\nif [ -f package.json ];\
        \ then\n  echo \"Installing dependencies with pnpm in root directory...\"\n\
        \  pnpm install\nelse\n  echo \"No package.json found in root directory,\n\
        \  checking ui/react_frontend...\"\n  # Check for package.json in ui/react_frontend\n\
        \  if [ -f ui/react_frontend/package.json ]; then\n    echo \"Installing dependencies\
        \ with pnpm in ui/react_frontend...\"\n    cd ui/react_frontend && pnpm install\n\
        \  else\n    echo \"No package.json found in ui/react_frontend,\n    skipping\
        \ dependency installation.\"\n  fi\nfi\n"
      continue-on-error: true
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: javascript-typescript
        queries: security-and-quality
        config-file: ./.github/codeql/security-os-config.yml
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3
    - name: Check disk space
      run: df -h
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: /security/os:macos-latest
        upload: true
        output: sarif-results/javascript-typescript-macos.sarif
    - name: Upload OS-specific CodeQL configuration
      uses: github/codeql-action/upload-sarif@v3
      continue-on-error: true
      with:
        sarif_file: sarif-results/javascript-typescript-macos.sarif
        category: /security/os:macos-latest
    - name: Upload SARIF results
      uses: actions/upload-artifact@v4
      with:
        name: javascript-typescript-macos-sarif
        path: sarif-results/javascript-typescript-macos.sarif
        retention-days: 7
  analyze-python:
    name: Analyze Python
    runs-on: macos-latest
    timeout-minutes: 60
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Cache CodeQL database
      uses: actions/cache@v4
      with:
        path: ~/.codeql/databases
        key: codeql-python-${{ github.sha }}
        restore-keys: 'codeql-python-

          '
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: pip
    - name: Install dependencies
      run: "python -m pip install --upgrade uv\nif [ -f requirements.txt ]; then\n\
        \  echo \"Installing pip dependencies from requirements.txt using 'uv pip'...\"\
        \n  uv pip install -r requirements.txt || {\n    echo \"Failed to install\
        \ with uv pip, falling back to regular pip...\"\n    python -m pip install\
        \ --upgrade pip\n    pip install -r requirements.txt\n  }\nelif [ -f requirements-dev.txt\
        \ ]; then\n  echo \"Installing pip dependencies from requirements-dev.txt\
        \ using 'uv pip'...\"\n  uv pip install -r requirements-dev.txt || {\n   \
        \ echo \"Failed to install with uv pip, falling back to regular pip...\"\n\
        \    python -m pip install --upgrade pip\n    pip install -r requirements-dev.txt\n\
        \  }\nelse\n  echo \"No requirements.txt or requirements-dev.txt found,\n\
        \  skipping dependency installation.\"\nfi\n\n# Install package in development\
        \ mode if setup.py exists\nif [ -f setup.py ]; then\n  echo \"Installing package\
        \ in development mode using 'uv pip'...\"\n  uv pip install -e . || {\n  \
        \  echo \"Failed to install package with uv pip,\n    falling back to regular\
        \ pip...\"\n    python -m pip install --upgrade pip\n    pip install -e .\n\
        \  }\nfi\n"
      continue-on-error: true
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: python
        queries: security-and-quality
        config-file: ./.github/codeql/security-os-config.yml
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3
    - name: Check disk space
      run: df -h
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: /security/os:macos-latest
        upload: true
        output: sarif-results/python-macos.sarif
    - name: Upload OS-specific CodeQL configuration
      uses: github/codeql-action/upload-sarif@v3
      continue-on-error: true
      with:
        sarif_file: sarif-results/python-macos.sarif
        category: /security/os:macos-latest
    - name: Upload SARIF results
      uses: actions/upload-artifact@v4
      with:
        name: python-macos-sarif
        path: sarif-results/python-macos.sarif
        retention-days: 7
'on':
  push:
    branches:
    - main
    - develop
    - master
  pull_request:
    branches:
    - main
    - develop
    - master
  workflow_dispatch: {}
