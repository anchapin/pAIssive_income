name: Lint and Quality Checks

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 black isort mypy ruff pyright
        python -m pip install -r requirements-dev.txt
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Cache Python packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pip
          .mypy_cache
          .ruff_cache
          .pytest_cache
        key: ${{ runner.os }}-pip-lint-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-lint-
    
    - name: Lint with Ruff
      run: |
        ruff check .
        ruff format --check .
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --extend-ignore=E203 --statistics
    
    - name: Check formatting with Black
      run: |
        black --check --diff .
    
    - name: Sort imports with isort
      run: |
        isort --check-only --diff --profile black .
    
    - name: Type check with mypy and pyright
      run: |
        mypy . --ignore-missing-imports --install-types --non-interactive
        pyright .
    
    - name: Check for unused imports
      run: |
        ruff check . --select F401