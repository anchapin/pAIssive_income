name: Consolidated CI/CD
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8
        run_install: false

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        if ! which pnpm; then
          echo "pnpm not found, installing globally with npm..."
          npm install -g pnpm
        fi
        pnpm install --no-optional || npm install --no-optional

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov ruff bandit safety mypy pytest-xdist pytest-asyncio protobuf==5.29.4
        if [ -f requirements-dev.txt ]; then
          pip install -r requirements-dev.txt
        fi
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi

    - name: Setup CI Environment (Unix)
      if: runner.os != 'Windows'
      run: |
        chmod +x .github/scripts/setup-ci-environment.sh
        ./.github/scripts/setup-ci-environment.sh

    - name: Setup CI Environment (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        ./.github/scripts/setup-ci-environment.ps1

    - name: Run unit tests
      run: |
        npm run test:unit -- --coverage

    - name: Run E2E tests
      run: |
        npm run test:e2e -- --coverage

    - name: Run mock API tests
      run: |
        npm run test:mock-api -- --coverage

    - name: Run Python tests
      run: |
        pytest --cov=. --cov-report=xml:coverage.xml --junitxml=test-results/junit.xml

    - name: Upload coverage
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage
        fail_ci_if_error: true

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.os }}
        path: |
          test-results/
          coverage/
          coverage.xml
          ci-reports/
          ci-artifacts/
          ci-logs/

  lint-test:
    name: Lint, Type Check, and Test
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - windows-latest
        - macos-latest
      fail-fast: false
    permissions:
      contents: read
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup CI Environment (Unix)
      if: runner.os != 'Windows'
      run: |
        chmod +x .github/scripts/setup-ci-environment.sh
        ./.github/scripts/setup-ci-environment.sh

    - name: Setup CI Environment (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        ./.github/scripts/setup-ci-environment.ps1

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8
        run_install: false

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: pnpm

    - name: Install Node.js dependencies
      run: |
        if ! which pnpm; then
          echo "pnpm not found, installing globally with npm..."
          npm install -g pnpm
        fi
        pnpm install --no-optional || npm install --no-optional

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov ruff bandit safety mypy pytest-xdist pytest-asyncio protobuf==5.29.4
        if [ -f requirements-dev.txt ]; then
          pip install -r requirements-dev.txt
        fi
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi

    - name: Run tests
      run: |
        pytest --cov=. --cov-report=xml:coverage.xml --junitxml=test-results/junit.xml

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          test-results/
          coverage/
          coverage.xml
          ci-reports/
          ci-artifacts/
          ci-logs/
