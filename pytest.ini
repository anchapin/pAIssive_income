[pytest]
# Only collect tests from the tests/ directory for faster test collection
testpaths = tests
pythonpath = .
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Use all available CPU cores to run tests in parallel by default (requires pytest-xdist)
# Also include coverage reporting
addopts = -n auto -v --cov=. --cov-report=xml --cov-report=term-missing --cov-fail-under=2 -p no:hypothesispytestplugin

# Configure pytest-asyncio
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Define all markers to prevent warnings
markers =
    unit: mark a test as a unit test
    integration: mark a test as an integration test
    slow: mark test as slow (taking more than 1 second to run)
    smoke: mark test as a smoke test (critical functionality)
    webhook: mark test related to webhook functionality
    api: mark test related to API functionality
    payment: mark test related to payment functionality
    security: mark test related to security features
    model: mark test related to AI model functionality
    performance: mark test performance-sensitive test
    flaky: mark test as flaky (occasionally fails)
    dependency: mark test as requiring external dependencies
    asyncio: mark test as an async test

# Configure test timeouts (requires pytest-timeout plugin)
# timeout = 300
# timeout_method = thread
