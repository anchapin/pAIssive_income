2025-06-06T03:30:18.0904346Z Current runner version: '2.325.0'
2025-06-06T03:30:18.0927782Z ##[group]Runner Image Provisioner
2025-06-06T03:30:18.0928578Z Hosted Compute Agent
2025-06-06T03:30:18.0929123Z Version: 20250508.323
2025-06-06T03:30:18.0929774Z Commit: 81b259f29879f73b4213d199e42d8c3465dae986
2025-06-06T03:30:18.0930452Z Build Date: 2025-05-08T19:40:08Z
2025-06-06T03:30:18.0931029Z ##[endgroup]
2025-06-06T03:30:18.0931535Z ##[group]Operating System
2025-06-06T03:30:18.0932094Z Ubuntu
2025-06-06T03:30:18.0932523Z 24.04.2
2025-06-06T03:30:18.0933021Z LTS
2025-06-06T03:30:18.0933477Z ##[endgroup]
2025-06-06T03:30:18.0933990Z ##[group]Runner Image
2025-06-06T03:30:18.0934533Z Image: ubuntu-24.04
2025-06-06T03:30:18.0934997Z Version: 20250511.1.0
2025-06-06T03:30:18.0935980Z Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250511.1/images/ubuntu/Ubuntu2404-Readme.md
2025-06-06T03:30:18.0937647Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250511.1
2025-06-06T03:30:18.0938656Z ##[endgroup]
2025-06-06T03:30:18.0939652Z ##[group]GITHUB_TOKEN Permissions
2025-06-06T03:30:18.0941424Z Contents: read
2025-06-06T03:30:18.0942031Z Metadata: read
2025-06-06T03:30:18.0942513Z ##[endgroup]
2025-06-06T03:30:18.0944509Z Secret source: Actions
2025-06-06T03:30:18.0945142Z Prepare workflow directory
2025-06-06T03:30:18.1330500Z Prepare all required actions
2025-06-06T03:30:18.1368241Z Getting action download info
2025-06-06T03:30:18.4473415Z ##[group]Download immutable action package 'actions/checkout@v4'
2025-06-06T03:30:18.4474375Z Version: 4.2.2
2025-06-06T03:30:18.4475458Z Digest: sha256:ccb2698953eaebd21c7bf6268a94f9c26518a7e38e27e0b83c1fe1ad049819b1
2025-06-06T03:30:18.4476599Z Source commit SHA: 11bd71901bbe5b1630ceea73d27597364c9af683
2025-06-06T03:30:18.4477524Z ##[endgroup]
2025-06-06T03:30:18.5144180Z ##[group]Download immutable action package 'actions/setup-node@v4'
2025-06-06T03:30:18.5144961Z Version: 4.4.0
2025-06-06T03:30:18.5145637Z Digest: sha256:9427cefe82346e992fb5b949e3569b39d537ae41aa3086483b14eceebfc16bc1
2025-06-06T03:30:18.5146718Z Source commit SHA: 49933ea5288caeca8642d1e84afbd3f7d6820020
2025-06-06T03:30:18.5147678Z ##[endgroup]
2025-06-06T03:30:18.6085832Z ##[group]Download immutable action package 'actions/setup-python@v5'
2025-06-06T03:30:18.6086521Z Version: 5.6.0
2025-06-06T03:30:18.6087126Z Digest: sha256:0b35a0c11c97499e4e0576589036d450b9f5f9da74b7774225b3614b57324404
2025-06-06T03:30:18.6088223Z Source commit SHA: a26af69be951a213d495a4c3e4e4022e16d87065
2025-06-06T03:30:18.6089031Z ##[endgroup]
2025-06-06T03:30:18.7872137Z ##[group]Download immutable action package 'actions/cache@v4'
2025-06-06T03:30:18.7872780Z Version: 4.2.3
2025-06-06T03:30:18.7873402Z Digest: sha256:c8a3bb963e1f1826d8fcc8d1354f0dd29d8ac1db1d4f6f20247055ae11b81ed9
2025-06-06T03:30:18.7874224Z Source commit SHA: 5a3ec84eff668545956fd18022155c47e93e2684
2025-06-06T03:30:18.7874789Z ##[endgroup]
2025-06-06T03:30:18.8859649Z Download action repository 'codecov/codecov-action@v3' (SHA:ab904c41d6ece82784817410c45d8b8c02684457)
2025-06-06T03:30:19.2304290Z Complete job name: Lint, Type Check, and Test (ubuntu-latest)
2025-06-06T03:30:19.3109811Z ##[group]Run actions/checkout@v4
2025-06-06T03:30:19.3110938Z with:
2025-06-06T03:30:19.3111347Z   fetch-depth: 0
2025-06-06T03:30:19.3111785Z   repository: anchapin/pAIssive_income
2025-06-06T03:30:19.3112472Z   token: ***
2025-06-06T03:30:19.3112875Z   ssh-strict: true
2025-06-06T03:30:19.3113266Z   ssh-user: git
2025-06-06T03:30:19.3113671Z   persist-credentials: true
2025-06-06T03:30:19.3114123Z   clean: true
2025-06-06T03:30:19.3114533Z   sparse-checkout-cone-mode: true
2025-06-06T03:30:19.3115017Z   fetch-tags: false
2025-06-06T03:30:19.3115415Z   show-progress: true
2025-06-06T03:30:19.3115815Z   lfs: false
2025-06-06T03:30:19.3116194Z   submodules: false
2025-06-06T03:30:19.3116635Z   set-safe-directory: true
2025-06-06T03:30:19.3117621Z env:
2025-06-06T03:30:19.3118126Z   TOOL_API_KEY: ci-test-api-key-for-github-actions
2025-06-06T03:30:19.3119026Z ##[endgroup]
2025-06-06T03:30:19.4216168Z Syncing repository: anchapin/pAIssive_income
2025-06-06T03:30:19.4219384Z ##[group]Getting Git version info
2025-06-06T03:30:19.4220906Z Working directory is '/home/runner/work/pAIssive_income/pAIssive_income'
2025-06-06T03:30:19.4223046Z [command]/usr/bin/git version
2025-06-06T03:30:19.4277185Z git version 2.49.0
2025-06-06T03:30:19.4303548Z ##[endgroup]
2025-06-06T03:30:19.4317793Z Temporarily overriding HOME='/home/runner/work/_temp/2c54ca29-a517-4ed0-bb3f-6da7a8b6da64' before making global git config changes
2025-06-06T03:30:19.4319269Z Adding repository directory to the temporary git global config as a safe directory
2025-06-06T03:30:19.4322950Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/pAIssive_income/pAIssive_income
2025-06-06T03:30:19.4357039Z Deleting the contents of '/home/runner/work/pAIssive_income/pAIssive_income'
2025-06-06T03:30:19.4360921Z ##[group]Initializing the repository
2025-06-06T03:30:19.4364723Z [command]/usr/bin/git init /home/runner/work/pAIssive_income/pAIssive_income
2025-06-06T03:30:19.4443706Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-06-06T03:30:19.4445335Z hint: is subject to change. To configure the initial branch name to use in all
2025-06-06T03:30:19.4446273Z hint: of your new repositories, which will suppress this warning, call:
2025-06-06T03:30:19.4446963Z hint:
2025-06-06T03:30:19.4447910Z hint: 	git config --global init.defaultBranch <name>
2025-06-06T03:30:19.4449041Z hint:
2025-06-06T03:30:19.4450143Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-06-06T03:30:19.4451789Z hint: 'development'. The just-created branch can be renamed via this command:
2025-06-06T03:30:19.4452906Z hint:
2025-06-06T03:30:19.4453304Z hint: 	git branch -m <name>
2025-06-06T03:30:19.4454136Z Initialized empty Git repository in /home/runner/work/pAIssive_income/pAIssive_income/.git/
2025-06-06T03:30:19.4462771Z [command]/usr/bin/git remote add origin https://github.com/anchapin/pAIssive_income
2025-06-06T03:30:19.4495371Z ##[endgroup]
2025-06-06T03:30:19.4496128Z ##[group]Disabling automatic garbage collection
2025-06-06T03:30:19.4499373Z [command]/usr/bin/git config --local gc.auto 0
2025-06-06T03:30:19.4526538Z ##[endgroup]
2025-06-06T03:30:19.4527376Z ##[group]Setting up auth
2025-06-06T03:30:19.4532968Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-06-06T03:30:19.4561797Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-06-06T03:30:19.4865508Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-06-06T03:30:19.4895565Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-06-06T03:30:19.5113447Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-06-06T03:30:19.5155980Z ##[endgroup]
2025-06-06T03:30:19.5156747Z ##[group]Fetching the repository
2025-06-06T03:30:19.5165088Z [command]/usr/bin/git -c protocol.version=2 fetch --prune --no-recurse-submodules origin +refs/heads/*:refs/remotes/origin/* +refs/tags/*:refs/tags/* +77f2d0d2ea4ef6edf0bd3e6631030b0cc9eb1139:refs/remotes/pull/248/merge
2025-06-06T03:30:20.9300341Z From https://github.com/anchapin/pAIssive_income
2025-06-06T03:30:20.9304194Z  * [new branch]        AB_testing                               -> origin/AB_testing
2025-06-06T03:30:20.9308816Z  * [new branch]        cosine/check/tests-coverage-3aotp1       -> origin/cosine/check/tests-coverage-3aotp1
2025-06-06T03:30:20.9313277Z  * [new branch]        cosine/consolidate-documentation-y12ueo  -> origin/cosine/consolidate-documentation-y12ueo
2025-06-06T03:30:20.9318503Z  * [new branch]        cosine/document-artist-integration-cmw0d7 -> origin/cosine/document-artist-integration-cmw0d7
2025-06-06T03:30:20.9324082Z  * [new branch]        cosine/document-artist-integration-e9tul4 -> origin/cosine/document-artist-integration-e9tul4
2025-06-06T03:30:20.9329632Z  * [new branch]        cosine/document/mem0-rag-best-practices-u3n5ko -> origin/cosine/document/mem0-rag-best-practices-u3n5ko
2025-06-06T03:30:20.9334929Z  * [new branch]        cosine/exclude-gitignored-files-46g79q   -> origin/cosine/exclude-gitignored-files-46g79q
2025-06-06T03:30:20.9339990Z  * [new branch]        cosine/exclude-gitignored-files-pkh9am   -> origin/cosine/exclude-gitignored-files-pkh9am
2025-06-06T03:30:20.9344812Z  * [new branch]        cosine/exclude-gitignored-files-tyg0j1   -> origin/cosine/exclude-gitignored-files-tyg0j1
2025-06-06T03:30:20.9349746Z  * [new branch]        cosine/exclude-gitignored-files-tysnf6   -> origin/cosine/exclude-gitignored-files-tysnf6
2025-06-06T03:30:20.9354403Z  * [new branch]        cosine/feature/add-mcp-support-4p0w0i    -> origin/cosine/feature/add-mcp-support-4p0w0i
2025-06-06T03:30:20.9358928Z  * [new branch]        cosine/feature/check-docs-action-n743l5  -> origin/cosine/feature/check-docs-action-n743l5
2025-06-06T03:30:20.9362052Z  * [new branch]        cosine/feature/expose-tools-as-apis-ipx7ku -> origin/cosine/feature/expose-tools-as-apis-ipx7ku
2025-06-06T03:30:20.9367798Z  * [new branch]        cosine/feature/minimal-agent-tool-registry-demo-4rlasf -> origin/cosine/feature/minimal-agent-tool-registry-demo-4rlasf
2025-06-06T03:30:20.9373780Z  * [new branch]        cosine/feedback-artist-integration-rx12pn -> origin/cosine/feedback-artist-integration-rx12pn
2025-06-06T03:30:20.9378599Z  * [new branch]        cosine/fix-mock-api-server-imports       -> origin/cosine/fix-mock-api-server-imports
2025-06-06T03:30:20.9383541Z  * [new branch]        cosine/fix-setup-script-workflow-robustness -> origin/cosine/fix-setup-script-workflow-robustness
2025-06-06T03:30:20.9390054Z  * [new branch]        cosine/fix/merge-conflicts-security-enhancements-ex2qi5 -> origin/cosine/fix/merge-conflicts-security-enhancements-ex2qi5
2025-06-06T03:30:20.9396683Z  * [new branch]        cosine/implement-agentic-reasoning-logic-tfqnc8 -> origin/cosine/implement-agentic-reasoning-logic-tfqnc8
2025-06-06T03:30:20.9402951Z  * [new branch]        cosine/implement-agentic-reasoning-logic-xa4wq6 -> origin/cosine/implement-agentic-reasoning-logic-xa4wq6
2025-06-06T03:30:20.9409968Z  * [new branch]        cosine/implement-agentic-reasoning-logic-xa4wq6-review-fixes -> origin/cosine/implement-agentic-reasoning-logic-xa4wq6-review-fixes
2025-06-06T03:30:20.9416853Z  * [new branch]        cosine/implement-memory-rag-coordination-61bldz -> origin/cosine/implement-memory-rag-coordination-61bldz
2025-06-06T03:30:20.9422152Z  * [new branch]        cosine/implement-plan-ikybn0             -> origin/cosine/implement-plan-ikybn0
2025-06-06T03:30:20.9426626Z  * [new branch]        cosine/improve-frontend-tests-y4hwd5     -> origin/cosine/improve-frontend-tests-y4hwd5
2025-06-06T03:30:20.9431910Z  * [new branch]        cosine/improve-test-coverage-gzv2h2      -> origin/cosine/improve-test-coverage-gzv2h2
2025-06-06T03:30:20.9436678Z  * [new branch]        cosine/improve-test-coverage-yo5lbz      -> origin/cosine/improve-test-coverage-yo5lbz
2025-06-06T03:30:20.9441400Z  * [new branch]        cosine/initial-setup-olxflf              -> origin/cosine/initial-setup-olxflf
2025-06-06T03:30:20.9446052Z  * [new branch]        cosine/issue-15-improve-test-speed-7lcevh -> origin/cosine/issue-15-improve-test-speed-7lcevh
2025-06-06T03:30:20.9451673Z  * [new branch]        cosine/issue-226-consolidate-folders-fx42xy -> origin/cosine/issue-226-consolidate-folders-fx42xy
2025-06-06T03:30:20.9457395Z  * [new branch]        cosine/issue-50-security-enhancements-yoavn6 -> origin/cosine/issue-50-security-enhancements-yoavn6
2025-06-06T03:30:20.9462950Z  * [new branch]        cosine/issue-71-code-formatting-linting-1si7m3 -> origin/cosine/issue-71-code-formatting-linting-1si7m3
2025-06-06T03:30:20.9469113Z  * [new branch]        cosine/strengthen-dependency-management-2l9xuh -> origin/cosine/strengthen-dependency-management-2l9xuh
2025-06-06T03:30:20.9474964Z  * [new branch]        cosine/strengthen-dependency-management-hmku3y -> origin/cosine/strengthen-dependency-management-hmku3y
2025-06-06T03:30:20.9481024Z  * [new branch]        cosine/strengthen-dependency-management-mt4hkj -> origin/cosine/strengthen-dependency-management-mt4hkj
2025-06-06T03:30:20.9486907Z  * [new branch]        cosine/strengthen-dependency-management-rjzf3w -> origin/cosine/strengthen-dependency-management-rjzf3w
2025-06-06T03:30:20.9492335Z  * [new branch]        cosine/switch-to-ty-over-mypy-41zug5     -> origin/cosine/switch-to-ty-over-mypy-41zug5
2025-06-06T03:30:20.9496614Z  * [new branch]        cosine/yes-response-7pro8f               -> origin/cosine/yes-response-7pro8f
2025-06-06T03:30:20.9500630Z  * [new branch]        data_consistency_tests                   -> origin/data_consistency_tests
2025-06-06T03:30:20.9504905Z  * [new branch]        dependabot/npm_and_yarn/babel/core-7.27.4 -> origin/dependabot/npm_and_yarn/babel/core-7.27.4
2025-06-06T03:30:20.9510305Z  * [new branch]        dependabot/npm_and_yarn/mui/icons-material-7.1.1 -> origin/dependabot/npm_and_yarn/mui/icons-material-7.1.1
2025-06-06T03:30:20.9514350Z  * [new branch]        dependabot/npm_and_yarn/react-router-dom-7.6.1 -> origin/dependabot/npm_and_yarn/react-router-dom-7.6.1
2025-06-06T03:30:20.9517921Z  * [new branch]        dependabot/npm_and_yarn/tailwindcss-4.1.8 -> origin/dependabot/npm_and_yarn/tailwindcss-4.1.8
2025-06-06T03:30:20.9521652Z  * [new branch]        dependabot/npm_and_yarn/ui/react_frontend/npm_and_yarn-a1c60d67af -> origin/dependabot/npm_and_yarn/ui/react_frontend/npm_and_yarn-a1c60d67af
2025-06-06T03:30:20.9525178Z  * [new branch]        dependabot/npm_and_yarn/webpack-5.99.9   -> origin/dependabot/npm_and_yarn/webpack-5.99.9
2025-06-06T03:30:20.9528130Z  * [new branch]        docker-compose-optimization-docs         -> origin/docker-compose-optimization-docs
2025-06-06T03:30:20.9530764Z  * [new branch]        feat/initial-setup-scripts               -> origin/feat/initial-setup-scripts
2025-06-06T03:30:20.9534270Z  * [new branch]        feature/artist-experiment-environment    -> origin/feature/artist-experiment-environment
2025-06-06T03:30:20.9537748Z  * [new branch]        fix-codeql-pnpm-setup                    -> origin/fix-codeql-pnpm-setup
2025-06-06T03:30:20.9540025Z  * [new branch]        fix-frontend-e2e-tests                   -> origin/fix-frontend-e2e-tests
2025-06-06T03:30:20.9543469Z  * [new branch]        fix-frontend-tests-without-workflow-changes -> origin/fix-frontend-tests-without-workflow-changes
2025-06-06T03:30:20.9547094Z  * [new branch]        fix-security-logging-issues              -> origin/fix-security-logging-issues
2025-06-06T03:30:20.9550040Z  * [new branch]        fix-workflow-coverage-thresholds         -> origin/fix-workflow-coverage-thresholds
2025-06-06T03:30:20.9552964Z  * [new branch]        fix/add-uv-to-workflow                   -> origin/fix/add-uv-to-workflow
2025-06-06T03:30:20.9555276Z  * [new branch]        fix/ag-ui-workflow                       -> origin/fix/ag-ui-workflow
2025-06-06T03:30:20.9557937Z  * [new branch]        fix/bandit-config-14988964552            -> origin/fix/bandit-config-14988964552
2025-06-06T03:30:20.9560498Z  * [new branch]        fix/bandit-security-scan-windows         -> origin/fix/bandit-security-scan-windows
2025-06-06T03:30:20.9563153Z  * [new branch]        fix/docker-compose-ag-ui-workflow        -> origin/fix/docker-compose-ag-ui-workflow
2025-06-06T03:30:20.9565751Z  * [new branch]        fix/docker-compose-setup                 -> origin/fix/docker-compose-setup
2025-06-06T03:30:20.9568380Z  * [new branch]        fix/frontend-e2e-tests                   -> origin/fix/frontend-e2e-tests
2025-06-06T03:30:20.9570809Z  * [new branch]        fix/frontend-e2e-tests-workflow          -> origin/fix/frontend-e2e-tests-workflow
2025-06-06T03:30:20.9573504Z  * [new branch]        fix/frontend-e2e-venv-setup              -> origin/fix/frontend-e2e-venv-setup
2025-06-06T03:30:20.9576017Z  * [new branch]        fix/github-actions-dependencies          -> origin/fix/github-actions-dependencies
2025-06-06T03:30:20.9578572Z  * [new branch]        fix/node-cache-issue                     -> origin/fix/node-cache-issue
2025-06-06T03:30:20.9580738Z  * [new branch]        fix/nyc-upgrade-17.1.0                   -> origin/fix/nyc-upgrade-17.1.0
2025-06-06T03:30:20.9583404Z  * [new branch]        fix/optimize-docker-compose-workflow-191 -> origin/fix/optimize-docker-compose-workflow-191
2025-06-06T03:30:20.9586039Z  * [new branch]        fix/pr243-workflow-fixes                 -> origin/fix/pr243-workflow-fixes
2025-06-06T03:30:20.9588925Z  * [new branch]        fix/remove-docker-compose-version        -> origin/fix/remove-docker-compose-version
2025-06-06T03:30:20.9591686Z  * [new branch]        fix/security-scan-issues                 -> origin/fix/security-scan-issues
2025-06-06T03:30:20.9594811Z  * [new branch]        fix/tailwind-node24-compatibility        -> origin/fix/tailwind-node24-compatibility
2025-06-06T03:30:20.9597569Z  * [new branch]        fix/test-coverage-15-percent             -> origin/fix/test-coverage-15-percent
2025-06-06T03:30:20.9600038Z  * [new branch]        fix/tool-api-security-updates            -> origin/fix/tool-api-security-updates
2025-06-06T03:30:20.9602209Z  * [new branch]        fix_ci_workflow                          -> origin/fix_ci_workflow
2025-06-06T03:30:20.9603953Z  * [new branch]        main                                     -> origin/main
2025-06-06T03:30:20.9605808Z  * [new branch]        market_analysis_tests                    -> origin/market_analysis_tests
2025-06-06T03:30:20.9608335Z  * [new branch]        mergify/anchapin/config-update           -> origin/mergify/anchapin/config-update
2025-06-06T03:30:20.9610732Z  * [new branch]        nyc-17.1.0-with-main-changes             -> origin/nyc-17.1.0-with-main-changes
2025-06-06T03:30:20.9613095Z  * [new branch]        openhands-workspace-0agl8nnq             -> origin/openhands-workspace-0agl8nnq
2025-06-06T03:30:20.9615341Z  * [new branch]        performance_testing                      -> origin/performance_testing
2025-06-06T03:30:20.9617848Z  * [new branch]        security_enhancements_backup_20250506    -> origin/security_enhancements_backup_20250506
2025-06-06T03:30:20.9620592Z  * [new branch]        security_enhancements_merge_resolution   -> origin/security_enhancements_merge_resolution
2025-06-06T03:30:20.9623114Z  * [new branch]        test_cov                                 -> origin/test_cov
2025-06-06T03:30:20.9625433Z  * [new branch]        test_cov_api_service                     -> origin/test_cov_api_service
2025-06-06T03:30:20.9628402Z  * [new ref]           77f2d0d2ea4ef6edf0bd3e6631030b0cc9eb1139 -> pull/248/merge
2025-06-06T03:30:20.9632038Z ##[endgroup]
2025-06-06T03:30:20.9633442Z ##[group]Determining the checkout info
2025-06-06T03:30:20.9635051Z ##[endgroup]
2025-06-06T03:30:20.9636163Z [command]/usr/bin/git sparse-checkout disable
2025-06-06T03:30:20.9639194Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-06-06T03:30:20.9642357Z ##[group]Checking out the ref
2025-06-06T03:30:20.9643810Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/248/merge
2025-06-06T03:30:21.1640269Z Note: switching to 'refs/remotes/pull/248/merge'.
2025-06-06T03:30:21.1641447Z 
2025-06-06T03:30:21.1642357Z You are in 'detached HEAD' state. You can look around, make experimental
2025-06-06T03:30:21.1644695Z changes and commit them, and you can discard any commits you make in this
2025-06-06T03:30:21.1646905Z state without impacting any branches by switching back to a branch.
2025-06-06T03:30:21.1648343Z 
2025-06-06T03:30:21.1649036Z If you want to create a new branch to retain commits you create, you may
2025-06-06T03:30:21.1650696Z do so (now or later) by using -c with the switch command. Example:
2025-06-06T03:30:21.1651919Z 
2025-06-06T03:30:21.1652313Z   git switch -c <new-branch-name>
2025-06-06T03:30:21.1652979Z 
2025-06-06T03:30:21.1653358Z Or undo this operation with:
2025-06-06T03:30:21.1653949Z 
2025-06-06T03:30:21.1654268Z   git switch -
2025-06-06T03:30:21.1654718Z 
2025-06-06T03:30:21.1655510Z Turn off this advice by setting config variable advice.detachedHead to false
2025-06-06T03:30:21.1656638Z 
2025-06-06T03:30:21.1658185Z HEAD is now at 77f2d0d2 Merge d31d465bd32c55c6f71766a07347c79350e93bb8 into 2c43a7493182407c5f3589a4673eed67f7d932b4
2025-06-06T03:30:21.1662259Z ##[endgroup]
2025-06-06T03:30:21.1699669Z [command]/usr/bin/git log -1 --format=%H
2025-06-06T03:30:21.1722520Z 77f2d0d2ea4ef6edf0bd3e6631030b0cc9eb1139
2025-06-06T03:30:21.2010052Z ##[group]Run actions/setup-node@v4
2025-06-06T03:30:21.2011365Z with:
2025-06-06T03:30:21.2012055Z   node-version: 20
2025-06-06T03:30:21.2012804Z   cache: npm
2025-06-06T03:30:21.2013517Z   always-auth: false
2025-06-06T03:30:21.2014325Z   check-latest: false
2025-06-06T03:30:21.2015366Z   token: ***
2025-06-06T03:30:21.2016067Z env:
2025-06-06T03:30:21.2016873Z   TOOL_API_KEY: ci-test-api-key-for-github-actions
2025-06-06T03:30:21.2018121Z ##[endgroup]
2025-06-06T03:30:21.3800608Z Found in cache @ /opt/hostedtoolcache/node/20.19.1/x64
2025-06-06T03:30:21.3806381Z ##[group]Environment details
2025-06-06T03:30:22.9865766Z node: v20.19.1
2025-06-06T03:30:22.9866184Z npm: 10.8.2
2025-06-06T03:30:22.9866496Z yarn: 1.22.22
2025-06-06T03:30:22.9867668Z ##[endgroup]
2025-06-06T03:30:22.9889255Z [command]/opt/hostedtoolcache/node/20.19.1/x64/bin/npm config get cache
2025-06-06T03:30:23.2504038Z /home/runner/.npm
2025-06-06T03:30:23.3340806Z Cache hit for: node-cache-Linux-x64-npm-0f60aa295b334d72c223755e50e932bfe478a81609d584d0814ea38db1195a91
2025-06-06T03:30:23.4032074Z Received 685 of 685 (100.0%), 0.0 MBs/sec
2025-06-06T03:30:23.4032864Z Cache Size: ~0 MB (685 B)
2025-06-06T03:30:23.4057605Z [command]/usr/bin/tar -xf /home/runner/work/_temp/9715a0b8-075e-4ada-a35b-8b3f39d67315/cache.tzst -P -C /home/runner/work/pAIssive_income/pAIssive_income --use-compress-program unzstd
2025-06-06T03:30:23.4109193Z Cache restored successfully
2025-06-06T03:30:23.4113996Z Cache restored from key: node-cache-Linux-x64-npm-0f60aa295b334d72c223755e50e932bfe478a81609d584d0814ea38db1195a91
2025-06-06T03:30:23.4220030Z ##[group]Run npm install -g pnpm@latest
2025-06-06T03:30:23.4220400Z [36;1mnpm install -g pnpm@latest[0m
2025-06-06T03:30:23.4420988Z shell: /usr/bin/bash -e {0}
2025-06-06T03:30:23.4421260Z env:
2025-06-06T03:30:23.4421493Z   TOOL_API_KEY: ci-test-api-key-for-github-actions
2025-06-06T03:30:23.4421780Z ##[endgroup]
2025-06-06T03:30:25.9378939Z 
2025-06-06T03:30:25.9385302Z added 1 package in 2s
2025-06-06T03:30:25.9385548Z 
2025-06-06T03:30:25.9385784Z 1 package is looking for funding
2025-06-06T03:30:25.9386069Z   run `npm fund` for details
2025-06-06T03:30:25.9508143Z ##[group]Run pnpm install
2025-06-06T03:30:25.9508479Z [36;1mpnpm install[0m
2025-06-06T03:30:25.9508717Z [36;1mpnpm tailwind:build[0m
2025-06-06T03:30:25.9559282Z shell: /usr/bin/bash -e {0}
2025-06-06T03:30:25.9559506Z env:
2025-06-06T03:30:25.9559733Z   TOOL_API_KEY: ci-test-api-key-for-github-actions
2025-06-06T03:30:25.9560038Z ##[endgroup]
2025-06-06T03:30:26.4484377Z Lockfile is up to date, resolution step is skipped
2025-06-06T03:30:26.5316351Z Progress: resolved 1, reused 0, downloaded 0, added 0
2025-06-06T03:30:26.6533670Z Packages: +874
2025-06-06T03:30:26.6534511Z ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
2025-06-06T03:30:27.5331217Z Progress: resolved 874, reused 0, downloaded 82, added 35
2025-06-06T03:30:28.5333027Z Progress: resolved 874, reused 0, downloaded 317, added 317
2025-06-06T03:30:29.5341296Z Progress: resolved 874, reused 0, downloaded 631, added 620
2025-06-06T03:30:30.5339084Z Progress: resolved 874, reused 0, downloaded 873, added 873
2025-06-06T03:30:31.5353302Z Progress: resolved 874, reused 0, downloaded 874, added 873
2025-06-06T03:30:31.7634212Z Progress: resolved 874, reused 0, downloaded 874, added 874, done
2025-06-06T03:30:32.1673280Z 
2025-06-06T03:30:32.1674065Z dependencies:
2025-06-06T03:30:32.1674606Z + @mui/icons-material 7.1.0
2025-06-06T03:30:32.1675086Z + @mui/material 7.1.0
2025-06-06T03:30:32.1675533Z + react 19.1.0
2025-06-06T03:30:32.1675934Z + react-dom 19.1.0
2025-06-06T03:30:32.1676317Z + react-router-dom 7.6.0
2025-06-06T03:30:32.1676736Z + recharts 2.15.3
2025-06-06T03:30:32.1676945Z 
2025-06-06T03:30:32.1677115Z devDependencies:
2025-06-06T03:30:32.1677733Z + @babel/core 7.27.1
2025-06-06T03:30:32.1678142Z + @babel/preset-env 7.27.2
2025-06-06T03:30:32.1678603Z + @babel/preset-react 7.27.1
2025-06-06T03:30:32.1679066Z + autoprefixer 10.4.21
2025-06-06T03:30:32.1679530Z + babel-loader 10.0.0
2025-06-06T03:30:32.1679974Z + css-loader 7.1.2
2025-06-06T03:30:32.1680311Z + cssnano 6.1.2
2025-06-06T03:30:32.1680655Z + eslint 9.28.0
2025-06-06T03:30:32.1681003Z + html-webpack-plugin 5.6.3
2025-06-06T03:30:32.1681238Z + mocha 11.3.0
2025-06-06T03:30:32.1681432Z + nyc 17.1.0
2025-06-06T03:30:32.1681668Z + postcss 8.5.3
2025-06-06T03:30:32.1681875Z + postcss-preset-env 9.6.0
2025-06-06T03:30:32.1682109Z + style-loader 4.0.0
2025-06-06T03:30:32.1682326Z + tailwindcss 3.4.17
2025-06-06T03:30:32.1682523Z + webpack 5.99.8
2025-06-06T03:30:32.1682721Z + webpack-cli 6.0.1
2025-06-06T03:30:32.1682934Z + webpack-dev-server 5.2.1
2025-06-06T03:30:32.1683082Z 
2025-06-06T03:30:32.3019894Z Done in 6.3s using pnpm v10.11.1
2025-06-06T03:30:32.6864061Z 
2025-06-06T03:30:32.6866666Z > paissive-income@1.0.0 tailwind:build /home/runner/work/pAIssive_income/pAIssive_income
2025-06-06T03:30:32.6867169Z > node ui/tailwind_utils.js
2025-06-06T03:30:32.6867545Z 
2025-06-06T03:30:32.7175842Z [2025-06-06T03:30:32.715Z] Loaded configuration from ./ui/tailwind.config.json
2025-06-06T03:30:32.7182732Z [2025-06-06T03:30:32.718Z] INFO: Building Tailwind CSS with options: {"files":1,"watch":false,"parallel":true,"postcss":true,"webpack":false,"vite":false}
2025-06-06T03:30:32.7184757Z [2025-06-06T03:30:32.718Z] INFO: Building multiple Tailwind CSS files {"fileCount":1,"watch":false,"parallel":true}
2025-06-06T03:30:32.7186071Z [2025-06-06T03:30:32.718Z] INFO: Building in parallel with max 2 concurrent builds
2025-06-06T03:30:32.7190407Z [2025-06-06T03:30:32.718Z] INFO: Building Tailwind CSS: ./ui/static/css/tailwind.css -> ./ui/static/css/tailwind.output.css {"minify":true,"configPath":"./tailwind.config.js"}
2025-06-06T03:30:33.6495057Z [2025-06-06T03:30:33.649Z] INFO: Successfully built Tailwind CSS: ./ui/static/css/tailwind.output.css
2025-06-06T03:30:33.6690364Z ##[group]Run actions/setup-python@v5
2025-06-06T03:30:33.6690639Z with:
2025-06-06T03:30:33.6690820Z   python-version: 3.12
2025-06-06T03:30:33.6691036Z   check-latest: false
2025-06-06T03:30:33.6691350Z   token: ***
2025-06-06T03:30:33.6691539Z   update-environment: true
2025-06-06T03:30:33.6691764Z   allow-prereleases: false
2025-06-06T03:30:33.6691969Z   freethreaded: false
2025-06-06T03:30:33.6692178Z env:
2025-06-06T03:30:33.6692386Z   TOOL_API_KEY: ci-test-api-key-for-github-actions
2025-06-06T03:30:33.6692662Z ##[endgroup]
2025-06-06T03:30:33.8332491Z ##[group]Installed versions
2025-06-06T03:30:33.8417916Z Successfully set up CPython (3.12.10)
2025-06-06T03:30:33.8418597Z ##[endgroup]
2025-06-06T03:30:33.8541731Z ##[group]Run actions/setup-node@v4
2025-06-06T03:30:33.8542000Z with:
2025-06-06T03:30:33.8542168Z   node-version: 20
2025-06-06T03:30:33.8542359Z   cache: npm
2025-06-06T03:30:33.8542535Z   always-auth: false
2025-06-06T03:30:33.8542728Z   check-latest: false
2025-06-06T03:30:33.8543021Z   token: ***
2025-06-06T03:30:33.8543191Z env:
2025-06-06T03:30:33.8543401Z   TOOL_API_KEY: ci-test-api-key-for-github-actions
2025-06-06T03:30:33.8543749Z   pythonLocation: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:30:33.8544159Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib/pkgconfig
2025-06-06T03:30:33.8544545Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:30:33.8545073Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:30:33.8545415Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:30:33.8545767Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib
2025-06-06T03:30:33.8546080Z ##[endgroup]
2025-06-06T03:30:34.0460252Z Found in cache @ /opt/hostedtoolcache/node/20.19.1/x64
2025-06-06T03:30:34.0466738Z ##[group]Environment details
2025-06-06T03:30:34.2033214Z node: v20.19.1
2025-06-06T03:30:34.2033603Z npm: 10.8.2
2025-06-06T03:30:34.2033903Z yarn: 1.22.22
2025-06-06T03:30:34.2034360Z ##[endgroup]
2025-06-06T03:30:34.2070631Z [command]/opt/hostedtoolcache/node/20.19.1/x64/bin/npm config get cache
2025-06-06T03:30:34.3078381Z /home/runner/.npm
2025-06-06T03:30:34.3902565Z Cache hit for: node-cache-Linux-x64-npm-0f60aa295b334d72c223755e50e932bfe478a81609d584d0814ea38db1195a91
2025-06-06T03:30:34.4665052Z Received 685 of 685 (100.0%), 0.0 MBs/sec
2025-06-06T03:30:34.4665721Z Cache Size: ~0 MB (685 B)
2025-06-06T03:30:34.4692328Z [command]/usr/bin/tar -xf /home/runner/work/_temp/00f13001-7362-43af-9378-5309c890feca/cache.tzst -P -C /home/runner/work/pAIssive_income/pAIssive_income --use-compress-program unzstd
2025-06-06T03:30:34.4735694Z Cache restored successfully
2025-06-06T03:30:34.4741704Z Cache restored from key: node-cache-Linux-x64-npm-0f60aa295b334d72c223755e50e932bfe478a81609d584d0814ea38db1195a91
2025-06-06T03:30:34.4835851Z ##[group]Run npm install -g pnpm@latest
2025-06-06T03:30:34.4836193Z [36;1mnpm install -g pnpm@latest[0m
2025-06-06T03:30:34.4888638Z shell: /usr/bin/bash -e {0}
2025-06-06T03:30:34.4888863Z env:
2025-06-06T03:30:34.4889092Z   TOOL_API_KEY: ci-test-api-key-for-github-actions
2025-06-06T03:30:34.4889463Z   pythonLocation: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:30:34.4889879Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib/pkgconfig
2025-06-06T03:30:34.4890274Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:30:34.4890641Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:30:34.4890996Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:30:34.4891360Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib
2025-06-06T03:30:34.4891665Z ##[endgroup]
2025-06-06T03:30:35.3469804Z 
2025-06-06T03:30:35.3470386Z changed 1 package in 796ms
2025-06-06T03:30:35.3472294Z 
2025-06-06T03:30:35.3472960Z 1 package is looking for funding
2025-06-06T03:30:35.3473471Z   run `npm fund` for details
2025-06-06T03:30:40.1417195Z ##[group]Run actions/cache@v4
2025-06-06T03:30:40.1417823Z with:
2025-06-06T03:30:40.1418045Z   path: ~/.cache/uv
~/.uv

2025-06-06T03:30:40.1418502Z   key: Linux-uv-fc2eba632c5d0bd56da71a848f61f4a5163601b0f207bee3713baa3b4e5f1f61
2025-06-06T03:30:40.1419001Z   restore-keys: Linux-uv-

2025-06-06T03:30:40.1419278Z   enableCrossOsArchive: false
2025-06-06T03:30:40.1419562Z   fail-on-cache-miss: false
2025-06-06T03:30:40.1419822Z   lookup-only: false
2025-06-06T03:30:40.1420077Z   save-always: false
2025-06-06T03:30:40.1420302Z env:
2025-06-06T03:30:40.1420554Z   TOOL_API_KEY: ci-test-api-key-for-github-actions
2025-06-06T03:30:40.1420972Z   pythonLocation: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:30:40.1421456Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib/pkgconfig
2025-06-06T03:30:40.1421847Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:30:40.1422213Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:30:40.1422676Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:30:40.1423061Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib
2025-06-06T03:30:40.1423366Z ##[endgroup]
2025-06-06T03:30:40.3307562Z Cache not found for input keys: Linux-uv-fc2eba632c5d0bd56da71a848f61f4a5163601b0f207bee3713baa3b4e5f1f61, Linux-uv-
2025-06-06T03:30:40.3393575Z ##[group]Run curl -LsSf https://astral.sh/uv/install.sh | sh
2025-06-06T03:30:40.3394191Z [36;1mcurl -LsSf https://astral.sh/uv/install.sh | sh[0m
2025-06-06T03:30:40.3394536Z [36;1mecho "$HOME/.cargo/bin" >> $GITHUB_PATH[0m
2025-06-06T03:30:40.3394832Z [36;1m# Verify uv is installed and in PATH[0m
2025-06-06T03:30:40.3395123Z [36;1mwhich uv || echo "uv not found in PATH"[0m
2025-06-06T03:30:40.3446322Z shell: /usr/bin/bash -e {0}
2025-06-06T03:30:40.3446555Z env:
2025-06-06T03:30:40.3446787Z   TOOL_API_KEY: ci-test-api-key-for-github-actions
2025-06-06T03:30:40.3447155Z   pythonLocation: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:30:40.3447780Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib/pkgconfig
2025-06-06T03:30:40.3448180Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:30:40.3448524Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:30:40.3448933Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:30:40.3449302Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib
2025-06-06T03:30:40.3449602Z ##[endgroup]
2025-06-06T03:30:40.7016198Z downloading uv 0.7.11 x86_64-unknown-linux-gnu
2025-06-06T03:30:40.8846408Z no checksums to verify
2025-06-06T03:30:41.1954255Z installing to /home/runner/.local/bin
2025-06-06T03:30:41.1995643Z   uv
2025-06-06T03:30:41.2017818Z   uvx
2025-06-06T03:30:41.2018201Z everything's installed!
2025-06-06T03:30:41.2096303Z /home/runner/.local/bin/uv
2025-06-06T03:30:41.2130301Z ##[group]Run # Ensure pip is up to date
2025-06-06T03:30:41.2130641Z [36;1m# Ensure pip is up to date[0m
2025-06-06T03:30:41.2130931Z [36;1mpython -m pip install --upgrade pip[0m
2025-06-06T03:30:41.2131191Z [36;1m[0m
2025-06-06T03:30:41.2131392Z [36;1m# Install uv if not already available[0m
2025-06-06T03:30:41.2131686Z [36;1mwhich uv || python -m pip install uv[0m
2025-06-06T03:30:41.2131943Z [36;1m[0m
2025-06-06T03:30:41.2132127Z [36;1m# Install testing tools[0m
2025-06-06T03:30:41.2132528Z [36;1mpython -m pip install ruff pyright pytest pytest-cov pytest-xdist pytest-asyncio[0m
2025-06-06T03:30:41.2132927Z [36;1m[0m
2025-06-06T03:30:41.2133105Z [36;1m# Install requirements[0m
2025-06-06T03:30:41.2133500Z [36;1mif [ -f requirements-dev.txt ]; then python -m pip install -r requirements-dev.txt; fi[0m
2025-06-06T03:30:41.2134025Z [36;1mif [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi[0m
2025-06-06T03:30:41.2134417Z [36;1m[0m
2025-06-06T03:30:41.2134636Z [36;1m# Install MCP SDK using the installation script[0m
2025-06-06T03:30:41.2135002Z [36;1mecho "Installing MCP SDK using installation script..."[0m
2025-06-06T03:30:41.2135330Z [36;1mpython install_mcp_sdk.py[0m
2025-06-06T03:30:41.2186585Z shell: /usr/bin/bash -e {0}
2025-06-06T03:30:41.2186814Z env:
2025-06-06T03:30:41.2187038Z   TOOL_API_KEY: ci-test-api-key-for-github-actions
2025-06-06T03:30:41.2187781Z   pythonLocation: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:30:41.2188186Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib/pkgconfig
2025-06-06T03:30:41.2188595Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:30:41.2188952Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:30:41.2189301Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:30:41.2189655Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib
2025-06-06T03:30:41.2189949Z ##[endgroup]
2025-06-06T03:30:43.8776136Z Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (25.1.1)
2025-06-06T03:30:44.2126239Z /home/runner/.local/bin/uv
2025-06-06T03:30:44.9857677Z Collecting ruff
2025-06-06T03:30:45.0238060Z   Downloading ruff-0.11.13-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (25 kB)
2025-06-06T03:30:45.0687698Z Collecting pyright
2025-06-06T03:30:45.0728345Z   Downloading pyright-1.1.401-py3-none-any.whl.metadata (6.6 kB)
2025-06-06T03:30:45.1118431Z Collecting pytest
2025-06-06T03:30:45.1154421Z   Downloading pytest-8.4.0-py3-none-any.whl.metadata (7.7 kB)
2025-06-06T03:30:45.1332967Z Collecting pytest-cov
2025-06-06T03:30:45.1368956Z   Downloading pytest_cov-6.1.1-py3-none-any.whl.metadata (28 kB)
2025-06-06T03:30:45.1577550Z Collecting pytest-xdist
2025-06-06T03:30:45.1613795Z   Downloading pytest_xdist-3.7.0-py3-none-any.whl.metadata (3.0 kB)
2025-06-06T03:30:45.1976270Z Collecting pytest-asyncio
2025-06-06T03:30:45.2011481Z   Downloading pytest_asyncio-1.0.0-py3-none-any.whl.metadata (4.0 kB)
2025-06-06T03:30:45.2185862Z Collecting nodeenv>=1.6.0 (from pyright)
2025-06-06T03:30:45.2220071Z   Downloading nodeenv-1.9.1-py2.py3-none-any.whl.metadata (21 kB)
2025-06-06T03:30:45.2416542Z Collecting typing-extensions>=4.1 (from pyright)
2025-06-06T03:30:45.2454118Z   Downloading typing_extensions-4.14.0-py3-none-any.whl.metadata (3.0 kB)
2025-06-06T03:30:45.2564110Z Collecting iniconfig>=1 (from pytest)
2025-06-06T03:30:45.2599074Z   Downloading iniconfig-2.1.0-py3-none-any.whl.metadata (2.7 kB)
2025-06-06T03:30:45.2777075Z Collecting packaging>=20 (from pytest)
2025-06-06T03:30:45.2812203Z   Downloading packaging-25.0-py3-none-any.whl.metadata (3.3 kB)
2025-06-06T03:30:45.2949955Z Collecting pluggy<2,>=1.5 (from pytest)
2025-06-06T03:30:45.2984697Z   Downloading pluggy-1.6.0-py3-none-any.whl.metadata (4.8 kB)
2025-06-06T03:30:45.3192736Z Collecting pygments>=2.7.2 (from pytest)
2025-06-06T03:30:45.3232620Z   Downloading pygments-2.19.1-py3-none-any.whl.metadata (2.5 kB)
2025-06-06T03:30:45.6159633Z Collecting coverage>=7.5 (from coverage[toml]>=7.5->pytest-cov)
2025-06-06T03:30:45.6199576Z   Downloading coverage-7.8.2-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (8.9 kB)
2025-06-06T03:30:45.6342916Z Collecting execnet>=2.1 (from pytest-xdist)
2025-06-06T03:30:45.6383392Z   Downloading execnet-2.1.1-py3-none-any.whl.metadata (2.9 kB)
2025-06-06T03:30:45.6832698Z Downloading ruff-0.11.13-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.6 MB)
2025-06-06T03:30:45.7451341Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 11.6/11.6 MB 198.8 MB/s eta 0:00:00
2025-06-06T03:30:45.7499893Z Downloading pyright-1.1.401-py3-none-any.whl (5.6 MB)
2025-06-06T03:30:45.7881334Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 5.6/5.6 MB 153.0 MB/s eta 0:00:00
2025-06-06T03:30:45.7917836Z Downloading pytest-8.4.0-py3-none-any.whl (363 kB)
2025-06-06T03:30:45.7985672Z Downloading pluggy-1.6.0-py3-none-any.whl (20 kB)
2025-06-06T03:30:45.8039757Z Downloading pytest_cov-6.1.1-py3-none-any.whl (23 kB)
2025-06-06T03:30:45.8094989Z Downloading pytest_xdist-3.7.0-py3-none-any.whl (46 kB)
2025-06-06T03:30:45.8151844Z Downloading pytest_asyncio-1.0.0-py3-none-any.whl (15 kB)
2025-06-06T03:30:45.8209359Z Downloading coverage-7.8.2-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (245 kB)
2025-06-06T03:30:45.8282653Z Downloading execnet-2.1.1-py3-none-any.whl (40 kB)
2025-06-06T03:30:45.8336510Z Downloading iniconfig-2.1.0-py3-none-any.whl (6.0 kB)
2025-06-06T03:30:45.8421977Z Downloading nodeenv-1.9.1-py2.py3-none-any.whl (22 kB)
2025-06-06T03:30:45.8475961Z Downloading packaging-25.0-py3-none-any.whl (66 kB)
2025-06-06T03:30:45.8530618Z Downloading pygments-2.19.1-py3-none-any.whl (1.2 MB)
2025-06-06T03:30:45.8621160Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.2/1.2 MB 150.1 MB/s eta 0:00:00
2025-06-06T03:30:45.8655137Z Downloading typing_extensions-4.14.0-py3-none-any.whl (43 kB)
2025-06-06T03:30:45.9830251Z Installing collected packages: typing-extensions, ruff, pygments, pluggy, packaging, nodeenv, iniconfig, execnet, coverage, pytest, pyright, pytest-xdist, pytest-cov, pytest-asyncio
2025-06-06T03:30:48.1454823Z 
2025-06-06T03:30:48.1476834Z Successfully installed coverage-7.8.2 execnet-2.1.1 iniconfig-2.1.0 nodeenv-1.9.1 packaging-25.0 pluggy-1.6.0 pygments-2.19.1 pyright-1.1.401 pytest-8.4.0 pytest-asyncio-1.0.0 pytest-cov-6.1.1 pytest-xdist-3.7.0 ruff-0.11.13 typing-extensions-4.14.0
2025-06-06T03:30:48.6676238Z Requirement already satisfied: ruff>=0.1.6 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements-dev.txt (line 2)) (0.11.13)
2025-06-06T03:30:48.6680863Z Requirement already satisfied: pyright>=1.1.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements-dev.txt (line 3)) (1.1.401)
2025-06-06T03:30:48.6685457Z Requirement already satisfied: pytest>=7.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements-dev.txt (line 4)) (8.4.0)
2025-06-06T03:30:48.6690263Z Requirement already satisfied: pytest-cov>=4.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements-dev.txt (line 5)) (6.1.1)
2025-06-06T03:30:48.7239057Z Collecting pytest-mock>=3.10.0 (from -r requirements-dev.txt (line 6))
2025-06-06T03:30:48.7560254Z   Downloading pytest_mock-3.14.1-py3-none-any.whl.metadata (3.9 kB)
2025-06-06T03:30:48.7604238Z Requirement already satisfied: pytest-xdist>=3.2.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements-dev.txt (line 7)) (3.7.0)
2025-06-06T03:30:48.7609348Z Requirement already satisfied: pytest-asyncio>=0.26.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements-dev.txt (line 8)) (1.0.0)
2025-06-06T03:30:48.7998384Z Collecting pre-commit>=3.0.0 (from -r requirements-dev.txt (line 10))
2025-06-06T03:30:48.8036408Z   Downloading pre_commit-4.2.0-py2.py3-none-any.whl.metadata (1.3 kB)
2025-06-06T03:30:49.0400202Z Collecting hypothesis>=6.76.0 (from -r requirements-dev.txt (line 11))
2025-06-06T03:30:49.0437961Z   Downloading hypothesis-6.135.1-py3-none-any.whl.metadata (5.6 kB)
2025-06-06T03:30:49.2224101Z Collecting numpy>=1.24.3 (from -r requirements-dev.txt (line 12))
2025-06-06T03:30:49.2260426Z   Downloading numpy-2.2.6-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (62 kB)
2025-06-06T03:30:49.3503226Z Collecting pydantic>=2.0.0 (from -r requirements-dev.txt (line 13))
2025-06-06T03:30:49.3542566Z   Downloading pydantic-2.11.5-py3-none-any.whl.metadata (67 kB)
2025-06-06T03:30:49.8350230Z Collecting aiohttp>=3.9.0 (from -r requirements-dev.txt (line 14))
2025-06-06T03:30:49.8393288Z   Downloading aiohttp-3.12.9-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (7.6 kB)
2025-06-06T03:30:49.8584901Z Collecting pyjwt>=2.0.0 (from -r requirements-dev.txt (line 15))
2025-06-06T03:30:49.8626551Z   Downloading PyJWT-2.10.1-py3-none-any.whl.metadata (4.0 kB)
2025-06-06T03:30:49.8773155Z Collecting pathspec>=0.12.1 (from -r requirements-dev.txt (line 16))
2025-06-06T03:30:49.8811046Z   Downloading pathspec-0.12.1-py3-none-any.whl.metadata (21 kB)
2025-06-06T03:30:49.9003525Z Collecting types-PyYAML (from -r requirements-dev.txt (line 17))
2025-06-06T03:30:49.9053929Z   Downloading types_pyyaml-6.0.12.20250516-py3-none-any.whl.metadata (1.8 kB)
2025-06-06T03:30:49.9405902Z Collecting pyyaml>=6.0.0 (from -r requirements-dev.txt (line 18))
2025-06-06T03:30:49.9440734Z   Downloading PyYAML-6.0.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.1 kB)
2025-06-06T03:30:49.9562229Z Collecting modelcontextprotocol>=0.1.0 (from -r requirements-dev.txt (line 19))
2025-06-06T03:30:49.9607037Z   Downloading modelcontextprotocol-0.1.0-py3-none-any.whl.metadata (6.3 kB)
2025-06-06T03:30:49.9792673Z Collecting flask>=2.3.0 (from -r requirements-dev.txt (line 22))
2025-06-06T03:30:49.9827867Z   Downloading flask-3.1.1-py3-none-any.whl.metadata (3.0 kB)
2025-06-06T03:30:49.9984367Z Collecting flask-sqlalchemy>=3.1.0 (from -r requirements-dev.txt (line 23))
2025-06-06T03:30:50.0018019Z   Downloading flask_sqlalchemy-3.1.1-py3-none-any.whl.metadata (3.4 kB)
2025-06-06T03:30:50.0169718Z Collecting flask-migrate>=4.0.0 (from -r requirements-dev.txt (line 24))
2025-06-06T03:30:50.0204746Z   Downloading Flask_Migrate-4.1.0-py3-none-any.whl.metadata (3.3 kB)
2025-06-06T03:30:50.0818815Z Collecting psycopg2-binary>=2.9.9 (from -r requirements-dev.txt (line 25))
2025-06-06T03:30:50.0858372Z   Downloading psycopg2_binary-2.9.10-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.9 kB)
2025-06-06T03:30:50.3464208Z Collecting sqlalchemy>=2.0.0 (from -r requirements-dev.txt (line 26))
2025-06-06T03:30:50.3507724Z   Downloading sqlalchemy-2.0.41-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.6 kB)
2025-06-06T03:30:50.4307739Z Collecting bcrypt>=4.0.1 (from -r requirements-dev.txt (line 27))
2025-06-06T03:30:50.4347662Z   Downloading bcrypt-4.3.0-cp39-abi3-manylinux_2_34_x86_64.whl.metadata (10 kB)
2025-06-06T03:30:50.4504671Z Collecting types-Flask (from -r requirements-dev.txt (line 28))
2025-06-06T03:30:50.4551059Z   Downloading types_Flask-1.1.6-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:30:50.4681939Z Collecting types-flask-sqlalchemy (from -r requirements-dev.txt (line 29))
2025-06-06T03:30:50.4727017Z   Downloading types_Flask_SQLAlchemy-2.5.9.4-py3-none-any.whl.metadata (1.6 kB)
2025-06-06T03:30:50.4783599Z Requirement already satisfied: nodeenv>=1.6.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from pyright>=1.1.0->-r requirements-dev.txt (line 3)) (1.9.1)
2025-06-06T03:30:50.4789367Z Requirement already satisfied: typing-extensions>=4.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from pyright>=1.1.0->-r requirements-dev.txt (line 3)) (4.14.0)
2025-06-06T03:30:50.4809080Z Requirement already satisfied: iniconfig>=1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from pytest>=7.0.0->-r requirements-dev.txt (line 4)) (2.1.0)
2025-06-06T03:30:50.4814203Z Requirement already satisfied: packaging>=20 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from pytest>=7.0.0->-r requirements-dev.txt (line 4)) (25.0)
2025-06-06T03:30:50.4820121Z Requirement already satisfied: pluggy<2,>=1.5 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from pytest>=7.0.0->-r requirements-dev.txt (line 4)) (1.6.0)
2025-06-06T03:30:50.4825530Z Requirement already satisfied: pygments>=2.7.2 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from pytest>=7.0.0->-r requirements-dev.txt (line 4)) (2.19.1)
2025-06-06T03:30:50.4862871Z Requirement already satisfied: coverage>=7.5 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from coverage[toml]>=7.5->pytest-cov>=4.0.0->-r requirements-dev.txt (line 5)) (7.8.2)
2025-06-06T03:30:50.4891484Z Requirement already satisfied: execnet>=2.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from pytest-xdist>=3.2.0->-r requirements-dev.txt (line 7)) (2.1.1)
2025-06-06T03:30:50.5019195Z Collecting cfgv>=2.0.0 (from pre-commit>=3.0.0->-r requirements-dev.txt (line 10))
2025-06-06T03:30:50.5061398Z   Downloading cfgv-3.4.0-py2.py3-none-any.whl.metadata (8.5 kB)
2025-06-06T03:30:50.5519259Z Collecting identify>=1.0.0 (from pre-commit>=3.0.0->-r requirements-dev.txt (line 10))
2025-06-06T03:30:50.5554085Z   Downloading identify-2.6.12-py2.py3-none-any.whl.metadata (4.4 kB)
2025-06-06T03:30:50.6002059Z Collecting virtualenv>=20.10.0 (from pre-commit>=3.0.0->-r requirements-dev.txt (line 10))
2025-06-06T03:30:50.6038345Z   Downloading virtualenv-20.31.2-py3-none-any.whl.metadata (4.5 kB)
2025-06-06T03:30:50.6227954Z Collecting attrs>=22.2.0 (from hypothesis>=6.76.0->-r requirements-dev.txt (line 11))
2025-06-06T03:30:50.6263040Z   Downloading attrs-25.3.0-py3-none-any.whl.metadata (10 kB)
2025-06-06T03:30:50.6482194Z Collecting sortedcontainers<3.0.0,>=2.1.0 (from hypothesis>=6.76.0->-r requirements-dev.txt (line 11))
2025-06-06T03:30:50.6519071Z   Downloading sortedcontainers-2.4.0-py2.py3-none-any.whl.metadata (10 kB)
2025-06-06T03:30:50.6662730Z Collecting annotated-types>=0.6.0 (from pydantic>=2.0.0->-r requirements-dev.txt (line 13))
2025-06-06T03:30:50.6696476Z   Downloading annotated_types-0.7.0-py3-none-any.whl.metadata (15 kB)
2025-06-06T03:30:51.2884377Z Collecting pydantic-core==2.33.2 (from pydantic>=2.0.0->-r requirements-dev.txt (line 13))
2025-06-06T03:30:51.2929392Z   Downloading pydantic_core-2.33.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (6.8 kB)
2025-06-06T03:30:51.3047945Z Collecting typing-inspection>=0.4.0 (from pydantic>=2.0.0->-r requirements-dev.txt (line 13))
2025-06-06T03:30:51.3085757Z   Downloading typing_inspection-0.4.1-py3-none-any.whl.metadata (2.6 kB)
2025-06-06T03:30:51.3274290Z Collecting aiohappyeyeballs>=2.5.0 (from aiohttp>=3.9.0->-r requirements-dev.txt (line 14))
2025-06-06T03:30:51.3311526Z   Downloading aiohappyeyeballs-2.6.1-py3-none-any.whl.metadata (5.9 kB)
2025-06-06T03:30:51.3423424Z Collecting aiosignal>=1.1.2 (from aiohttp>=3.9.0->-r requirements-dev.txt (line 14))
2025-06-06T03:30:51.3458562Z   Downloading aiosignal-1.3.2-py2.py3-none-any.whl.metadata (3.8 kB)
2025-06-06T03:30:51.4068313Z Collecting frozenlist>=1.1.1 (from aiohttp>=3.9.0->-r requirements-dev.txt (line 14))
2025-06-06T03:30:51.4113421Z   Downloading frozenlist-1.6.2-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (17 kB)
2025-06-06T03:30:51.5976611Z Collecting multidict<7.0,>=4.5 (from aiohttp>=3.9.0->-r requirements-dev.txt (line 14))
2025-06-06T03:30:51.6019259Z   Downloading multidict-6.4.4-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (5.3 kB)
2025-06-06T03:30:51.6429493Z Collecting propcache>=0.2.0 (from aiohttp>=3.9.0->-r requirements-dev.txt (line 14))
2025-06-06T03:30:51.6466917Z   Downloading propcache-0.3.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (10 kB)
2025-06-06T03:30:51.8861191Z Collecting yarl<2.0,>=1.17.0 (from aiohttp>=3.9.0->-r requirements-dev.txt (line 14))
2025-06-06T03:30:51.8899629Z   Downloading yarl-1.20.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (72 kB)
2025-06-06T03:30:51.9126287Z Collecting idna>=2.0 (from yarl<2.0,>=1.17.0->aiohttp>=3.9.0->-r requirements-dev.txt (line 14))
2025-06-06T03:30:51.9161497Z   Downloading idna-3.10-py3-none-any.whl.metadata (10 kB)
2025-06-06T03:30:51.9499474Z Collecting airtrain>=0.1.58 (from modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:51.9544676Z   Downloading airtrain-0.1.68-py3-none-any.whl.metadata (6.5 kB)
2025-06-06T03:30:51.9981266Z Collecting rich>=12.0.0 (from modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:52.0016001Z   Downloading rich-14.0.0-py3-none-any.whl.metadata (18 kB)
2025-06-06T03:30:52.0215096Z Collecting typer>=0.7.0 (from modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:52.0250204Z   Downloading typer-0.16.0-py3-none-any.whl.metadata (15 kB)
2025-06-06T03:30:52.1011984Z Collecting python-dotenv>=0.20.0 (from modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:52.1049662Z   Downloading python_dotenv-1.1.0-py3-none-any.whl.metadata (24 kB)
2025-06-06T03:30:52.1350443Z Collecting requests>=2.25.0 (from modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:52.1387008Z   Downloading requests-2.32.3-py3-none-any.whl.metadata (4.6 kB)
2025-06-06T03:30:52.1526749Z Collecting blinker>=1.9.0 (from flask>=2.3.0->-r requirements-dev.txt (line 22))
2025-06-06T03:30:52.1566604Z   Downloading blinker-1.9.0-py3-none-any.whl.metadata (1.6 kB)
2025-06-06T03:30:52.1733473Z Collecting click>=8.1.3 (from flask>=2.3.0->-r requirements-dev.txt (line 22))
2025-06-06T03:30:52.1776182Z   Downloading click-8.2.1-py3-none-any.whl.metadata (2.5 kB)
2025-06-06T03:30:52.1895674Z Collecting itsdangerous>=2.2.0 (from flask>=2.3.0->-r requirements-dev.txt (line 22))
2025-06-06T03:30:52.1932600Z   Downloading itsdangerous-2.2.0-py3-none-any.whl.metadata (1.9 kB)
2025-06-06T03:30:52.2090496Z Collecting jinja2>=3.1.2 (from flask>=2.3.0->-r requirements-dev.txt (line 22))
2025-06-06T03:30:52.2129829Z   Downloading jinja2-3.1.6-py3-none-any.whl.metadata (2.9 kB)
2025-06-06T03:30:52.2611153Z Collecting markupsafe>=2.1.1 (from flask>=2.3.0->-r requirements-dev.txt (line 22))
2025-06-06T03:30:52.2655565Z   Downloading MarkupSafe-3.0.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.0 kB)
2025-06-06T03:30:52.2878102Z Collecting werkzeug>=3.1.0 (from flask>=2.3.0->-r requirements-dev.txt (line 22))
2025-06-06T03:30:52.2911895Z   Downloading werkzeug-3.1.3-py3-none-any.whl.metadata (3.7 kB)
2025-06-06T03:30:52.3411162Z Collecting alembic>=1.9.0 (from flask-migrate>=4.0.0->-r requirements-dev.txt (line 24))
2025-06-06T03:30:52.3448144Z   Downloading alembic-1.16.1-py3-none-any.whl.metadata (7.3 kB)
2025-06-06T03:30:52.4660822Z Collecting greenlet>=1 (from sqlalchemy>=2.0.0->-r requirements-dev.txt (line 26))
2025-06-06T03:30:52.4699888Z   Downloading greenlet-3.2.3-cp312-cp312-manylinux_2_24_x86_64.manylinux_2_28_x86_64.whl.metadata (4.1 kB)
2025-06-06T03:30:52.4842364Z Collecting types-Jinja2 (from types-Flask->-r requirements-dev.txt (line 28))
2025-06-06T03:30:52.4882394Z   Downloading types_Jinja2-2.11.9-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:30:52.5006215Z Collecting types-Werkzeug (from types-Flask->-r requirements-dev.txt (line 28))
2025-06-06T03:30:52.5053635Z   Downloading types_Werkzeug-1.0.9-py3-none-any.whl.metadata (1.0 kB)
2025-06-06T03:30:52.5181670Z Collecting types-click (from types-Flask->-r requirements-dev.txt (line 28))
2025-06-06T03:30:52.5220101Z   Downloading types_click-7.1.8-py3-none-any.whl.metadata (1.0 kB)
2025-06-06T03:30:52.5470342Z Collecting types-SQLAlchemy (from types-flask-sqlalchemy->-r requirements-dev.txt (line 29))
2025-06-06T03:30:52.5518760Z   Downloading types_SQLAlchemy-1.4.53.38-py3-none-any.whl.metadata (1.6 kB)
2025-06-06T03:30:52.6169220Z Collecting openai>=1.60.1 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:52.6205898Z   Downloading openai-1.84.0-py3-none-any.whl.metadata (25 kB)
2025-06-06T03:30:52.6443503Z Collecting firebase-admin>=6.6.0 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:52.6492519Z   Downloading firebase_admin-6.9.0-py3-none-any.whl.metadata (1.5 kB)
2025-06-06T03:30:52.6617504Z Collecting loguru>=0.7.3 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:52.6651202Z   Downloading loguru-0.7.3-py3-none-any.whl.metadata (22 kB)
2025-06-06T03:30:52.9429122Z Collecting boto3>=1.36.6 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:52.9468030Z   Downloading boto3-1.38.31-py3-none-any.whl.metadata (6.6 kB)
2025-06-06T03:30:52.9718721Z Collecting together>=1.3.13 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:52.9763856Z   Downloading together-1.5.8-py3-none-any.whl.metadata (15 kB)
2025-06-06T03:30:53.0047913Z Collecting anthropic>=0.45.0 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:53.0083184Z   Downloading anthropic-0.52.2-py3-none-any.whl.metadata (25 kB)
2025-06-06T03:30:53.0245030Z Collecting groq>=0.15.0 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:53.0279684Z   Downloading groq-0.26.0-py3-none-any.whl.metadata (15 kB)
2025-06-06T03:30:53.0435619Z Collecting cerebras-cloud-sdk>=1.19.0 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:53.0484112Z   Downloading cerebras_cloud_sdk-1.35.0-py3-none-any.whl.metadata (18 kB)
2025-06-06T03:30:53.0650498Z Collecting google-genai>=1.0.0 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:53.0689987Z   Downloading google_genai-1.19.0-py3-none-any.whl.metadata (35 kB)
2025-06-06T03:30:53.0932010Z Collecting fireworks-ai>=0.15.12 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:53.0981768Z   Downloading fireworks_ai-0.17.16-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:30:53.1109778Z Collecting google-generativeai>=0.8.4 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:53.1150930Z   Downloading google_generativeai-0.8.5-py3-none-any.whl.metadata (3.9 kB)
2025-06-06T03:30:53.1669116Z Collecting prompt-toolkit>=3.0.36 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:53.1705521Z   Downloading prompt_toolkit-3.0.51-py3-none-any.whl.metadata (6.4 kB)
2025-06-06T03:30:53.1866899Z Collecting colorama>=0.4.6 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:53.1899391Z   Downloading colorama-0.4.6-py2.py3-none-any.whl.metadata (17 kB)
2025-06-06T03:30:53.2213185Z Collecting posthog>=3.7.0 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:53.2258302Z   Downloading posthog-4.2.0-py2.py3-none-any.whl.metadata (3.0 kB)
2025-06-06T03:30:53.2639292Z Collecting Mako (from alembic>=1.9.0->flask-migrate>=4.0.0->-r requirements-dev.txt (line 24))
2025-06-06T03:30:53.2674131Z   Downloading mako-1.3.10-py3-none-any.whl.metadata (2.9 kB)
2025-06-06T03:30:53.3656176Z Collecting anyio<5,>=3.5.0 (from anthropic>=0.45.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:53.3695903Z   Downloading anyio-4.9.0-py3-none-any.whl.metadata (4.7 kB)
2025-06-06T03:30:53.3850317Z Collecting distro<2,>=1.7.0 (from anthropic>=0.45.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:53.3884867Z   Downloading distro-1.9.0-py3-none-any.whl.metadata (6.8 kB)
2025-06-06T03:30:53.4101634Z Collecting httpx<1,>=0.25.0 (from anthropic>=0.45.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:53.4136166Z   Downloading httpx-0.28.1-py3-none-any.whl.metadata (7.1 kB)
2025-06-06T03:30:53.4755691Z Collecting jiter<1,>=0.4.0 (from anthropic>=0.45.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:53.4793404Z   Downloading jiter-0.10.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (5.2 kB)
2025-06-06T03:30:53.5040966Z Collecting sniffio (from anthropic>=0.45.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:53.5075032Z   Downloading sniffio-1.3.1-py3-none-any.whl.metadata (3.9 kB)
2025-06-06T03:30:53.5364222Z Collecting certifi (from httpx<1,>=0.25.0->anthropic>=0.45.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:53.5397030Z   Downloading certifi-2025.4.26-py3-none-any.whl.metadata (2.5 kB)
2025-06-06T03:30:53.5600842Z Collecting httpcore==1.* (from httpx<1,>=0.25.0->anthropic>=0.45.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:53.5638880Z   Downloading httpcore-1.0.9-py3-none-any.whl.metadata (21 kB)
2025-06-06T03:30:53.5785640Z Collecting h11>=0.16 (from httpcore==1.*->httpx<1,>=0.25.0->anthropic>=0.45.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:53.5819070Z   Downloading h11-0.16.0-py3-none-any.whl.metadata (8.3 kB)
2025-06-06T03:30:53.9595029Z Collecting botocore<1.39.0,>=1.38.31 (from boto3>=1.36.6->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:53.9632734Z   Downloading botocore-1.38.31-py3-none-any.whl.metadata (5.7 kB)
2025-06-06T03:30:53.9774053Z Collecting jmespath<2.0.0,>=0.7.1 (from boto3>=1.36.6->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:53.9806979Z   Downloading jmespath-1.0.1-py3-none-any.whl.metadata (7.6 kB)
2025-06-06T03:30:53.9994371Z Collecting s3transfer<0.14.0,>=0.13.0 (from boto3>=1.36.6->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:54.0028233Z   Downloading s3transfer-0.13.0-py3-none-any.whl.metadata (1.7 kB)
2025-06-06T03:30:54.0219036Z Collecting python-dateutil<3.0.0,>=2.1 (from botocore<1.39.0,>=1.38.31->boto3>=1.36.6->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:54.0255257Z   Downloading python_dateutil-2.9.0.post0-py2.py3-none-any.whl.metadata (8.4 kB)
2025-06-06T03:30:54.0592987Z Collecting urllib3!=2.2.0,<3,>=1.25.4 (from botocore<1.39.0,>=1.38.31->boto3>=1.36.6->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:54.0627967Z   Downloading urllib3-2.4.0-py3-none-any.whl.metadata (6.5 kB)
2025-06-06T03:30:54.0819039Z Collecting six>=1.5 (from python-dateutil<3.0.0,>=2.1->botocore<1.39.0,>=1.38.31->boto3>=1.36.6->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:54.0852259Z   Downloading six-1.17.0-py2.py3-none-any.whl.metadata (1.7 kB)
2025-06-06T03:30:54.2822326Z Collecting cachecontrol>=0.12.14 (from firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:54.2855980Z   Downloading cachecontrol-0.14.3-py3-none-any.whl.metadata (3.1 kB)
2025-06-06T03:30:54.3468210Z Collecting google-api-python-client>=1.7.8 (from firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:54.3506212Z   Downloading google_api_python_client-2.171.0.tar.gz (13.0 MB)
2025-06-06T03:30:54.4125097Z      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 13.0/13.0 MB 226.7 MB/s eta 0:00:00
2025-06-06T03:30:55.0601787Z   Installing build dependencies: started
2025-06-06T03:30:55.8962793Z   Installing build dependencies: finished with status 'done'
2025-06-06T03:30:55.8969528Z   Getting requirements to build wheel: started
2025-06-06T03:30:56.3985737Z   Getting requirements to build wheel: finished with status 'done'
2025-06-06T03:30:56.3995168Z   Preparing metadata (pyproject.toml): started
2025-06-06T03:30:56.6319332Z   Preparing metadata (pyproject.toml): finished with status 'done'
2025-06-06T03:30:56.6596827Z Collecting google-cloud-storage>=1.37.1 (from firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:56.6633083Z   Downloading google_cloud_storage-3.1.0-py2.py3-none-any.whl.metadata (12 kB)
2025-06-06T03:30:56.7318899Z Collecting google-api-core<3.0.0dev,>=1.22.1 (from google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:56.7353646Z   Downloading google_api_core-2.25.0-py3-none-any.whl.metadata (3.0 kB)
2025-06-06T03:30:56.7589114Z Collecting google-cloud-firestore>=2.19.0 (from firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:56.7624794Z   Downloading google_cloud_firestore-2.21.0-py3-none-any.whl.metadata (9.9 kB)
2025-06-06T03:30:56.7834122Z Collecting h2<5,>=3 (from httpx[http2]==0.28.1->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:56.7867927Z   Downloading h2-4.2.0-py3-none-any.whl.metadata (5.1 kB)
2025-06-06T03:30:56.8089808Z Collecting googleapis-common-protos<2.0.0,>=1.56.2 (from google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:56.8124454Z   Downloading googleapis_common_protos-1.70.0-py3-none-any.whl.metadata (9.3 kB)
2025-06-06T03:30:57.0272669Z Collecting protobuf!=3.20.0,!=3.20.1,!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<7.0.0,>=3.19.5 (from google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:57.0310579Z   Downloading protobuf-6.31.1-cp39-abi3-manylinux2014_x86_64.whl.metadata (593 bytes)
2025-06-06T03:30:57.0504881Z Collecting proto-plus<2.0.0,>=1.22.3 (from google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:57.0538328Z   Downloading proto_plus-1.26.1-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:30:57.0958997Z Collecting google-auth<3.0.0,>=2.14.1 (from google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:57.0993534Z   Downloading google_auth-2.40.3-py2.py3-none-any.whl.metadata (6.2 kB)
2025-06-06T03:30:57.6822609Z Collecting grpcio<2.0.0,>=1.33.2 (from google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:57.6861803Z   Downloading grpcio-1.72.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.8 kB)
2025-06-06T03:30:57.7233741Z Collecting grpcio-status<2.0.0,>=1.33.2 (from google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:57.7266851Z   Downloading grpcio_status-1.72.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:30:57.7730956Z Collecting cachetools<6.0,>=2.0.0 (from google-auth<3.0.0,>=2.14.1->google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:57.7764490Z   Downloading cachetools-5.5.2-py3-none-any.whl.metadata (5.4 kB)
2025-06-06T03:30:57.7955449Z Collecting pyasn1-modules>=0.2.1 (from google-auth<3.0.0,>=2.14.1->google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:57.7989642Z   Downloading pyasn1_modules-0.4.2-py3-none-any.whl.metadata (3.5 kB)
2025-06-06T03:30:57.8166977Z Collecting rsa<5,>=3.1.4 (from google-auth<3.0.0,>=2.14.1->google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:57.8200882Z   Downloading rsa-4.9.1-py3-none-any.whl.metadata (5.6 kB)
2025-06-06T03:30:57.9485125Z Collecting hyperframe<7,>=6.1 (from h2<5,>=3->httpx[http2]==0.28.1->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:57.9518054Z   Downloading hyperframe-6.1.0-py3-none-any.whl.metadata (4.3 kB)
2025-06-06T03:30:57.9634508Z Collecting hpack<5,>=4.1 (from h2<5,>=3->httpx[http2]==0.28.1->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:57.9668220Z   Downloading hpack-4.1.0-py3-none-any.whl.metadata (4.6 kB)
2025-06-06T03:30:58.0904086Z Collecting charset-normalizer<4,>=2 (from requests>=2.25.0->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:58.0943042Z   Downloading charset_normalizer-3.4.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (35 kB)
2025-06-06T03:30:58.1521341Z Collecting pyasn1>=0.1.3 (from rsa<5,>=3.1.4->google-auth<3.0.0,>=2.14.1->google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:58.1583091Z   Downloading pyasn1-0.6.1-py3-none-any.whl.metadata (8.4 kB)
2025-06-06T03:30:58.2295832Z Collecting msgpack<2.0.0,>=0.5.2 (from cachecontrol>=0.12.14->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:58.2333735Z   Downloading msgpack-1.1.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (8.4 kB)
2025-06-06T03:30:58.2560896Z Collecting httpx-ws (from fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:58.2599672Z   Downloading httpx_ws-0.7.2-py3-none-any.whl.metadata (9.3 kB)
2025-06-06T03:30:58.2705682Z Collecting httpx-sse (from fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:58.2741673Z   Downloading httpx_sse-0.4.0-py3-none-any.whl.metadata (9.0 kB)
2025-06-06T03:30:58.4272420Z Collecting Pillow (from fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:58.4312525Z   Downloading pillow-11.2.1-cp312-cp312-manylinux_2_28_x86_64.whl.metadata (8.9 kB)
2025-06-06T03:30:58.4718106Z Collecting mmh3>=4.1.0 (from fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:58.4777835Z   Downloading mmh3-5.1.0-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (16 kB)
2025-06-06T03:30:58.4928292Z Collecting betterproto-fw>=2.0.3 (from betterproto-fw[compiler]>=2.0.3->fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:58.4970295Z   Downloading betterproto_fw-2.0.3-py3-none-any.whl.metadata (18 kB)
2025-06-06T03:30:58.5105290Z Collecting asyncstdlib-fw>=3.13.2 (from fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:58.5162779Z   Downloading asyncstdlib_fw-3.13.2-py3-none-any.whl.metadata (5.0 kB)
2025-06-06T03:30:58.5541323Z INFO: pip is looking at multiple versions of fireworks-ai to determine which version is compatible with other requirements. This could take a while.
2025-06-06T03:30:58.5547602Z Collecting fireworks-ai>=0.15.12 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:58.5594593Z   Downloading fireworks_ai-0.17.15-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:30:58.5711189Z   Downloading fireworks_ai-0.17.14-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:30:58.5829315Z   Downloading fireworks_ai-0.17.13-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:30:58.5939861Z   Downloading fireworks_ai-0.17.12-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:30:58.6053365Z   Downloading fireworks_ai-0.17.9-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:30:58.6166493Z   Downloading fireworks_ai-0.17.8-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:30:58.6279851Z   Downloading fireworks_ai-0.17.7-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:30:58.6348270Z INFO: pip is still looking at multiple versions of fireworks-ai to determine which version is compatible with other requirements. This could take a while.
2025-06-06T03:30:58.6393863Z   Downloading fireworks_ai-0.17.6-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:30:58.6570462Z   Downloading fireworks_ai-0.17.5-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:30:58.7185810Z Collecting grpclib<0.5.0,>=0.4.1 (from betterproto-fw>=2.0.3->betterproto-fw[compiler]>=2.0.3->fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:58.7242105Z   Downloading grpclib-0.4.8-py3-none-any.whl.metadata (6.1 kB)
2025-06-06T03:30:59.1968765Z Collecting ruff>=0.1.6 (from -r requirements-dev.txt (line 2))
2025-06-06T03:30:59.2029254Z   Downloading ruff-0.9.10-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (25 kB)
2025-06-06T03:30:59.2339393Z Collecting httplib2<1.0.0,>=0.19.0 (from google-api-python-client>=1.7.8->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:59.2374136Z   Downloading httplib2-0.22.0-py3-none-any.whl.metadata (2.6 kB)
2025-06-06T03:30:59.2758574Z Collecting google-auth-httplib2<1.0.0,>=0.2.0 (from google-api-python-client>=1.7.8->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:59.2797530Z   Downloading google_auth_httplib2-0.2.0-py2.py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:30:59.2913497Z Collecting uritemplate<5,>=3.0.1 (from google-api-python-client>=1.7.8->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:59.2948355Z   Downloading uritemplate-4.2.0-py3-none-any.whl.metadata (2.6 kB)
2025-06-06T03:30:59.3349207Z Collecting pyparsing!=3.0.0,!=3.0.1,!=3.0.2,!=3.0.3,<4,>=2.4.2 (from httplib2<1.0.0,>=0.19.0->google-api-python-client>=1.7.8->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:59.3383564Z   Downloading pyparsing-3.2.3-py3-none-any.whl.metadata (5.0 kB)
2025-06-06T03:30:59.3700837Z Collecting google-cloud-core<3.0.0,>=1.4.1 (from google-cloud-firestore>=2.19.0->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:59.3733893Z   Downloading google_cloud_core-2.4.3-py2.py3-none-any.whl.metadata (2.7 kB)
2025-06-06T03:30:59.5574109Z Collecting google-resumable-media>=2.7.2 (from google-cloud-storage>=1.37.1->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:59.5609302Z   Downloading google_resumable_media-2.7.2-py2.py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:30:59.6158166Z Collecting google-crc32c<2.0dev,>=1.0 (from google-cloud-storage>=1.37.1->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:59.6195252Z   Downloading google_crc32c-1.7.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.3 kB)
2025-06-06T03:30:59.7284985Z Collecting websockets<15.1.0,>=13.0.0 (from google-genai>=1.0.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:59.7327650Z   Downloading websockets-15.0.1-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (6.8 kB)
2025-06-06T03:30:59.7550914Z Collecting google-ai-generativelanguage==0.6.15 (from google-generativeai>=0.8.4->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:59.7586461Z   Downloading google_ai_generativelanguage-0.6.15-py3-none-any.whl.metadata (5.7 kB)
2025-06-06T03:30:59.8332236Z Collecting tqdm (from google-generativeai>=0.8.4->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:59.8368239Z   Downloading tqdm-4.67.1-py3-none-any.whl.metadata (57 kB)
2025-06-06T03:30:59.9377201Z INFO: pip is looking at multiple versions of google-ai-generativelanguage to determine which version is compatible with other requirements. This could take a while.
2025-06-06T03:30:59.9387029Z Collecting google-generativeai>=0.8.4 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:59.9434413Z   Downloading google_generativeai-0.8.4-py3-none-any.whl.metadata (4.2 kB)
2025-06-06T03:30:59.9580396Z Collecting websockets<15.1.0,>=13.0.0 (from google-genai>=1.0.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:59.9624338Z   Downloading websockets-15.0-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (6.8 kB)
2025-06-06T03:30:59.9867890Z Collecting google-genai>=1.0.0 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:30:59.9904197Z   Downloading google_genai-1.18.0-py3-none-any.whl.metadata (35 kB)
2025-06-06T03:31:00.0172748Z Collecting google-crc32c<2.0dev,>=1.0 (from google-cloud-storage>=1.37.1->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:00.0223620Z   Downloading google_crc32c-1.7.1rc1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.3 kB)
2025-06-06T03:31:00.0446594Z INFO: pip is still looking at multiple versions of google-ai-generativelanguage to determine which version is compatible with other requirements. This could take a while.
2025-06-06T03:31:00.0458949Z Collecting google-cloud-storage>=1.37.1 (from firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:00.0508049Z   Downloading google_cloud_storage-3.0.0-py2.py3-none-any.whl.metadata (12 kB)
2025-06-06T03:31:00.1049768Z Collecting google-cloud-core<3.0.0,>=1.4.1 (from google-cloud-firestore>=2.19.0->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:00.1104365Z   Downloading google_cloud_core-2.4.2-py2.py3-none-any.whl.metadata (2.7 kB)
2025-06-06T03:31:00.1916302Z Collecting google-cloud-firestore>=2.19.0 (from firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:00.1965746Z   Downloading google_cloud_firestore-2.20.2-py3-none-any.whl.metadata (9.9 kB)
2025-06-06T03:31:00.2143704Z INFO: This is taking longer than usual. You might need to provide the dependency resolver with stricter constraints to reduce runtime. See https://pip.pypa.io/warnings/backtracking for guidance. If you want to abort this run, press Ctrl + C.
2025-06-06T03:31:00.2306210Z   Downloading google_cloud_firestore-2.20.1-py2.py3-none-any.whl.metadata (9.9 kB)
2025-06-06T03:31:00.3544401Z INFO: pip is looking at multiple versions of google-cloud-firestore to determine which version is compatible with other requirements. This could take a while.
2025-06-06T03:31:00.3596818Z   Downloading google_cloud_firestore-2.20.0-py2.py3-none-any.whl.metadata (5.7 kB)
2025-06-06T03:31:00.3728544Z   Downloading google_cloud_firestore-2.19.0-py2.py3-none-any.whl.metadata (5.7 kB)
2025-06-06T03:31:00.3819538Z Collecting uritemplate<5,>=3.0.1 (from google-api-python-client>=1.7.8->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:00.3869804Z   Downloading uritemplate-4.1.1-py2.py3-none-any.whl.metadata (2.9 kB)
2025-06-06T03:31:00.5194000Z   Downloading uritemplate-4.0.0-py2.py3-none-any.whl.metadata (2.9 kB)
2025-06-06T03:31:00.5954320Z Collecting pyparsing!=3.0.0,!=3.0.1,!=3.0.2,!=3.0.3,<4,>=2.4.2 (from httplib2<1.0.0,>=0.19.0->google-api-python-client>=1.7.8->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:00.5997861Z   Downloading pyparsing-3.2.2-py3-none-any.whl.metadata (5.0 kB)
2025-06-06T03:31:00.7540972Z   Downloading pyparsing-3.2.1-py3-none-any.whl.metadata (5.0 kB)
2025-06-06T03:31:00.8260891Z INFO: pip is still looking at multiple versions of google-cloud-firestore to determine which version is compatible with other requirements. This could take a while.
2025-06-06T03:31:00.8301484Z Collecting httplib2<1.0.0,>=0.19.0 (from google-api-python-client>=1.7.8->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:00.8346759Z   Downloading httplib2-0.21.0-py3-none-any.whl.metadata (2.6 kB)
2025-06-06T03:31:01.0119545Z   Downloading httplib2-0.20.4-py3-none-any.whl.metadata (2.5 kB)
2025-06-06T03:31:01.0865264Z Collecting google-api-python-client>=1.7.8 (from firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:01.0909888Z   Downloading google_api_python_client-2.170.0-py3-none-any.whl.metadata (6.7 kB)
2025-06-06T03:31:01.3444077Z   Downloading google_api_python_client-2.169.0-py3-none-any.whl.metadata (6.7 kB)
2025-06-06T03:31:01.5165087Z INFO: This is taking longer than usual. You might need to provide the dependency resolver with stricter constraints to reduce runtime. See https://pip.pypa.io/warnings/backtracking for guidance. If you want to abort this run, press Ctrl + C.
2025-06-06T03:31:01.5231456Z Collecting frozenlist>=1.1.1 (from aiohttp>=3.9.0->-r requirements-dev.txt (line 14))
2025-06-06T03:31:01.5286502Z   Downloading frozenlist-1.6.0-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (16 kB)
2025-06-06T03:31:01.7550818Z   Downloading frozenlist-1.5.0-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (13 kB)
2025-06-06T03:31:01.8270220Z Collecting ruff>=0.1.6 (from -r requirements-dev.txt (line 2))
2025-06-06T03:31:01.8312482Z   Downloading ruff-0.9.9-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (25 kB)
2025-06-06T03:31:02.1042748Z   Downloading ruff-0.9.8-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (25 kB)
2025-06-06T03:31:02.1598973Z Collecting grpclib<0.5.0,>=0.4.1 (from betterproto-fw>=2.0.3->betterproto-fw[compiler]>=2.0.3->fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:02.1639441Z   Downloading grpclib-0.4.7.tar.gz (61 kB)
2025-06-06T03:31:02.1844793Z   Installing build dependencies: started
2025-06-06T03:31:02.9920726Z   Installing build dependencies: finished with status 'done'
2025-06-06T03:31:02.9926793Z   Getting requirements to build wheel: started
2025-06-06T03:31:03.3272719Z   Getting requirements to build wheel: finished with status 'done'
2025-06-06T03:31:03.3281444Z   Preparing metadata (pyproject.toml): started
2025-06-06T03:31:03.5168350Z   Preparing metadata (pyproject.toml): finished with status 'done'
2025-06-06T03:31:03.7836910Z   Downloading grpclib-0.4.6.tar.gz (61 kB)
2025-06-06T03:31:03.8030080Z   Installing build dependencies: started
2025-06-06T03:31:04.5718800Z   Installing build dependencies: finished with status 'done'
2025-06-06T03:31:04.5724497Z   Getting requirements to build wheel: started
2025-06-06T03:31:04.9109533Z   Getting requirements to build wheel: finished with status 'done'
2025-06-06T03:31:04.9118219Z   Preparing metadata (pyproject.toml): started
2025-06-06T03:31:05.1017332Z   Preparing metadata (pyproject.toml): finished with status 'done'
2025-06-06T03:31:05.1837200Z INFO: This is taking longer than usual. You might need to provide the dependency resolver with stricter constraints to reduce runtime. See https://pip.pypa.io/warnings/backtracking for guidance. If you want to abort this run, press Ctrl + C.
2025-06-06T03:31:05.2000060Z Collecting fireworks-ai>=0.15.12 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:05.2051489Z   Downloading fireworks_ai-0.17.4-py3-none-any.whl.metadata (2.1 kB)
2025-06-06T03:31:05.2288188Z Collecting nest-asyncio>=1.6.0 (from fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:05.2322484Z   Downloading nest_asyncio-1.6.0-py3-none-any.whl.metadata (2.8 kB)
2025-06-06T03:31:05.8721055Z Collecting fireworks-ai>=0.15.12 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:05.8766315Z   Downloading fireworks_ai-0.17.3-py3-none-any.whl.metadata (2.1 kB)
2025-06-06T03:31:06.2227190Z Collecting certifi (from httpx<1,>=0.25.0->anthropic>=0.45.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:06.2263605Z   Downloading certifi-2025.1.31-py3-none-any.whl.metadata (2.5 kB)
2025-06-06T03:31:06.6250868Z   Downloading certifi-2024.12.14-py3-none-any.whl.metadata (2.3 kB)
2025-06-06T03:31:06.6926595Z Collecting msgpack<2.0.0,>=0.5.2 (from cachecontrol>=0.12.14->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:06.6968381Z   Downloading msgpack-1.0.8-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.1 kB)
2025-06-06T03:31:07.1155950Z   Downloading msgpack-1.0.7-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.1 kB)
2025-06-06T03:31:07.1829121Z Collecting cachecontrol>=0.12.14 (from firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:07.1871611Z   Downloading cachecontrol-0.14.2-py3-none-any.whl.metadata (3.1 kB)
2025-06-06T03:31:07.6270225Z   Downloading cachecontrol-0.14.1-py3-none-any.whl.metadata (3.1 kB)
2025-06-06T03:31:07.6943466Z Collecting rsa<5,>=3.1.4 (from google-auth<3.0.0,>=2.14.1->google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:07.6978940Z   Downloading rsa-4.9-py3-none-any.whl.metadata (4.2 kB)
2025-06-06T03:31:08.1565436Z   Downloading rsa-4.8-py3-none-any.whl.metadata (3.1 kB)
2025-06-06T03:31:08.2224527Z Collecting idna>=2.0 (from yarl<2.0,>=1.17.0->aiohttp>=3.9.0->-r requirements-dev.txt (line 14))
2025-06-06T03:31:08.2272943Z   Downloading idna-3.9-py3-none-any.whl.metadata (10 kB)
2025-06-06T03:31:08.7039734Z   Downloading idna-3.8-py3-none-any.whl.metadata (9.9 kB)
2025-06-06T03:31:08.7701620Z Collecting charset-normalizer<4,>=2 (from requests>=2.25.0->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:08.7748671Z   Downloading charset_normalizer-3.4.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (35 kB)
2025-06-06T03:31:09.2878900Z   Downloading charset_normalizer-3.4.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (34 kB)
2025-06-06T03:31:09.3393466Z Collecting proto-plus<2.0.0,>=1.22.3 (from google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:09.3446722Z   Downloading proto_plus-1.26.0-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:31:09.3507588Z INFO: pip is looking at multiple versions of proto-plus to determine which version is compatible with other requirements. This could take a while.
2025-06-06T03:31:09.3567816Z   Downloading proto_plus-1.25.0-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:31:09.3658034Z   Downloading proto_plus-1.24.0-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:31:09.3745346Z   Downloading proto_plus-1.23.0-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:31:09.4219741Z   Downloading proto_plus-1.22.3-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:31:09.4280332Z Collecting h2<5,>=3 (from httpx[http2]==0.28.1->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:09.4313238Z   Downloading h2-4.1.0-py3-none-any.whl.metadata (3.6 kB)
2025-06-06T03:31:15.3545543Z Collecting hyperframe<7,>=6.0 (from h2<5,>=3->httpx[http2]==0.28.1->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:15.3588502Z   Downloading hyperframe-6.0.1-py3-none-any.whl.metadata (2.7 kB)
2025-06-06T03:31:15.8818613Z   Downloading hyperframe-6.0.0-py3-none-any.whl.metadata (2.7 kB)
2025-06-06T03:31:15.9474792Z Collecting hpack<5,>=4.0 (from h2<5,>=3->httpx[http2]==0.28.1->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:15.9513524Z   Downloading hpack-4.0.0-py3-none-any.whl.metadata (2.5 kB)
2025-06-06T03:31:16.5324666Z Collecting h2<5,>=3 (from httpx[http2]==0.28.1->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:16.5372705Z   Downloading h2-4.0.0-py3-none-any.whl.metadata (3.5 kB)
2025-06-06T03:31:17.1219039Z   Downloading h2-3.2.0-py2.py3-none-any.whl.metadata (32 kB)
2025-06-06T03:31:17.1960551Z INFO: pip is still looking at multiple versions of proto-plus to determine which version is compatible with other requirements. This could take a while.
2025-06-06T03:31:17.2006254Z Collecting grpcio-status<2.0.0,>=1.33.2 (from google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:17.2045532Z   Downloading grpcio_status-1.71.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:17.2735070Z Collecting protobuf!=3.20.0,!=3.20.1,!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<7.0.0,>=3.19.5 (from google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:17.2772550Z   Downloading protobuf-5.29.5-cp38-abi3-manylinux2014_x86_64.whl.metadata (592 bytes)
2025-06-06T03:31:17.4374363Z   Downloading protobuf-5.29.4-cp38-abi3-manylinux2014_x86_64.whl.metadata (592 bytes)
2025-06-06T03:31:17.6769485Z Collecting backoff>=1.10.0 (from posthog>=3.7.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:17.6809212Z   Downloading backoff-2.2.1-py3-none-any.whl.metadata (14 kB)
2025-06-06T03:31:17.7055678Z Collecting wcwidth (from prompt-toolkit>=3.0.36->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:17.7089277Z   Downloading wcwidth-0.2.13-py2.py3-none-any.whl.metadata (14 kB)
2025-06-06T03:31:17.8973450Z Collecting cryptography>=3.4.0 (from pyjwt[crypto]>=2.5.0->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:17.9011047Z   Downloading cryptography-45.0.3-cp311-abi3-manylinux_2_34_x86_64.whl.metadata (5.7 kB)
2025-06-06T03:31:18.0078303Z Collecting cffi>=1.14 (from cryptography>=3.4.0->pyjwt[crypto]>=2.5.0->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:18.0114037Z   Downloading cffi-1.17.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (1.5 kB)
2025-06-06T03:31:18.0281289Z Collecting pycparser (from cffi>=1.14->cryptography>=3.4.0->pyjwt[crypto]>=2.5.0->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:18.0320342Z   Downloading pycparser-2.22-py3-none-any.whl.metadata (943 bytes)
2025-06-06T03:31:18.0546313Z Collecting markdown-it-py>=2.2.0 (from rich>=12.0.0->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:18.0582414Z   Downloading markdown_it_py-3.0.0-py3-none-any.whl.metadata (6.9 kB)
2025-06-06T03:31:18.0773542Z Collecting mdurl~=0.1 (from markdown-it-py>=2.2.0->rich>=12.0.0->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:18.0808807Z   Downloading mdurl-0.1.2-py3-none-any.whl.metadata (1.6 kB)
2025-06-06T03:31:18.1322692Z Collecting eval-type-backport<0.3.0,>=0.1.3 (from together>=1.3.13->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:18.1360718Z   Downloading eval_type_backport-0.2.2-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:31:18.1626665Z Collecting filelock<4.0.0,>=3.13.1 (from together>=1.3.13->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:18.1664198Z   Downloading filelock-3.18.0-py3-none-any.whl.metadata (2.9 kB)
2025-06-06T03:31:18.2580751Z Collecting pyarrow>=10.0.1 (from together>=1.3.13->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:18.2625820Z   Downloading pyarrow-20.0.0-cp312-cp312-manylinux_2_28_x86_64.whl.metadata (3.3 kB)
2025-06-06T03:31:18.3054974Z Collecting tabulate<0.10.0,>=0.9.0 (from together>=1.3.13->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:18.3089496Z   Downloading tabulate-0.9.0-py3-none-any.whl.metadata (34 kB)
2025-06-06T03:31:18.3385506Z Collecting typer>=0.7.0 (from modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:18.3438332Z   Downloading typer-0.15.4-py3-none-any.whl.metadata (15 kB)
2025-06-06T03:31:18.3769570Z Collecting click>=8.1.3 (from flask>=2.3.0->-r requirements-dev.txt (line 22))
2025-06-06T03:31:18.3806711Z   Downloading click-8.1.8-py3-none-any.whl.metadata (2.3 kB)
2025-06-06T03:31:18.3954297Z Collecting shellingham>=1.3.0 (from typer>=0.7.0->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:18.3986967Z   Downloading shellingham-1.5.4-py2.py3-none-any.whl.metadata (3.5 kB)
2025-06-06T03:31:18.4463907Z Collecting distlib<1,>=0.3.7 (from virtualenv>=20.10.0->pre-commit>=3.0.0->-r requirements-dev.txt (line 10))
2025-06-06T03:31:18.4502158Z   Downloading distlib-0.3.9-py2.py3-none-any.whl.metadata (5.2 kB)
2025-06-06T03:31:18.4745418Z Collecting platformdirs<5,>=3.9.1 (from virtualenv>=20.10.0->pre-commit>=3.0.0->-r requirements-dev.txt (line 10))
2025-06-06T03:31:18.4778777Z   Downloading platformdirs-4.3.8-py3-none-any.whl.metadata (12 kB)
2025-06-06T03:31:18.5182266Z Collecting wsproto (from httpx-ws->fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T03:31:18.5218180Z   Downloading wsproto-1.2.0-py3-none-any.whl.metadata (5.6 kB)
2025-06-06T03:31:18.5481540Z Collecting types-MarkupSafe (from types-Jinja2->types-Flask->-r requirements-dev.txt (line 28))
2025-06-06T03:31:18.5526176Z   Downloading types_MarkupSafe-1.1.10-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:18.5733615Z Downloading pytest_mock-3.14.1-py3-none-any.whl (9.9 kB)
2025-06-06T03:31:18.5788815Z Downloading pre_commit-4.2.0-py2.py3-none-any.whl (220 kB)
2025-06-06T03:31:18.5853427Z Downloading hypothesis-6.135.1-py3-none-any.whl (515 kB)
2025-06-06T03:31:18.5941600Z Downloading sortedcontainers-2.4.0-py2.py3-none-any.whl (29 kB)
2025-06-06T03:31:18.6005512Z Downloading numpy-2.2.6-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (16.5 MB)
2025-06-06T03:31:18.6672270Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 16.5/16.5 MB 254.5 MB/s eta 0:00:00
2025-06-06T03:31:18.6710671Z Downloading pydantic-2.11.5-py3-none-any.whl (444 kB)
2025-06-06T03:31:18.6799177Z Downloading pydantic_core-2.33.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.0 MB)
2025-06-06T03:31:18.6910634Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 2.0/2.0 MB 198.2 MB/s eta 0:00:00
2025-06-06T03:31:18.6947527Z Downloading aiohttp-3.12.9-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.7 MB)
2025-06-06T03:31:18.7051863Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.7/1.7 MB 177.9 MB/s eta 0:00:00
2025-06-06T03:31:18.7086122Z Downloading multidict-6.4.4-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (223 kB)
2025-06-06T03:31:18.7148268Z Downloading yarl-1.20.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (349 kB)
2025-06-06T03:31:18.7215786Z Downloading PyJWT-2.10.1-py3-none-any.whl (22 kB)
2025-06-06T03:31:18.7272227Z Downloading pathspec-0.12.1-py3-none-any.whl (31 kB)
2025-06-06T03:31:18.7331827Z Downloading types_pyyaml-6.0.12.20250516-py3-none-any.whl (20 kB)
2025-06-06T03:31:18.7393218Z Downloading PyYAML-6.0.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (767 kB)
2025-06-06T03:31:18.7473309Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 767.5/767.5 kB 100.4 MB/s eta 0:00:00
2025-06-06T03:31:18.7517074Z Downloading modelcontextprotocol-0.1.0-py3-none-any.whl (22 kB)
2025-06-06T03:31:18.7568004Z Downloading flask-3.1.1-py3-none-any.whl (103 kB)
2025-06-06T03:31:18.7653340Z Downloading flask_sqlalchemy-3.1.1-py3-none-any.whl (25 kB)
2025-06-06T03:31:18.7709611Z Downloading Flask_Migrate-4.1.0-py3-none-any.whl (21 kB)
2025-06-06T03:31:18.7764954Z Downloading psycopg2_binary-2.9.10-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)
2025-06-06T03:31:18.7927168Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.0/3.0 MB 199.0 MB/s eta 0:00:00
2025-06-06T03:31:18.7965264Z Downloading sqlalchemy-2.0.41-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.3 MB)
2025-06-06T03:31:18.8132807Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.3/3.3 MB 211.3 MB/s eta 0:00:00
2025-06-06T03:31:18.8169631Z Downloading bcrypt-4.3.0-cp39-abi3-manylinux_2_34_x86_64.whl (284 kB)
2025-06-06T03:31:18.8256550Z Downloading types_Flask-1.1.6-py3-none-any.whl (13 kB)
2025-06-06T03:31:18.8318421Z Downloading types_Flask_SQLAlchemy-2.5.9.4-py3-none-any.whl (4.2 kB)
2025-06-06T03:31:18.8372330Z Downloading aiohappyeyeballs-2.6.1-py3-none-any.whl (15 kB)
2025-06-06T03:31:18.8428288Z Downloading aiosignal-1.3.2-py2.py3-none-any.whl (7.6 kB)
2025-06-06T03:31:18.8496509Z Downloading airtrain-0.1.68-py3-none-any.whl (146 kB)
2025-06-06T03:31:18.8564085Z Downloading alembic-1.16.1-py3-none-any.whl (242 kB)
2025-06-06T03:31:18.8632409Z Downloading annotated_types-0.7.0-py3-none-any.whl (13 kB)
2025-06-06T03:31:18.8687781Z Downloading anthropic-0.52.2-py3-none-any.whl (286 kB)
2025-06-06T03:31:18.8777165Z Downloading anyio-4.9.0-py3-none-any.whl (100 kB)
2025-06-06T03:31:18.8860974Z Downloading distro-1.9.0-py3-none-any.whl (20 kB)
2025-06-06T03:31:18.8917095Z Downloading httpx-0.28.1-py3-none-any.whl (73 kB)
2025-06-06T03:31:18.8979299Z Downloading httpcore-1.0.9-py3-none-any.whl (78 kB)
2025-06-06T03:31:18.9040046Z Downloading jiter-0.10.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (352 kB)
2025-06-06T03:31:18.9111473Z Downloading attrs-25.3.0-py3-none-any.whl (63 kB)
2025-06-06T03:31:18.9170948Z Downloading blinker-1.9.0-py3-none-any.whl (8.5 kB)
2025-06-06T03:31:18.9232578Z Downloading boto3-1.38.31-py3-none-any.whl (139 kB)
2025-06-06T03:31:18.9290712Z Downloading botocore-1.38.31-py3-none-any.whl (13.6 MB)
2025-06-06T03:31:18.9842782Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 13.6/13.6 MB 254.0 MB/s eta 0:00:00
2025-06-06T03:31:18.9879998Z Downloading jmespath-1.0.1-py3-none-any.whl (20 kB)
2025-06-06T03:31:18.9939272Z Downloading python_dateutil-2.9.0.post0-py2.py3-none-any.whl (229 kB)
2025-06-06T03:31:19.0003964Z Downloading s3transfer-0.13.0-py3-none-any.whl (85 kB)
2025-06-06T03:31:19.0064644Z Downloading urllib3-2.4.0-py3-none-any.whl (128 kB)
2025-06-06T03:31:19.0133243Z Downloading cerebras_cloud_sdk-1.35.0-py3-none-any.whl (89 kB)
2025-06-06T03:31:19.0191589Z Downloading cfgv-3.4.0-py2.py3-none-any.whl (7.2 kB)
2025-06-06T03:31:19.0250578Z Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)
2025-06-06T03:31:19.0322136Z Downloading firebase_admin-6.9.0-py3-none-any.whl (139 kB)
2025-06-06T03:31:19.0408240Z Downloading google_api_core-2.25.0-py3-none-any.whl (160 kB)
2025-06-06T03:31:19.0471681Z Downloading google_auth-2.40.3-py2.py3-none-any.whl (216 kB)
2025-06-06T03:31:19.0536421Z Downloading cachetools-5.5.2-py3-none-any.whl (10 kB)
2025-06-06T03:31:19.0590521Z Downloading googleapis_common_protos-1.70.0-py3-none-any.whl (294 kB)
2025-06-06T03:31:19.0658173Z Downloading grpcio-1.72.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (5.8 MB)
2025-06-06T03:31:19.0930039Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 5.8/5.8 MB 225.0 MB/s eta 0:00:00
2025-06-06T03:31:19.0984374Z Downloading grpcio_status-1.71.0-py3-none-any.whl (14 kB)
2025-06-06T03:31:19.1043123Z Downloading proto_plus-1.26.1-py3-none-any.whl (50 kB)
2025-06-06T03:31:19.1105131Z Downloading h2-4.2.0-py3-none-any.whl (60 kB)
2025-06-06T03:31:19.1165308Z Downloading hpack-4.1.0-py3-none-any.whl (34 kB)
2025-06-06T03:31:19.1224791Z Downloading hyperframe-6.1.0-py3-none-any.whl (13 kB)
2025-06-06T03:31:19.1295596Z Downloading requests-2.32.3-py3-none-any.whl (64 kB)
2025-06-06T03:31:19.1354401Z Downloading charset_normalizer-3.4.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (148 kB)
2025-06-06T03:31:19.1412678Z Downloading idna-3.10-py3-none-any.whl (70 kB)
2025-06-06T03:31:19.1473826Z Downloading rsa-4.9.1-py3-none-any.whl (34 kB)
2025-06-06T03:31:19.1573610Z Downloading cachecontrol-0.14.3-py3-none-any.whl (21 kB)
2025-06-06T03:31:19.1634267Z Downloading msgpack-1.1.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (401 kB)
2025-06-06T03:31:19.1707943Z Downloading certifi-2025.4.26-py3-none-any.whl (159 kB)
2025-06-06T03:31:19.1777209Z Downloading fireworks_ai-0.17.16-py3-none-any.whl (569 kB)
2025-06-06T03:31:19.1841222Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 569.2/569.2 kB 86.0 MB/s eta 0:00:00
2025-06-06T03:31:19.1878860Z Downloading protobuf-5.29.4-cp38-abi3-manylinux2014_x86_64.whl (319 kB)
2025-06-06T03:31:19.1963486Z Downloading asyncstdlib_fw-3.13.2-py3-none-any.whl (44 kB)
2025-06-06T03:31:19.2038014Z Downloading betterproto_fw-2.0.3-py3-none-any.whl (105 kB)
2025-06-06T03:31:19.2115544Z Downloading grpclib-0.4.8-py3-none-any.whl (76 kB)
2025-06-06T03:31:19.2211758Z Downloading ruff-0.9.10-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.3 MB)
2025-06-06T03:31:19.2778413Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 11.3/11.3 MB 204.1 MB/s eta 0:00:00
2025-06-06T03:31:19.2818559Z Downloading frozenlist-1.6.2-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (240 kB)
2025-06-06T03:31:19.2885594Z Downloading google_auth_httplib2-0.2.0-py2.py3-none-any.whl (9.3 kB)
2025-06-06T03:31:19.2946090Z Downloading httplib2-0.22.0-py3-none-any.whl (96 kB)
2025-06-06T03:31:19.3009039Z Downloading pyparsing-3.2.3-py3-none-any.whl (111 kB)
2025-06-06T03:31:19.3071254Z Downloading uritemplate-4.2.0-py3-none-any.whl (11 kB)
2025-06-06T03:31:19.3130536Z Downloading google_cloud_firestore-2.21.0-py3-none-any.whl (368 kB)
2025-06-06T03:31:19.3209601Z Downloading google_cloud_core-2.4.3-py2.py3-none-any.whl (29 kB)
2025-06-06T03:31:19.3289549Z Downloading google_cloud_storage-3.1.0-py2.py3-none-any.whl (174 kB)
2025-06-06T03:31:19.3358566Z Downloading google_crc32c-1.7.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (32 kB)
2025-06-06T03:31:19.3415764Z Downloading google_genai-1.19.0-py3-none-any.whl (200 kB)
2025-06-06T03:31:19.3488540Z Downloading websockets-15.0.1-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (182 kB)
2025-06-06T03:31:19.3553278Z Downloading google_generativeai-0.8.5-py3-none-any.whl (155 kB)
2025-06-06T03:31:19.3630175Z Downloading google_ai_generativelanguage-0.6.15-py3-none-any.whl (1.3 MB)
2025-06-06T03:31:19.3726504Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.3/1.3 MB 155.9 MB/s eta 0:00:00
2025-06-06T03:31:19.3763757Z Downloading google_resumable_media-2.7.2-py2.py3-none-any.whl (81 kB)
2025-06-06T03:31:19.3824987Z Downloading greenlet-3.2.3-cp312-cp312-manylinux_2_24_x86_64.manylinux_2_28_x86_64.whl (605 kB)
2025-06-06T03:31:19.3899361Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 605.5/605.5 kB 79.7 MB/s eta 0:00:00
2025-06-06T03:31:19.3944799Z Downloading groq-0.26.0-py3-none-any.whl (129 kB)
2025-06-06T03:31:19.4010652Z Downloading h11-0.16.0-py3-none-any.whl (37 kB)
2025-06-06T03:31:19.4072104Z Downloading identify-2.6.12-py2.py3-none-any.whl (99 kB)
2025-06-06T03:31:19.4132590Z Downloading itsdangerous-2.2.0-py3-none-any.whl (16 kB)
2025-06-06T03:31:19.4191345Z Downloading jinja2-3.1.6-py3-none-any.whl (134 kB)
2025-06-06T03:31:19.4255415Z Downloading loguru-0.7.3-py3-none-any.whl (61 kB)
2025-06-06T03:31:19.4313060Z Downloading MarkupSafe-3.0.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (23 kB)
2025-06-06T03:31:19.4402445Z Downloading mmh3-5.1.0-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (101 kB)
2025-06-06T03:31:19.4464867Z Downloading openai-1.84.0-py3-none-any.whl (725 kB)
2025-06-06T03:31:19.4536812Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 725.5/725.5 kB 112.8 MB/s eta 0:00:00
2025-06-06T03:31:19.4571941Z Downloading posthog-4.2.0-py2.py3-none-any.whl (96 kB)
2025-06-06T03:31:19.4632294Z Downloading backoff-2.2.1-py3-none-any.whl (15 kB)
2025-06-06T03:31:19.4689808Z Downloading prompt_toolkit-3.0.51-py3-none-any.whl (387 kB)
2025-06-06T03:31:19.4762866Z Downloading propcache-0.3.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (245 kB)
2025-06-06T03:31:19.4830756Z Downloading pyasn1-0.6.1-py3-none-any.whl (83 kB)
2025-06-06T03:31:19.4890645Z Downloading pyasn1_modules-0.4.2-py3-none-any.whl (181 kB)
2025-06-06T03:31:19.4961793Z Downloading cryptography-45.0.3-cp311-abi3-manylinux_2_34_x86_64.whl (4.5 MB)
2025-06-06T03:31:19.5190463Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 4.5/4.5 MB 209.2 MB/s eta 0:00:00
2025-06-06T03:31:19.5228061Z Downloading cffi-1.17.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (479 kB)
2025-06-06T03:31:19.5305381Z Downloading python_dotenv-1.1.0-py3-none-any.whl (20 kB)
2025-06-06T03:31:19.5362572Z Downloading rich-14.0.0-py3-none-any.whl (243 kB)
2025-06-06T03:31:19.5424641Z Downloading markdown_it_py-3.0.0-py3-none-any.whl (87 kB)
2025-06-06T03:31:19.5516250Z Downloading mdurl-0.1.2-py3-none-any.whl (10.0 kB)
2025-06-06T03:31:19.5571357Z Downloading six-1.17.0-py2.py3-none-any.whl (11 kB)
2025-06-06T03:31:19.5637451Z Downloading sniffio-1.3.1-py3-none-any.whl (10 kB)
2025-06-06T03:31:19.5692065Z Downloading together-1.5.8-py3-none-any.whl (88 kB)
2025-06-06T03:31:19.5753958Z Downloading eval_type_backport-0.2.2-py3-none-any.whl (5.8 kB)
2025-06-06T03:31:19.5811865Z Downloading filelock-3.18.0-py3-none-any.whl (16 kB)
2025-06-06T03:31:19.5885426Z Downloading pillow-11.2.1-cp312-cp312-manylinux_2_28_x86_64.whl (4.6 MB)
2025-06-06T03:31:19.6226059Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 4.6/4.6 MB 143.8 MB/s eta 0:00:00
2025-06-06T03:31:19.6265032Z Downloading tabulate-0.9.0-py3-none-any.whl (35 kB)
2025-06-06T03:31:19.6325175Z Downloading tqdm-4.67.1-py3-none-any.whl (78 kB)
2025-06-06T03:31:19.6388900Z Downloading typer-0.15.4-py3-none-any.whl (45 kB)
2025-06-06T03:31:19.6447978Z Downloading click-8.1.8-py3-none-any.whl (98 kB)
2025-06-06T03:31:19.6510647Z Downloading pyarrow-20.0.0-cp312-cp312-manylinux_2_28_x86_64.whl (42.3 MB)
2025-06-06T03:31:19.8443396Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 42.3/42.3 MB 221.0 MB/s eta 0:00:00
2025-06-06T03:31:19.8480252Z Downloading shellingham-1.5.4-py2.py3-none-any.whl (9.8 kB)
2025-06-06T03:31:19.8537480Z Downloading typing_inspection-0.4.1-py3-none-any.whl (14 kB)
2025-06-06T03:31:19.8599771Z Downloading virtualenv-20.31.2-py3-none-any.whl (6.1 MB)
2025-06-06T03:31:19.8904324Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 6.1/6.1 MB 210.7 MB/s eta 0:00:00
2025-06-06T03:31:19.8940624Z Downloading distlib-0.3.9-py2.py3-none-any.whl (468 kB)
2025-06-06T03:31:19.9014430Z Downloading platformdirs-4.3.8-py3-none-any.whl (18 kB)
2025-06-06T03:31:19.9077744Z Downloading werkzeug-3.1.3-py3-none-any.whl (224 kB)
2025-06-06T03:31:19.9144127Z Downloading httpx_sse-0.4.0-py3-none-any.whl (7.8 kB)
2025-06-06T03:31:19.9202211Z Downloading httpx_ws-0.7.2-py3-none-any.whl (14 kB)
2025-06-06T03:31:19.9260107Z Downloading mako-1.3.10-py3-none-any.whl (78 kB)
2025-06-06T03:31:19.9321672Z Downloading pycparser-2.22-py3-none-any.whl (117 kB)
2025-06-06T03:31:19.9386395Z Downloading types_click-7.1.8-py3-none-any.whl (12 kB)
2025-06-06T03:31:19.9454764Z Downloading types_Jinja2-2.11.9-py3-none-any.whl (18 kB)
2025-06-06T03:31:19.9523908Z Downloading types_MarkupSafe-1.1.10-py3-none-any.whl (4.0 kB)
2025-06-06T03:31:19.9586365Z Downloading types_SQLAlchemy-1.4.53.38-py3-none-any.whl (187 kB)
2025-06-06T03:31:19.9652951Z Downloading types_Werkzeug-1.0.9-py3-none-any.whl (36 kB)
2025-06-06T03:31:19.9714316Z Downloading wcwidth-0.2.13-py2.py3-none-any.whl (34 kB)
2025-06-06T03:31:19.9774800Z Downloading wsproto-1.2.0-py3-none-any.whl (24 kB)
2025-06-06T03:31:20.1979411Z Building wheels for collected packages: google-api-python-client
2025-06-06T03:31:20.1988996Z   Building wheel for google-api-python-client (pyproject.toml): started
2025-06-06T03:31:22.8336101Z   Building wheel for google-api-python-client (pyproject.toml): finished with status 'done'
2025-06-06T03:31:22.8440035Z   Created wheel for google-api-python-client: filename=google_api_python_client-2.171.0-py3-none-any.whl size=13547393 sha256=c0898061bceb89cd7e61a9a19c791e74cc88700315b2f47f15a0d03752317164
2025-06-06T03:31:22.8442248Z   Stored in directory: /home/runner/.cache/pip/wheels/45/3b/16/c59262e73ae1da4bb697bdb8eff129b8633d4d36fa97bec24f
2025-06-06T03:31:22.8489288Z Successfully built google-api-python-client
2025-06-06T03:31:23.0955395Z Installing collected packages: wcwidth, types-Werkzeug, types-SQLAlchemy, types-MarkupSafe, types-click, sortedcontainers, distlib, websockets, urllib3, uritemplate, typing-inspection, types-PyYAML, types-Jinja2, types-flask-sqlalchemy, tqdm, tabulate, sniffio, six, shellingham, ruff, pyyaml, python-dotenv, pyparsing, pyjwt, pydantic-core, pycparser, pyasn1, pyarrow, psycopg2-binary, protobuf, propcache, prompt-toolkit, platformdirs, Pillow, pathspec, numpy, multidict, msgpack, mmh3, mdurl, markupsafe, loguru, jmespath, jiter, itsdangerous, idna, identify, hyperframe, httpx-sse, hpack, h11, grpcio, greenlet, google-crc32c, frozenlist, filelock, eval-type-backport, distro, colorama, click, charset-normalizer, cfgv, certifi, cachetools, blinker, bcrypt, backoff, attrs, asyncstdlib-fw, annotated-types, aiohappyeyeballs, yarl, wsproto, werkzeug, virtualenv, types-Flask, sqlalchemy, rsa, requests, python-dateutil, pytest-mock, pydantic, pyasn1-modules, proto-plus, markdown-it-py, Mako, jinja2, hypothesis, httplib2, httpcore, h2, googleapis-common-protos, google-resumable-media, cffi, anyio, aiosignal, rich, pre-commit, posthog, httpx, grpclib, grpcio-status, google-auth, flask, cryptography, cachecontrol, botocore, alembic, aiohttp, typer, s3transfer, openai, httpx-ws, groq, google-genai, google-auth-httplib2, google-api-core, flask-sqlalchemy, cerebras-cloud-sdk, betterproto-fw, anthropic, together, google-cloud-core, google-api-python-client, flask-migrate, boto3, google-cloud-storage, google-cloud-firestore, google-ai-generativelanguage, fireworks-ai, google-generativeai, firebase-admin, airtrain, modelcontextprotocol
2025-06-06T03:31:23.6479751Z   Attempting uninstall: ruff
2025-06-06T03:31:23.6512763Z     Found existing installation: ruff 0.11.13
2025-06-06T03:31:23.6537109Z     Uninstalling ruff-0.11.13:
2025-06-06T03:31:23.6548626Z       Successfully uninstalled ruff-0.11.13
2025-06-06T03:31:37.2214393Z 
2025-06-06T03:31:37.2350564Z Successfully installed Mako-1.3.10 Pillow-11.2.1 aiohappyeyeballs-2.6.1 aiohttp-3.12.9 aiosignal-1.3.2 airtrain-0.1.68 alembic-1.16.1 annotated-types-0.7.0 anthropic-0.52.2 anyio-4.9.0 asyncstdlib-fw-3.13.2 attrs-25.3.0 backoff-2.2.1 bcrypt-4.3.0 betterproto-fw-2.0.3 blinker-1.9.0 boto3-1.38.31 botocore-1.38.31 cachecontrol-0.14.3 cachetools-5.5.2 cerebras-cloud-sdk-1.35.0 certifi-2025.4.26 cffi-1.17.1 cfgv-3.4.0 charset-normalizer-3.4.2 click-8.1.8 colorama-0.4.6 cryptography-45.0.3 distlib-0.3.9 distro-1.9.0 eval-type-backport-0.2.2 filelock-3.18.0 firebase-admin-6.9.0 fireworks-ai-0.17.16 flask-3.1.1 flask-migrate-4.1.0 flask-sqlalchemy-3.1.1 frozenlist-1.6.2 google-ai-generativelanguage-0.6.15 google-api-core-2.25.0 google-api-python-client-2.171.0 google-auth-2.40.3 google-auth-httplib2-0.2.0 google-cloud-core-2.4.3 google-cloud-firestore-2.21.0 google-cloud-storage-3.1.0 google-crc32c-1.7.1 google-genai-1.19.0 google-generativeai-0.8.5 google-resumable-media-2.7.2 googleapis-common-protos-1.70.0 greenlet-3.2.3 groq-0.26.0 grpcio-1.72.1 grpcio-status-1.71.0 grpclib-0.4.8 h11-0.16.0 h2-4.2.0 hpack-4.1.0 httpcore-1.0.9 httplib2-0.22.0 httpx-0.28.1 httpx-sse-0.4.0 httpx-ws-0.7.2 hyperframe-6.1.0 hypothesis-6.135.1 identify-2.6.12 idna-3.10 itsdangerous-2.2.0 jinja2-3.1.6 jiter-0.10.0 jmespath-1.0.1 loguru-0.7.3 markdown-it-py-3.0.0 markupsafe-3.0.2 mdurl-0.1.2 mmh3-5.1.0 modelcontextprotocol-0.1.0 msgpack-1.1.0 multidict-6.4.4 numpy-2.2.6 openai-1.84.0 pathspec-0.12.1 platformdirs-4.3.8 posthog-4.2.0 pre-commit-4.2.0 prompt-toolkit-3.0.51 propcache-0.3.1 proto-plus-1.26.1 protobuf-5.29.4 psycopg2-binary-2.9.10 pyarrow-20.0.0 pyasn1-0.6.1 pyasn1-modules-0.4.2 pycparser-2.22 pydantic-2.11.5 pydantic-core-2.33.2 pyjwt-2.10.1 pyparsing-3.2.3 pytest-mock-3.14.1 python-dateutil-2.9.0.post0 python-dotenv-1.1.0 pyyaml-6.0.2 requests-2.32.3 rich-14.0.0 rsa-4.9.1 ruff-0.9.10 s3transfer-0.13.0 shellingham-1.5.4 six-1.17.0 sniffio-1.3.1 sortedcontainers-2.4.0 sqlalchemy-2.0.41 tabulate-0.9.0 together-1.5.8 tqdm-4.67.1 typer-0.15.4 types-Flask-1.1.6 types-Jinja2-2.11.9 types-MarkupSafe-1.1.10 types-PyYAML-6.0.12.20250516 types-SQLAlchemy-1.4.53.38 types-Werkzeug-1.0.9 types-click-7.1.8 types-flask-sqlalchemy-2.5.9.4 typing-inspection-0.4.1 uritemplate-4.2.0 urllib3-2.4.0 virtualenv-20.31.2 wcwidth-0.2.13 websockets-15.0.1 werkzeug-3.1.3 wsproto-1.2.0 yarl-1.20.0
2025-06-06T03:31:39.2321281Z Collecting fastapi>=0.95.0 (from -r requirements.txt (line 2))
2025-06-06T03:31:39.2668988Z   Downloading fastapi-0.115.12-py3-none-any.whl.metadata (27 kB)
2025-06-06T03:31:39.3014121Z Collecting uvicorn>=0.22.0 (from -r requirements.txt (line 3))
2025-06-06T03:31:39.3048396Z   Downloading uvicorn-0.34.3-py3-none-any.whl.metadata (6.5 kB)
2025-06-06T03:31:39.3100653Z Requirement already satisfied: pydantic>=2.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 4)) (2.11.5)
2025-06-06T03:31:39.3347535Z Collecting redis>=4.5.0 (from -r requirements.txt (line 5))
2025-06-06T03:31:39.3379862Z   Downloading redis-6.2.0-py3-none-any.whl.metadata (10 kB)
2025-06-06T03:31:39.3515376Z Collecting python-multipart>=0.0.9 (from -r requirements.txt (line 6))
2025-06-06T03:31:39.3549362Z   Downloading python_multipart-0.0.20-py3-none-any.whl.metadata (1.8 kB)
2025-06-06T03:31:39.3587911Z Requirement already satisfied: httpx>=0.24.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 7)) (0.28.1)
2025-06-06T03:31:39.3592539Z Requirement already satisfied: flask>=2.0.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 8)) (3.1.1)
2025-06-06T03:31:39.3973674Z Collecting celery>=5.2.0 (from -r requirements.txt (line 9))
2025-06-06T03:31:39.4009929Z   Downloading celery-5.5.3-py3-none-any.whl.metadata (22 kB)
2025-06-06T03:31:39.4394215Z Collecting flask-socketio>=5.1.0 (from -r requirements.txt (line 10))
2025-06-06T03:31:39.4436511Z   Downloading Flask_SocketIO-5.5.1-py3-none-any.whl.metadata (2.6 kB)
2025-06-06T03:31:39.4473044Z Requirement already satisfied: pyjwt>=2.6.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 11)) (2.10.1)
2025-06-06T03:31:39.4477771Z Requirement already satisfied: bcrypt>=4.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 12)) (4.3.0)
2025-06-06T03:31:39.4559277Z Collecting pyperclip>=1.8.2 (from -r requirements.txt (line 13))
2025-06-06T03:31:39.4593539Z   Downloading pyperclip-1.9.0.tar.gz (20 kB)
2025-06-06T03:31:39.4691431Z   Installing build dependencies: started
2025-06-06T03:31:40.3372242Z   Installing build dependencies: finished with status 'done'
2025-06-06T03:31:40.3379110Z   Getting requirements to build wheel: started
2025-06-06T03:31:40.6653674Z   Getting requirements to build wheel: finished with status 'done'
2025-06-06T03:31:40.6663726Z   Preparing metadata (pyproject.toml): started
2025-06-06T03:31:40.8496387Z   Preparing metadata (pyproject.toml): finished with status 'done'
2025-06-06T03:31:40.8514262Z Requirement already satisfied: cryptography>=41.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 14)) (45.0.3)
2025-06-06T03:31:40.8786255Z Collecting mem0ai>=0.1.100 (from -r requirements.txt (line 18))
2025-06-06T03:31:40.8831612Z   Downloading mem0ai-0.1.104-py3-none-any.whl.metadata (7.4 kB)
2025-06-06T03:31:40.9105130Z Collecting qdrant-client>=1.9.1 (from -r requirements.txt (line 19))
2025-06-06T03:31:40.9158619Z   Downloading qdrant_client-1.14.2-py3-none-any.whl.metadata (10 kB)
2025-06-06T03:31:40.9215951Z Requirement already satisfied: openai>=1.33.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 20)) (1.84.0)
2025-06-06T03:31:40.9532319Z Collecting pytz>=2024.1 (from -r requirements.txt (line 21))
2025-06-06T03:31:40.9568500Z   Downloading pytz-2025.2-py2.py3-none-any.whl.metadata (22 kB)
2025-06-06T03:31:40.9617011Z Requirement already satisfied: modelcontextprotocol>=0.1.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 24)) (0.1.0)
2025-06-06T03:31:40.9622147Z Requirement already satisfied: grpcio>=1.54.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 27)) (1.72.1)
2025-06-06T03:31:40.9933985Z Collecting grpcio-reflection>=1.54.0 (from -r requirements.txt (line 28))
2025-06-06T03:31:40.9986339Z   Downloading grpcio_reflection-1.72.1-py3-none-any.whl.metadata (1.0 kB)
2025-06-06T03:31:41.0332527Z Collecting grpcio-health-checking>=1.54.0 (from -r requirements.txt (line 29))
2025-06-06T03:31:41.0389479Z   Downloading grpcio_health_checking-1.72.1-py3-none-any.whl.metadata (1.0 kB)
2025-06-06T03:31:41.1974879Z Collecting protobuf<5.0,>=3.19 (from -r requirements.txt (line 30))
2025-06-06T03:31:41.2011284Z   Downloading protobuf-4.25.8-cp37-abi3-manylinux2014_x86_64.whl.metadata (541 bytes)
2025-06-06T03:31:41.2424574Z Collecting torch>=1.10.0 (from -r requirements.txt (line 33))
2025-06-06T03:31:41.2459952Z   Downloading torch-2.7.1-cp312-cp312-manylinux_2_28_x86_64.whl.metadata (29 kB)
2025-06-06T03:31:41.2908547Z Collecting transformers>=4.20.0 (from -r requirements.txt (line 34))
2025-06-06T03:31:41.2944544Z   Downloading transformers-4.52.4-py3-none-any.whl.metadata (38 kB)
2025-06-06T03:31:41.3987405Z Collecting sentence-transformers>=2.2.0 (from -r requirements.txt (line 35))
2025-06-06T03:31:41.4036793Z   Downloading sentence_transformers-4.1.0-py3-none-any.whl.metadata (13 kB)
2025-06-06T03:31:41.4099390Z Requirement already satisfied: numpy>=1.24.3 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 36)) (2.2.6)
2025-06-06T03:31:41.4863264Z Collecting scikit-learn>=1.0.0 (from -r requirements.txt (line 37))
2025-06-06T03:31:41.4901457Z   Downloading scikit_learn-1.7.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (17 kB)
2025-06-06T03:31:41.5035737Z Requirement already satisfied: requests>=2.25.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 40)) (2.32.3)
2025-06-06T03:31:41.5673472Z Collecting psutil>=5.9.5 (from -r requirements.txt (line 41))
2025-06-06T03:31:41.5711471Z   Downloading psutil-7.0.0-cp36-abi3-manylinux_2_12_x86_64.manylinux2010_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (22 kB)
2025-06-06T03:31:41.5780864Z Requirement already satisfied: tqdm>=4.65.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 42)) (4.67.1)
2025-06-06T03:31:41.5785683Z Requirement already satisfied: python-dateutil>=2.8.2 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 43)) (2.9.0.post0)
2025-06-06T03:31:41.5789480Z Requirement already satisfied: jinja2>=3.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 44)) (3.1.6)
2025-06-06T03:31:41.5899410Z Collecting prometheus_client>=0.16.0 (from -r requirements.txt (line 45))
2025-06-06T03:31:41.5934765Z   Downloading prometheus_client-0.22.1-py3-none-any.whl.metadata (1.9 kB)
2025-06-06T03:31:41.7332354Z Collecting matplotlib>=3.5.0 (from -r requirements.txt (line 48))
2025-06-06T03:31:41.7412642Z   Downloading matplotlib-3.10.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (11 kB)
2025-06-06T03:31:41.8490675Z Collecting pandas>=1.5.0 (from -r requirements.txt (line 49))
2025-06-06T03:31:41.8525798Z   Downloading pandas-2.3.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (91 kB)
2025-06-06T03:31:41.9255580Z Collecting plotly>=5.13.0 (from -r requirements.txt (line 50))
2025-06-06T03:31:41.9293881Z   Downloading plotly-6.1.2-py3-none-any.whl.metadata (6.9 kB)
2025-06-06T03:31:41.9338811Z Requirement already satisfied: psycopg2-binary>=2.9.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 53)) (2.9.10)
2025-06-06T03:31:41.9343567Z Requirement already satisfied: SQLAlchemy>=2.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 54)) (2.0.41)
2025-06-06T03:31:41.9347604Z Requirement already satisfied: Flask-SQLAlchemy>=3.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 55)) (3.1.1)
2025-06-06T03:31:41.9351888Z Requirement already satisfied: Flask-Migrate>=4.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 56)) (4.1.0)
2025-06-06T03:31:41.9355990Z Requirement already satisfied: pytest>=7.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 59)) (8.4.0)
2025-06-06T03:31:41.9360569Z Requirement already satisfied: pytest-cov>=4.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 60)) (6.1.1)
2025-06-06T03:31:41.9364763Z Requirement already satisfied: pytest-mock>=3.10.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 61)) (3.14.1)
2025-06-06T03:31:41.9369148Z Requirement already satisfied: pytest-asyncio>=0.21.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 62)) (1.0.0)
2025-06-06T03:31:41.9373143Z Requirement already satisfied: aiohttp>=3.8.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 63)) (3.12.9)
2025-06-06T03:31:41.9732599Z Collecting aio_pika>=9.0.0 (from -r requirements.txt (line 64))
2025-06-06T03:31:41.9777095Z   Downloading aio_pika-9.5.5-py3-none-any.whl.metadata (16 kB)
2025-06-06T03:31:42.0064552Z Collecting starlette<0.47.0,>=0.40.0 (from fastapi>=0.95.0->-r requirements.txt (line 2))
2025-06-06T03:31:42.0102529Z   Downloading starlette-0.46.2-py3-none-any.whl.metadata (6.2 kB)
2025-06-06T03:31:42.0153027Z Requirement already satisfied: typing-extensions>=4.8.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from fastapi>=0.95.0->-r requirements.txt (line 2)) (4.14.0)
2025-06-06T03:31:42.0170929Z Requirement already satisfied: annotated-types>=0.6.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from pydantic>=2.0.0->-r requirements.txt (line 4)) (0.7.0)
2025-06-06T03:31:42.0176198Z Requirement already satisfied: pydantic-core==2.33.2 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from pydantic>=2.0.0->-r requirements.txt (line 4)) (2.33.2)
2025-06-06T03:31:42.0184019Z Requirement already satisfied: typing-inspection>=0.4.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from pydantic>=2.0.0->-r requirements.txt (line 4)) (0.4.1)
2025-06-06T03:31:42.0211760Z Requirement already satisfied: anyio<5,>=3.6.2 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from starlette<0.47.0,>=0.40.0->fastapi>=0.95.0->-r requirements.txt (line 2)) (4.9.0)
2025-06-06T03:31:42.0227443Z Requirement already satisfied: idna>=2.8 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from anyio<5,>=3.6.2->starlette<0.47.0,>=0.40.0->fastapi>=0.95.0->-r requirements.txt (line 2)) (3.10)
2025-06-06T03:31:42.0232699Z Requirement already satisfied: sniffio>=1.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from anyio<5,>=3.6.2->starlette<0.47.0,>=0.40.0->fastapi>=0.95.0->-r requirements.txt (line 2)) (1.3.1)
2025-06-06T03:31:42.0269988Z Requirement already satisfied: click>=7.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from uvicorn>=0.22.0->-r requirements.txt (line 3)) (8.1.8)
2025-06-06T03:31:42.0274385Z Requirement already satisfied: h11>=0.8 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from uvicorn>=0.22.0->-r requirements.txt (line 3)) (0.16.0)
2025-06-06T03:31:42.0304233Z Requirement already satisfied: certifi in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from httpx>=0.24.0->-r requirements.txt (line 7)) (2025.4.26)
2025-06-06T03:31:42.0309642Z Requirement already satisfied: httpcore==1.* in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from httpx>=0.24.0->-r requirements.txt (line 7)) (1.0.9)
2025-06-06T03:31:42.0350680Z Requirement already satisfied: blinker>=1.9.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from flask>=2.0.1->-r requirements.txt (line 8)) (1.9.0)
2025-06-06T03:31:42.0359348Z Requirement already satisfied: itsdangerous>=2.2.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from flask>=2.0.1->-r requirements.txt (line 8)) (2.2.0)
2025-06-06T03:31:42.0366431Z Requirement already satisfied: markupsafe>=2.1.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from flask>=2.0.1->-r requirements.txt (line 8)) (3.0.2)
2025-06-06T03:31:42.0371768Z Requirement already satisfied: werkzeug>=3.1.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from flask>=2.0.1->-r requirements.txt (line 8)) (3.1.3)
2025-06-06T03:31:42.0544576Z Collecting billiard<5.0,>=4.2.1 (from celery>=5.2.0->-r requirements.txt (line 9))
2025-06-06T03:31:42.0578593Z   Downloading billiard-4.2.1-py3-none-any.whl.metadata (4.4 kB)
2025-06-06T03:31:42.0853967Z Collecting kombu<5.6,>=5.5.2 (from celery>=5.2.0->-r requirements.txt (line 9))
2025-06-06T03:31:42.0891169Z   Downloading kombu-5.5.4-py3-none-any.whl.metadata (3.5 kB)
2025-06-06T03:31:42.1055722Z Collecting vine<6.0,>=5.1.0 (from celery>=5.2.0->-r requirements.txt (line 9))
2025-06-06T03:31:42.1089321Z   Downloading vine-5.1.0-py3-none-any.whl.metadata (2.7 kB)
2025-06-06T03:31:42.1186640Z Collecting click-didyoumean>=0.3.0 (from celery>=5.2.0->-r requirements.txt (line 9))
2025-06-06T03:31:42.1224112Z   Downloading click_didyoumean-0.3.1-py3-none-any.whl.metadata (3.9 kB)
2025-06-06T03:31:42.1321379Z Collecting click-repl>=0.2.0 (from celery>=5.2.0->-r requirements.txt (line 9))
2025-06-06T03:31:42.1353478Z   Downloading click_repl-0.3.0-py3-none-any.whl.metadata (3.6 kB)
2025-06-06T03:31:42.1451748Z Collecting click-plugins>=1.1.1 (from celery>=5.2.0->-r requirements.txt (line 9))
2025-06-06T03:31:42.1485358Z   Downloading click_plugins-1.1.1-py2.py3-none-any.whl.metadata (6.4 kB)
2025-06-06T03:31:42.1702590Z Collecting amqp<6.0.0,>=5.1.1 (from kombu<5.6,>=5.5.2->celery>=5.2.0->-r requirements.txt (line 9))
2025-06-06T03:31:42.1734442Z   Downloading amqp-5.3.1-py3-none-any.whl.metadata (8.9 kB)
2025-06-06T03:31:42.1882896Z Collecting tzdata>=2025.2 (from kombu<5.6,>=5.5.2->celery>=5.2.0->-r requirements.txt (line 9))
2025-06-06T03:31:42.1915944Z   Downloading tzdata-2025.2-py2.py3-none-any.whl.metadata (1.4 kB)
2025-06-06T03:31:42.1947855Z Requirement already satisfied: packaging in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from kombu<5.6,>=5.5.2->celery>=5.2.0->-r requirements.txt (line 9)) (25.0)
2025-06-06T03:31:42.2153555Z Collecting python-socketio>=5.12.0 (from flask-socketio>=5.1.0->-r requirements.txt (line 10))
2025-06-06T03:31:42.2194564Z   Downloading python_socketio-5.13.0-py3-none-any.whl.metadata (3.2 kB)
2025-06-06T03:31:42.2290103Z Requirement already satisfied: cffi>=1.14 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from cryptography>=41.0.0->-r requirements.txt (line 14)) (1.17.1)
2025-06-06T03:31:42.2334576Z Requirement already satisfied: posthog>=3.5.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from mem0ai>=0.1.100->-r requirements.txt (line 18)) (4.2.0)
2025-06-06T03:31:42.2490068Z Collecting portalocker<3.0.0,>=2.7.0 (from qdrant-client>=1.9.1->-r requirements.txt (line 19))
2025-06-06T03:31:42.2523119Z   Downloading portalocker-2.10.1-py3-none-any.whl.metadata (8.5 kB)
2025-06-06T03:31:42.2789380Z Requirement already satisfied: urllib3<3,>=1.26.14 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from qdrant-client>=1.9.1->-r requirements.txt (line 19)) (2.4.0)
2025-06-06T03:31:42.2848607Z Requirement already satisfied: distro<2,>=1.7.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from openai>=1.33.0->-r requirements.txt (line 20)) (1.9.0)
2025-06-06T03:31:42.2856361Z Requirement already satisfied: jiter<1,>=0.4.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from openai>=1.33.0->-r requirements.txt (line 20)) (0.10.0)
2025-06-06T03:31:42.2937585Z Requirement already satisfied: airtrain>=0.1.58 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.1.68)
2025-06-06T03:31:42.2942729Z Requirement already satisfied: rich>=12.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (14.0.0)
2025-06-06T03:31:42.2947867Z Requirement already satisfied: typer>=0.7.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.15.4)
2025-06-06T03:31:42.2953209Z Requirement already satisfied: python-dotenv>=0.20.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (1.1.0)
2025-06-06T03:31:42.3141172Z INFO: pip is looking at multiple versions of grpcio-reflection to determine which version is compatible with other requirements. This could take a while.
2025-06-06T03:31:42.3144616Z Collecting grpcio-reflection>=1.54.0 (from -r requirements.txt (line 28))
2025-06-06T03:31:42.3185586Z   Downloading grpcio_reflection-1.71.0-py3-none-any.whl.metadata (1.0 kB)
2025-06-06T03:31:42.3544205Z   Downloading grpcio_reflection-1.70.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.3619085Z   Downloading grpcio_reflection-1.69.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.3696943Z   Downloading grpcio_reflection-1.68.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.3770225Z   Downloading grpcio_reflection-1.68.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.3842374Z   Downloading grpcio_reflection-1.67.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.3920510Z   Downloading grpcio_reflection-1.67.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.3957731Z INFO: pip is still looking at multiple versions of grpcio-reflection to determine which version is compatible with other requirements. This could take a while.
2025-06-06T03:31:42.4051804Z   Downloading grpcio_reflection-1.66.2-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.4143929Z   Downloading grpcio_reflection-1.66.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.4218015Z   Downloading grpcio_reflection-1.66.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.4290284Z   Downloading grpcio_reflection-1.65.5-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.4364191Z   Downloading grpcio_reflection-1.65.4-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.4399314Z INFO: This is taking longer than usual. You might need to provide the dependency resolver with stricter constraints to reduce runtime. See https://pip.pypa.io/warnings/backtracking for guidance. If you want to abort this run, press Ctrl + C.
2025-06-06T03:31:42.4443238Z   Downloading grpcio_reflection-1.65.2-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.4534903Z   Downloading grpcio_reflection-1.65.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.4612052Z   Downloading grpcio_reflection-1.64.3-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.4691639Z   Downloading grpcio_reflection-1.64.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.4764443Z   Downloading grpcio_reflection-1.64.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.4837528Z   Downloading grpcio_reflection-1.63.2-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.4934123Z   Downloading grpcio_reflection-1.63.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.5011502Z   Downloading grpcio_reflection-1.62.3-py3-none-any.whl.metadata (1.3 kB)
2025-06-06T03:31:42.5427852Z INFO: pip is looking at multiple versions of grpcio-health-checking to determine which version is compatible with other requirements. This could take a while.
2025-06-06T03:31:42.5431715Z Collecting grpcio-health-checking>=1.54.0 (from -r requirements.txt (line 29))
2025-06-06T03:31:42.5477380Z   Downloading grpcio_health_checking-1.71.0-py3-none-any.whl.metadata (1.0 kB)
2025-06-06T03:31:42.5859753Z   Downloading grpcio_health_checking-1.70.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.5934820Z   Downloading grpcio_health_checking-1.69.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.6012467Z   Downloading grpcio_health_checking-1.68.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.6094512Z   Downloading grpcio_health_checking-1.68.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.6175070Z   Downloading grpcio_health_checking-1.67.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.6247554Z   Downloading grpcio_health_checking-1.67.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.6283679Z INFO: pip is still looking at multiple versions of grpcio-health-checking to determine which version is compatible with other requirements. This could take a while.
2025-06-06T03:31:42.6329197Z   Downloading grpcio_health_checking-1.66.2-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.6405058Z   Downloading grpcio_health_checking-1.66.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.6496895Z   Downloading grpcio_health_checking-1.66.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.6575806Z   Downloading grpcio_health_checking-1.65.5-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.6659832Z   Downloading grpcio_health_checking-1.65.4-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.6696330Z INFO: This is taking longer than usual. You might need to provide the dependency resolver with stricter constraints to reduce runtime. See https://pip.pypa.io/warnings/backtracking for guidance. If you want to abort this run, press Ctrl + C.
2025-06-06T03:31:42.6742593Z   Downloading grpcio_health_checking-1.65.2-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.6818365Z   Downloading grpcio_health_checking-1.65.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.6896311Z   Downloading grpcio_health_checking-1.64.3-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.6974962Z   Downloading grpcio_health_checking-1.64.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.7055328Z   Downloading grpcio_health_checking-1.64.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.7133071Z   Downloading grpcio_health_checking-1.63.2-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.7207492Z   Downloading grpcio_health_checking-1.63.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:42.7288130Z   Downloading grpcio_health_checking-1.62.3-py3-none-any.whl.metadata (1.3 kB)
2025-06-06T03:31:42.7343493Z Requirement already satisfied: filelock in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from torch>=1.10.0->-r requirements.txt (line 33)) (3.18.0)
2025-06-06T03:31:42.8529924Z Collecting setuptools (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T03:31:42.8542260Z   Using cached setuptools-80.9.0-py3-none-any.whl.metadata (6.6 kB)
2025-06-06T03:31:42.9056854Z Collecting sympy>=1.13.3 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T03:31:42.9092340Z   Downloading sympy-1.14.0-py3-none-any.whl.metadata (12 kB)
2025-06-06T03:31:42.9321517Z Collecting networkx (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T03:31:42.9356199Z   Downloading networkx-3.5-py3-none-any.whl.metadata (6.3 kB)
2025-06-06T03:31:42.9618211Z Collecting fsspec (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T03:31:42.9652742Z   Downloading fsspec-2025.5.1-py3-none-any.whl.metadata (11 kB)
2025-06-06T03:31:43.0026533Z Collecting nvidia-cuda-nvrtc-cu12==12.6.77 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T03:31:43.0061564Z   Downloading nvidia_cuda_nvrtc_cu12-12.6.77-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)
2025-06-06T03:31:43.0182454Z Collecting nvidia-cuda-runtime-cu12==12.6.77 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T03:31:43.0220470Z   Downloading nvidia_cuda_runtime_cu12-12.6.77-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (1.5 kB)
2025-06-06T03:31:43.0341981Z Collecting nvidia-cuda-cupti-cu12==12.6.80 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T03:31:43.0380801Z   Downloading nvidia_cuda_cupti_cu12-12.6.80-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (1.6 kB)
2025-06-06T03:31:43.0505246Z Collecting nvidia-cudnn-cu12==9.5.1.17 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T03:31:43.0538126Z   Downloading nvidia_cudnn_cu12-9.5.1.17-py3-none-manylinux_2_28_x86_64.whl.metadata (1.6 kB)
2025-06-06T03:31:43.0662896Z Collecting nvidia-cublas-cu12==12.6.4.1 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T03:31:43.0703376Z   Downloading nvidia_cublas_cu12-12.6.4.1-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (1.5 kB)
2025-06-06T03:31:43.0829130Z Collecting nvidia-cufft-cu12==11.3.0.4 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T03:31:43.0868401Z   Downloading nvidia_cufft_cu12-11.3.0.4-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (1.5 kB)
2025-06-06T03:31:43.0992673Z Collecting nvidia-curand-cu12==10.3.7.77 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T03:31:43.1026832Z   Downloading nvidia_curand_cu12-10.3.7.77-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (1.5 kB)
2025-06-06T03:31:43.1151145Z Collecting nvidia-cusolver-cu12==11.7.1.2 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T03:31:43.1189200Z   Downloading nvidia_cusolver_cu12-11.7.1.2-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (1.6 kB)
2025-06-06T03:31:43.1314113Z Collecting nvidia-cusparse-cu12==12.5.4.2 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T03:31:43.1348015Z   Downloading nvidia_cusparse_cu12-12.5.4.2-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (1.6 kB)
2025-06-06T03:31:43.1440099Z Collecting nvidia-cusparselt-cu12==0.6.3 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T03:31:43.1475650Z   Downloading nvidia_cusparselt_cu12-0.6.3-py3-none-manylinux2014_x86_64.whl.metadata (6.8 kB)
2025-06-06T03:31:43.1579051Z Collecting nvidia-nccl-cu12==2.26.2 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T03:31:43.1612134Z   Downloading nvidia_nccl_cu12-2.26.2-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (2.0 kB)
2025-06-06T03:31:43.1733850Z Collecting nvidia-nvtx-cu12==12.6.77 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T03:31:43.1769076Z   Downloading nvidia_nvtx_cu12-12.6.77-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (1.6 kB)
2025-06-06T03:31:43.1909325Z Collecting nvidia-nvjitlink-cu12==12.6.85 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T03:31:43.1943218Z   Downloading nvidia_nvjitlink_cu12-12.6.85-py3-none-manylinux2010_x86_64.manylinux_2_12_x86_64.whl.metadata (1.5 kB)
2025-06-06T03:31:43.2044631Z Collecting nvidia-cufile-cu12==1.11.1.6 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T03:31:43.2078084Z   Downloading nvidia_cufile_cu12-1.11.1.6-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (1.5 kB)
2025-06-06T03:31:43.2211692Z Collecting triton==3.3.1 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T03:31:43.2246579Z   Downloading triton-3.3.1-cp312-cp312-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl.metadata (1.5 kB)
2025-06-06T03:31:43.3392773Z Collecting huggingface-hub<1.0,>=0.30.0 (from transformers>=4.20.0->-r requirements.txt (line 34))
2025-06-06T03:31:43.3429934Z   Downloading huggingface_hub-0.32.4-py3-none-any.whl.metadata (14 kB)
2025-06-06T03:31:43.3666679Z Requirement already satisfied: pyyaml>=5.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from transformers>=4.20.0->-r requirements.txt (line 34)) (6.0.2)
2025-06-06T03:31:43.6640911Z Collecting regex!=2019.12.17 (from transformers>=4.20.0->-r requirements.txt (line 34))
2025-06-06T03:31:43.6690902Z   Downloading regex-2024.11.6-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (40 kB)
2025-06-06T03:31:43.8243400Z Collecting tokenizers<0.22,>=0.21 (from transformers>=4.20.0->-r requirements.txt (line 34))
2025-06-06T03:31:43.8285525Z   Downloading tokenizers-0.21.1-cp39-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (6.8 kB)
2025-06-06T03:31:43.9839251Z Collecting safetensors>=0.4.3 (from transformers>=4.20.0->-r requirements.txt (line 34))
2025-06-06T03:31:43.9877918Z   Downloading safetensors-0.5.3-cp38-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.8 kB)
2025-06-06T03:31:44.0250748Z Collecting hf-xet<2.0.0,>=1.1.2 (from huggingface-hub<1.0,>=0.30.0->transformers>=4.20.0->-r requirements.txt (line 34))
2025-06-06T03:31:44.0285139Z   Downloading hf_xet-1.1.3-cp37-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (879 bytes)
2025-06-06T03:31:44.1739098Z Collecting scipy (from sentence-transformers>=2.2.0->-r requirements.txt (line 35))
2025-06-06T03:31:44.1791428Z   Downloading scipy-1.15.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (61 kB)
2025-06-06T03:31:44.2112775Z Requirement already satisfied: Pillow in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from sentence-transformers>=2.2.0->-r requirements.txt (line 35)) (11.2.1)
2025-06-06T03:31:44.2385525Z Collecting joblib>=1.2.0 (from scikit-learn>=1.0.0->-r requirements.txt (line 37))
2025-06-06T03:31:44.2421995Z   Downloading joblib-1.5.1-py3-none-any.whl.metadata (5.6 kB)
2025-06-06T03:31:44.2531082Z Collecting threadpoolctl>=3.1.0 (from scikit-learn>=1.0.0->-r requirements.txt (line 37))
2025-06-06T03:31:44.2563571Z   Downloading threadpoolctl-3.6.0-py3-none-any.whl.metadata (13 kB)
2025-06-06T03:31:44.2628177Z Requirement already satisfied: charset-normalizer<4,>=2 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from requests>=2.25.0->-r requirements.txt (line 40)) (3.4.2)
2025-06-06T03:31:44.2758531Z Requirement already satisfied: six>=1.5 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from python-dateutil>=2.8.2->-r requirements.txt (line 43)) (1.17.0)
2025-06-06T03:31:44.3396805Z Collecting contourpy>=1.0.1 (from matplotlib>=3.5.0->-r requirements.txt (line 48))
2025-06-06T03:31:44.3433599Z   Downloading contourpy-1.3.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (5.5 kB)
2025-06-06T03:31:44.3549070Z Collecting cycler>=0.10 (from matplotlib>=3.5.0->-r requirements.txt (line 48))
2025-06-06T03:31:44.3582783Z   Downloading cycler-0.12.1-py3-none-any.whl.metadata (3.8 kB)
2025-06-06T03:31:44.4844583Z Collecting fonttools>=4.22.0 (from matplotlib>=3.5.0->-r requirements.txt (line 48))
2025-06-06T03:31:44.4883908Z   Downloading fonttools-4.58.1-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (106 kB)
2025-06-06T03:31:44.5489891Z Collecting kiwisolver>=1.3.1 (from matplotlib>=3.5.0->-r requirements.txt (line 48))
2025-06-06T03:31:44.5526356Z   Downloading kiwisolver-1.4.8-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (6.2 kB)
2025-06-06T03:31:44.5574133Z Requirement already satisfied: pyparsing>=2.3.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from matplotlib>=3.5.0->-r requirements.txt (line 48)) (3.2.3)
2025-06-06T03:31:44.6058081Z Collecting narwhals>=1.15.1 (from plotly>=5.13.0->-r requirements.txt (line 50))
2025-06-06T03:31:44.6091939Z   Downloading narwhals-1.41.0-py3-none-any.whl.metadata (11 kB)
2025-06-06T03:31:44.6199392Z Requirement already satisfied: greenlet>=1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from SQLAlchemy>=2.0.0->-r requirements.txt (line 54)) (3.2.3)
2025-06-06T03:31:44.6282158Z Requirement already satisfied: alembic>=1.9.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from Flask-Migrate>=4.0.0->-r requirements.txt (line 56)) (1.16.1)
2025-06-06T03:31:44.6308970Z Requirement already satisfied: iniconfig>=1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from pytest>=7.0.0->-r requirements.txt (line 59)) (2.1.0)
2025-06-06T03:31:44.6318356Z Requirement already satisfied: pluggy<2,>=1.5 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from pytest>=7.0.0->-r requirements.txt (line 59)) (1.6.0)
2025-06-06T03:31:44.6322980Z Requirement already satisfied: pygments>=2.7.2 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from pytest>=7.0.0->-r requirements.txt (line 59)) (2.19.1)
2025-06-06T03:31:44.6381150Z Requirement already satisfied: coverage>=7.5 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from coverage[toml]>=7.5->pytest-cov>=4.0.0->-r requirements.txt (line 60)) (7.8.2)
2025-06-06T03:31:44.6456924Z Requirement already satisfied: aiohappyeyeballs>=2.5.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from aiohttp>=3.8.0->-r requirements.txt (line 63)) (2.6.1)
2025-06-06T03:31:44.6462331Z Requirement already satisfied: aiosignal>=1.1.2 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from aiohttp>=3.8.0->-r requirements.txt (line 63)) (1.3.2)
2025-06-06T03:31:44.6469623Z Requirement already satisfied: attrs>=17.3.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from aiohttp>=3.8.0->-r requirements.txt (line 63)) (25.3.0)
2025-06-06T03:31:44.6474959Z Requirement already satisfied: frozenlist>=1.1.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from aiohttp>=3.8.0->-r requirements.txt (line 63)) (1.6.2)
2025-06-06T03:31:44.6480848Z Requirement already satisfied: multidict<7.0,>=4.5 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from aiohttp>=3.8.0->-r requirements.txt (line 63)) (6.4.4)
2025-06-06T03:31:44.6486157Z Requirement already satisfied: propcache>=0.2.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from aiohttp>=3.8.0->-r requirements.txt (line 63)) (0.3.1)
2025-06-06T03:31:44.6491697Z Requirement already satisfied: yarl<2.0,>=1.17.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from aiohttp>=3.8.0->-r requirements.txt (line 63)) (1.20.0)
2025-06-06T03:31:44.6827030Z Collecting aiormq<6.9,>=6.8 (from aio_pika>=9.0.0->-r requirements.txt (line 64))
2025-06-06T03:31:44.6864051Z   Downloading aiormq-6.8.1-py3-none-any.whl.metadata (19 kB)
2025-06-06T03:31:44.7004921Z Collecting exceptiongroup<2,>=1 (from aio_pika>=9.0.0->-r requirements.txt (line 64))
2025-06-06T03:31:44.7044676Z   Downloading exceptiongroup-1.3.0-py3-none-any.whl.metadata (6.7 kB)
2025-06-06T03:31:44.7194928Z Collecting pamqp==3.3.0 (from aiormq<6.9,>=6.8->aio_pika>=9.0.0->-r requirements.txt (line 64))
2025-06-06T03:31:44.7234302Z   Downloading pamqp-3.3.0-py2.py3-none-any.whl.metadata (4.7 kB)
2025-06-06T03:31:44.7412926Z Requirement already satisfied: firebase-admin>=6.6.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (6.9.0)
2025-06-06T03:31:44.7418190Z Requirement already satisfied: loguru>=0.7.3 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.7.3)
2025-06-06T03:31:44.7426232Z Requirement already satisfied: boto3>=1.36.6 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (1.38.31)
2025-06-06T03:31:44.7431628Z Requirement already satisfied: together>=1.3.13 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (1.5.8)
2025-06-06T03:31:44.7437185Z Requirement already satisfied: anthropic>=0.45.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.52.2)
2025-06-06T03:31:44.7442110Z Requirement already satisfied: groq>=0.15.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.26.0)
2025-06-06T03:31:44.7447486Z Requirement already satisfied: cerebras-cloud-sdk>=1.19.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (1.35.0)
2025-06-06T03:31:44.7452695Z Requirement already satisfied: google-genai>=1.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (1.19.0)
2025-06-06T03:31:44.7457993Z Requirement already satisfied: fireworks-ai>=0.15.12 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.17.16)
2025-06-06T03:31:44.7463162Z Requirement already satisfied: google-generativeai>=0.8.4 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.8.5)
2025-06-06T03:31:44.7472803Z Requirement already satisfied: prompt-toolkit>=3.0.36 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (3.0.51)
2025-06-06T03:31:44.7477940Z Requirement already satisfied: colorama>=0.4.6 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.4.6)
2025-06-06T03:31:44.7522478Z Requirement already satisfied: Mako in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from alembic>=1.9.0->Flask-Migrate>=4.0.0->-r requirements.txt (line 56)) (1.3.10)
2025-06-06T03:31:44.7718765Z Requirement already satisfied: botocore<1.39.0,>=1.38.31 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from boto3>=1.36.6->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (1.38.31)
2025-06-06T03:31:44.7725679Z Requirement already satisfied: jmespath<2.0.0,>=0.7.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from boto3>=1.36.6->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (1.0.1)
2025-06-06T03:31:44.7732342Z Requirement already satisfied: s3transfer<0.14.0,>=0.13.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from boto3>=1.36.6->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.13.0)
2025-06-06T03:31:44.7911363Z Requirement already satisfied: pycparser in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from cffi>=1.14->cryptography>=41.0.0->-r requirements.txt (line 14)) (2.22)
2025-06-06T03:31:44.8158339Z Requirement already satisfied: cachecontrol>=0.12.14 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.14.3)
2025-06-06T03:31:44.8163839Z Requirement already satisfied: google-api-python-client>=1.7.8 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (2.171.0)
2025-06-06T03:31:44.8169306Z Requirement already satisfied: google-cloud-storage>=1.37.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (3.1.0)
2025-06-06T03:31:44.8193492Z Requirement already satisfied: google-api-core<3.0.0dev,>=1.22.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (2.25.0)
2025-06-06T03:31:44.8203086Z Requirement already satisfied: google-cloud-firestore>=2.19.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (2.21.0)
2025-06-06T03:31:44.8242956Z Requirement already satisfied: h2<5,>=3 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from httpx[http2]>=0.20.0->qdrant-client>=1.9.1->-r requirements.txt (line 19)) (4.2.0)
2025-06-06T03:31:44.8275307Z Requirement already satisfied: googleapis-common-protos<2.0.0,>=1.56.2 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (1.70.0)
2025-06-06T03:31:44.8738722Z Requirement already satisfied: proto-plus<2.0.0,>=1.22.3 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (1.26.1)
2025-06-06T03:31:44.8744375Z Requirement already satisfied: google-auth<3.0.0,>=2.14.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (2.40.3)
2025-06-06T03:31:44.8803970Z Requirement already satisfied: grpcio-status<2.0.0,>=1.33.2 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (1.71.0)
2025-06-06T03:31:44.8847992Z Requirement already satisfied: cachetools<6.0,>=2.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-auth<3.0.0,>=2.14.1->google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (5.5.2)
2025-06-06T03:31:44.8853564Z Requirement already satisfied: pyasn1-modules>=0.2.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-auth<3.0.0,>=2.14.1->google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.4.2)
2025-06-06T03:31:44.8859520Z Requirement already satisfied: rsa<5,>=3.1.4 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-auth<3.0.0,>=2.14.1->google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (4.9.1)
2025-06-06T03:31:45.0588843Z INFO: pip is looking at multiple versions of grpcio-status to determine which version is compatible with other requirements. This could take a while.
2025-06-06T03:31:45.0931214Z Collecting grpcio-status<2.0.0,>=1.33.2 (from google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24))
2025-06-06T03:31:45.0942017Z   Using cached grpcio_status-1.72.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:45.1131244Z   Downloading grpcio_status-1.70.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:45.1216265Z   Downloading grpcio_status-1.69.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:45.1295349Z   Downloading grpcio_status-1.68.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:45.1374269Z   Downloading grpcio_status-1.68.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:45.1454009Z   Downloading grpcio_status-1.67.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:45.1537601Z   Downloading grpcio_status-1.67.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:45.1584215Z INFO: pip is still looking at multiple versions of grpcio-status to determine which version is compatible with other requirements. This could take a while.
2025-06-06T03:31:45.1619881Z   Downloading grpcio_status-1.66.2-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:45.1698299Z   Downloading grpcio_status-1.66.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:45.1776736Z   Downloading grpcio_status-1.66.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:45.1854881Z   Downloading grpcio_status-1.65.5-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:45.1936509Z   Downloading grpcio_status-1.65.4-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:45.1983075Z INFO: This is taking longer than usual. You might need to provide the dependency resolver with stricter constraints to reduce runtime. See https://pip.pypa.io/warnings/backtracking for guidance. If you want to abort this run, press Ctrl + C.
2025-06-06T03:31:45.2021503Z   Downloading grpcio_status-1.65.2-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:45.2105054Z   Downloading grpcio_status-1.65.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:45.2183358Z   Downloading grpcio_status-1.64.3-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:45.2259951Z   Downloading grpcio_status-1.64.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:45.2339271Z   Downloading grpcio_status-1.64.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:45.2420500Z   Downloading grpcio_status-1.63.2-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:45.2499058Z   Downloading grpcio_status-1.63.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T03:31:45.2577633Z   Downloading grpcio_status-1.62.3-py3-none-any.whl.metadata (1.3 kB)
2025-06-06T03:31:45.2666740Z Requirement already satisfied: hyperframe<7,>=6.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from h2<5,>=3->httpx[http2]>=0.20.0->qdrant-client>=1.9.1->-r requirements.txt (line 19)) (6.1.0)
2025-06-06T03:31:45.2673076Z Requirement already satisfied: hpack<5,>=4.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from h2<5,>=3->httpx[http2]>=0.20.0->qdrant-client>=1.9.1->-r requirements.txt (line 19)) (4.1.0)
2025-06-06T03:31:45.2791648Z Requirement already satisfied: pyasn1>=0.1.3 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from rsa<5,>=3.1.4->google-auth<3.0.0,>=2.14.1->google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.6.1)
2025-06-06T03:31:45.2827864Z Requirement already satisfied: msgpack<2.0.0,>=0.5.2 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from cachecontrol>=0.12.14->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (1.1.0)
2025-06-06T03:31:45.2898438Z Requirement already satisfied: httpx-ws in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.7.2)
2025-06-06T03:31:45.2902794Z Requirement already satisfied: httpx-sse in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.4.0)
2025-06-06T03:31:45.2923100Z Requirement already satisfied: mmh3>=4.1.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (5.1.0)
2025-06-06T03:31:45.2930266Z Requirement already satisfied: betterproto-fw>=2.0.3 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from betterproto-fw[compiler]>=2.0.3->fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (2.0.3)
2025-06-06T03:31:45.2937680Z Requirement already satisfied: asyncstdlib-fw>=3.13.2 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (3.13.2)
2025-06-06T03:31:45.3070762Z INFO: pip is looking at multiple versions of fireworks-ai to determine which version is compatible with other requirements. This could take a while.
2025-06-06T03:31:45.3252552Z Collecting fireworks-ai>=0.15.12 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24))
2025-06-06T03:31:45.3263538Z   Using cached fireworks_ai-0.17.15-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:31:45.3333040Z   Using cached fireworks_ai-0.17.14-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:31:45.3396575Z   Using cached fireworks_ai-0.17.13-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:31:45.3459678Z   Using cached fireworks_ai-0.17.12-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:31:45.3522640Z   Using cached fireworks_ai-0.17.9-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:31:45.3586228Z   Using cached fireworks_ai-0.17.8-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:31:45.3648748Z   Using cached fireworks_ai-0.17.7-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:31:45.3700827Z INFO: pip is still looking at multiple versions of fireworks-ai to determine which version is compatible with other requirements. This could take a while.
2025-06-06T03:31:45.3715806Z   Using cached fireworks_ai-0.17.6-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:31:45.3781065Z   Using cached fireworks_ai-0.17.5-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:31:45.3967977Z   Using cached fireworks_ai-0.17.4-py3-none-any.whl.metadata (2.1 kB)
2025-06-06T03:31:45.4120518Z Collecting nest-asyncio>=1.6.0 (from fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24))
2025-06-06T03:31:45.4131557Z   Using cached nest_asyncio-1.6.0-py3-none-any.whl.metadata (2.8 kB)
2025-06-06T03:31:45.4218719Z Requirement already satisfied: grpclib<0.5.0,>=0.4.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from betterproto-fw>=2.0.3->betterproto-fw[compiler]>=2.0.3->fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.4.8)
2025-06-06T03:31:45.4312637Z Requirement already satisfied: ruff~=0.9.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from betterproto-fw[compiler]>=2.0.3->fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.9.10)
2025-06-06T03:31:45.4502246Z Requirement already satisfied: httplib2<1.0.0,>=0.19.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-api-python-client>=1.7.8->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.22.0)
2025-06-06T03:31:45.4512443Z Requirement already satisfied: google-auth-httplib2<1.0.0,>=0.2.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-api-python-client>=1.7.8->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.2.0)
2025-06-06T03:31:45.4522575Z Requirement already satisfied: uritemplate<5,>=3.0.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-api-python-client>=1.7.8->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (4.2.0)
2025-06-06T03:31:45.4714573Z Requirement already satisfied: google-cloud-core<3.0.0,>=1.4.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-cloud-firestore>=2.19.0->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (2.4.3)
2025-06-06T03:31:45.5586287Z Requirement already satisfied: google-resumable-media>=2.7.2 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-cloud-storage>=1.37.1->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (2.7.2)
2025-06-06T03:31:45.5596443Z Requirement already satisfied: google-crc32c<2.0dev,>=1.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-cloud-storage>=1.37.1->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (1.7.1)
2025-06-06T03:31:45.5698927Z Requirement already satisfied: websockets<15.1.0,>=13.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-genai>=1.0.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (15.0.1)
2025-06-06T03:31:45.5777983Z Requirement already satisfied: google-ai-generativelanguage==0.6.15 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-generativeai>=0.8.4->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.6.15)
2025-06-06T03:31:45.7369450Z Requirement already satisfied: backoff>=1.10.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from posthog>=3.5.0->mem0ai>=0.1.100->-r requirements.txt (line 18)) (2.2.1)
2025-06-06T03:31:45.7471510Z Requirement already satisfied: wcwidth in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from prompt-toolkit>=3.0.36->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.2.13)
2025-06-06T03:31:45.7850185Z Collecting bidict>=0.21.0 (from python-socketio>=5.12.0->flask-socketio>=5.1.0->-r requirements.txt (line 10))
2025-06-06T03:31:45.7883604Z   Downloading bidict-0.23.1-py3-none-any.whl.metadata (8.7 kB)
2025-06-06T03:31:45.8142137Z Collecting python-engineio>=4.11.0 (from python-socketio>=5.12.0->flask-socketio>=5.1.0->-r requirements.txt (line 10))
2025-06-06T03:31:45.8183947Z   Downloading python_engineio-4.12.2-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T03:31:45.8388332Z Collecting simple-websocket>=0.10.0 (from python-engineio>=4.11.0->python-socketio>=5.12.0->flask-socketio>=5.1.0->-r requirements.txt (line 10))
2025-06-06T03:31:45.8431663Z   Downloading simple_websocket-1.1.0-py3-none-any.whl.metadata (1.5 kB)
2025-06-06T03:31:45.8590430Z Requirement already satisfied: markdown-it-py>=2.2.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from rich>=12.0.0->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (3.0.0)
2025-06-06T03:31:45.8638739Z Requirement already satisfied: mdurl~=0.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from markdown-it-py>=2.2.0->rich>=12.0.0->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.1.2)
2025-06-06T03:31:45.8890727Z Requirement already satisfied: wsproto in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from simple-websocket>=0.10.0->python-engineio>=4.11.0->python-socketio>=5.12.0->flask-socketio>=5.1.0->-r requirements.txt (line 10)) (1.2.0)
2025-06-06T03:31:45.9096313Z Collecting mpmath<1.4,>=1.1.0 (from sympy>=1.13.3->torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T03:31:45.9130590Z   Downloading mpmath-1.3.0-py3-none-any.whl.metadata (8.6 kB)
2025-06-06T03:31:45.9310620Z Requirement already satisfied: eval-type-backport<0.3.0,>=0.1.3 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from together>=1.3.13->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.2.2)
2025-06-06T03:31:45.9330289Z Requirement already satisfied: pyarrow>=10.0.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from together>=1.3.13->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (20.0.0)
2025-06-06T03:31:45.9355704Z Requirement already satisfied: tabulate<0.10.0,>=0.9.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from together>=1.3.13->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.9.0)
2025-06-06T03:31:45.9554272Z Requirement already satisfied: shellingham>=1.3.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from typer>=0.7.0->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (1.5.4)
2025-06-06T03:31:46.0165273Z Downloading protobuf-4.25.8-cp37-abi3-manylinux2014_x86_64.whl (294 kB)
2025-06-06T03:31:46.0241402Z Downloading fastapi-0.115.12-py3-none-any.whl (95 kB)
2025-06-06T03:31:46.0299752Z Downloading starlette-0.46.2-py3-none-any.whl (72 kB)
2025-06-06T03:31:46.0364572Z Downloading uvicorn-0.34.3-py3-none-any.whl (62 kB)
2025-06-06T03:31:46.0418053Z Downloading redis-6.2.0-py3-none-any.whl (278 kB)
2025-06-06T03:31:46.0484793Z Downloading python_multipart-0.0.20-py3-none-any.whl (24 kB)
2025-06-06T03:31:46.0547038Z Downloading celery-5.5.3-py3-none-any.whl (438 kB)
2025-06-06T03:31:46.0644543Z Downloading billiard-4.2.1-py3-none-any.whl (86 kB)
2025-06-06T03:31:46.0700622Z Downloading kombu-5.5.4-py3-none-any.whl (210 kB)
2025-06-06T03:31:46.0757745Z Downloading vine-5.1.0-py3-none-any.whl (9.6 kB)
2025-06-06T03:31:46.0816043Z Downloading amqp-5.3.1-py3-none-any.whl (50 kB)
2025-06-06T03:31:46.0874435Z Downloading Flask_SocketIO-5.5.1-py3-none-any.whl (18 kB)
2025-06-06T03:31:46.0949342Z Downloading mem0ai-0.1.104-py3-none-any.whl (156 kB)
2025-06-06T03:31:46.1027948Z Downloading qdrant_client-1.14.2-py3-none-any.whl (327 kB)
2025-06-06T03:31:46.1121972Z Downloading portalocker-2.10.1-py3-none-any.whl (18 kB)
2025-06-06T03:31:46.1183545Z Downloading pytz-2025.2-py2.py3-none-any.whl (509 kB)
2025-06-06T03:31:46.1265456Z Downloading grpcio_reflection-1.62.3-py3-none-any.whl (22 kB)
2025-06-06T03:31:46.1323650Z Downloading grpcio_health_checking-1.62.3-py3-none-any.whl (18 kB)
2025-06-06T03:31:46.1413224Z Downloading torch-2.7.1-cp312-cp312-manylinux_2_28_x86_64.whl (821.0 MB)
2025-06-06T03:31:53.2371649Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 821.0/821.0 MB 60.0 MB/s eta 0:00:00
2025-06-06T03:31:53.2467052Z Downloading nvidia_cublas_cu12-12.6.4.1-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (393.1 MB)
2025-06-06T03:31:55.8885770Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 393.1/393.1 MB 115.4 MB/s eta 0:00:00
2025-06-06T03:31:55.8935717Z Downloading nvidia_cuda_cupti_cu12-12.6.80-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (8.9 MB)
2025-06-06T03:31:55.9353828Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 8.9/8.9 MB 221.8 MB/s eta 0:00:00
2025-06-06T03:31:55.9392315Z Downloading nvidia_cuda_nvrtc_cu12-12.6.77-py3-none-manylinux2014_x86_64.whl (23.7 MB)
2025-06-06T03:31:56.0342605Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 23.7/23.7 MB 253.1 MB/s eta 0:00:00
2025-06-06T03:31:56.0382318Z Downloading nvidia_cuda_runtime_cu12-12.6.77-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (897 kB)
2025-06-06T03:31:56.0451360Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 897.7/897.7 kB 142.9 MB/s eta 0:00:00
2025-06-06T03:31:56.0486624Z Downloading nvidia_cudnn_cu12-9.5.1.17-py3-none-manylinux_2_28_x86_64.whl (571.0 MB)
2025-06-06T03:32:01.1306324Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 571.0/571.0 MB 61.7 MB/s eta 0:00:00
2025-06-06T03:32:01.1365992Z Downloading nvidia_cufft_cu12-11.3.0.4-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (200.2 MB)
2025-06-06T03:32:02.0509874Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 200.2/200.2 MB 219.4 MB/s eta 0:00:00
2025-06-06T03:32:02.0554915Z Downloading nvidia_cufile_cu12-1.11.1.6-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (1.1 MB)
2025-06-06T03:32:02.0640036Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.1/1.1 MB 152.5 MB/s eta 0:00:00
2025-06-06T03:32:02.0679713Z Downloading nvidia_curand_cu12-10.3.7.77-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (56.3 MB)
2025-06-06T03:32:02.2907842Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 56.3/56.3 MB 254.6 MB/s eta 0:00:00
2025-06-06T03:32:02.2946885Z Downloading nvidia_cusolver_cu12-11.7.1.2-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (158.2 MB)
2025-06-06T03:32:02.9386670Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 158.2/158.2 MB 246.4 MB/s eta 0:00:00
2025-06-06T03:32:02.9434397Z Downloading nvidia_cusparse_cu12-12.5.4.2-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (216.6 MB)
2025-06-06T03:32:04.6002001Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 216.6/216.6 MB 130.8 MB/s eta 0:00:00
2025-06-06T03:32:04.6041267Z Downloading nvidia_cusparselt_cu12-0.6.3-py3-none-manylinux2014_x86_64.whl (156.8 MB)
2025-06-06T03:32:05.2472742Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 156.8/156.8 MB 244.5 MB/s eta 0:00:00
2025-06-06T03:32:05.2513365Z Downloading nvidia_nccl_cu12-2.26.2-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (201.3 MB)
2025-06-06T03:32:06.2056349Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 201.3/201.3 MB 211.3 MB/s eta 0:00:00
2025-06-06T03:32:06.2095867Z Downloading nvidia_nvjitlink_cu12-12.6.85-py3-none-manylinux2010_x86_64.manylinux_2_12_x86_64.whl (19.7 MB)
2025-06-06T03:32:06.2916116Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 19.7/19.7 MB 249.8 MB/s eta 0:00:00
2025-06-06T03:32:06.2961108Z Downloading nvidia_nvtx_cu12-12.6.77-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (89 kB)
2025-06-06T03:32:06.3036848Z Downloading triton-3.3.1-cp312-cp312-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl (155.7 MB)
2025-06-06T03:32:07.8893942Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 155.7/155.7 MB 98.2 MB/s eta 0:00:00
2025-06-06T03:32:07.8932114Z Downloading transformers-4.52.4-py3-none-any.whl (10.5 MB)
2025-06-06T03:32:07.9378584Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 10.5/10.5 MB 241.7 MB/s eta 0:00:00
2025-06-06T03:32:07.9412808Z Downloading huggingface_hub-0.32.4-py3-none-any.whl (512 kB)
2025-06-06T03:32:07.9485929Z Downloading hf_xet-1.1.3-cp37-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (4.8 MB)
2025-06-06T03:32:07.9736197Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 4.8/4.8 MB 199.7 MB/s eta 0:00:00
2025-06-06T03:32:07.9770416Z Downloading tokenizers-0.21.1-cp39-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)
2025-06-06T03:32:07.9926985Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.0/3.0 MB 207.8 MB/s eta 0:00:00
2025-06-06T03:32:07.9962206Z Downloading sentence_transformers-4.1.0-py3-none-any.whl (345 kB)
2025-06-06T03:32:08.0092142Z Downloading scikit_learn-1.7.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.5 MB)
2025-06-06T03:32:08.0840503Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 12.5/12.5 MB 169.1 MB/s eta 0:00:00
2025-06-06T03:32:08.0883633Z Downloading psutil-7.0.0-cp36-abi3-manylinux_2_12_x86_64.manylinux2010_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (277 kB)
2025-06-06T03:32:08.0946315Z Downloading prometheus_client-0.22.1-py3-none-any.whl (58 kB)
2025-06-06T03:32:08.1007563Z Downloading matplotlib-3.10.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (8.6 MB)
2025-06-06T03:32:08.1410612Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 8.6/8.6 MB 220.8 MB/s eta 0:00:00
2025-06-06T03:32:08.1447569Z Downloading pandas-2.3.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.0 MB)
2025-06-06T03:32:08.1987061Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 12.0/12.0 MB 228.8 MB/s eta 0:00:00
2025-06-06T03:32:08.2022383Z Downloading plotly-6.1.2-py3-none-any.whl (16.3 MB)
2025-06-06T03:32:08.2701246Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 16.3/16.3 MB 244.6 MB/s eta 0:00:00
2025-06-06T03:32:08.2747991Z Downloading aio_pika-9.5.5-py3-none-any.whl (54 kB)
2025-06-06T03:32:08.2814499Z Downloading aiormq-6.8.1-py3-none-any.whl (31 kB)
2025-06-06T03:32:08.2871597Z Downloading pamqp-3.3.0-py2.py3-none-any.whl (33 kB)
2025-06-06T03:32:08.2927063Z Downloading exceptiongroup-1.3.0-py3-none-any.whl (16 kB)
2025-06-06T03:32:08.2982071Z Downloading click_didyoumean-0.3.1-py3-none-any.whl (3.6 kB)
2025-06-06T03:32:08.3033990Z Downloading click_plugins-1.1.1-py2.py3-none-any.whl (7.5 kB)
2025-06-06T03:32:08.3085108Z Downloading click_repl-0.3.0-py3-none-any.whl (10 kB)
2025-06-06T03:32:08.3135873Z Downloading contourpy-1.3.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (323 kB)
2025-06-06T03:32:08.3204165Z Downloading cycler-0.12.1-py3-none-any.whl (8.3 kB)
2025-06-06T03:32:08.3257030Z Downloading grpcio_status-1.62.3-py3-none-any.whl (14 kB)
2025-06-06T03:32:08.3316155Z Downloading fireworks_ai-0.17.4-py3-none-any.whl (254 kB)
2025-06-06T03:32:08.3497008Z Downloading fonttools-4.58.1-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (4.9 MB)
2025-06-06T03:32:08.3798401Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 4.9/4.9 MB 167.2 MB/s eta 0:00:00
2025-06-06T03:32:08.3831685Z Downloading fsspec-2025.5.1-py3-none-any.whl (199 kB)
2025-06-06T03:32:08.3890131Z Downloading joblib-1.5.1-py3-none-any.whl (307 kB)
2025-06-06T03:32:08.3958022Z Downloading kiwisolver-1.4.8-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.5 MB)
2025-06-06T03:32:08.4049688Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.5/1.5 MB 176.8 MB/s eta 0:00:00
2025-06-06T03:32:08.4084072Z Downloading narwhals-1.41.0-py3-none-any.whl (357 kB)
2025-06-06T03:32:08.4162726Z Downloading nest_asyncio-1.6.0-py3-none-any.whl (5.2 kB)
2025-06-06T03:32:08.4227951Z Downloading python_socketio-5.13.0-py3-none-any.whl (77 kB)
2025-06-06T03:32:08.4283514Z Downloading bidict-0.23.1-py3-none-any.whl (32 kB)
2025-06-06T03:32:08.4352916Z Downloading python_engineio-4.12.2-py3-none-any.whl (59 kB)
2025-06-06T03:32:08.4405824Z Downloading regex-2024.11.6-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (796 kB)
2025-06-06T03:32:08.4473420Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 796.9/796.9 kB 132.3 MB/s eta 0:00:00
2025-06-06T03:32:08.4507458Z Downloading safetensors-0.5.3-cp38-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (471 kB)
2025-06-06T03:32:08.4581064Z Downloading scipy-1.15.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (37.3 MB)
2025-06-06T03:32:08.6954178Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 37.3/37.3 MB 158.5 MB/s eta 0:00:00
2025-06-06T03:32:08.6967064Z Using cached setuptools-80.9.0-py3-none-any.whl (1.2 MB)
2025-06-06T03:32:08.7014755Z Downloading simple_websocket-1.1.0-py3-none-any.whl (13 kB)
2025-06-06T03:32:08.7071359Z Downloading sympy-1.14.0-py3-none-any.whl (6.3 MB)
2025-06-06T03:32:08.7364675Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 6.3/6.3 MB 224.1 MB/s eta 0:00:00
2025-06-06T03:32:08.7400556Z Downloading mpmath-1.3.0-py3-none-any.whl (536 kB)
2025-06-06T03:32:08.7454928Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 536.2/536.2 kB 86.9 MB/s eta 0:00:00
2025-06-06T03:32:08.7493251Z Downloading threadpoolctl-3.6.0-py3-none-any.whl (18 kB)
2025-06-06T03:32:08.7545788Z Downloading tzdata-2025.2-py2.py3-none-any.whl (347 kB)
2025-06-06T03:32:08.7610408Z Downloading networkx-3.5-py3-none-any.whl (2.0 MB)
2025-06-06T03:32:08.7735549Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 2.0/2.0 MB 176.1 MB/s eta 0:00:00
2025-06-06T03:32:11.2075826Z Building wheels for collected packages: pyperclip
2025-06-06T03:32:11.2085119Z   Building wheel for pyperclip (pyproject.toml): started
2025-06-06T03:32:11.4335345Z   Building wheel for pyperclip (pyproject.toml): finished with status 'done'
2025-06-06T03:32:11.4342520Z   Created wheel for pyperclip: filename=pyperclip-1.9.0-py3-none-any.whl size=11103 sha256=40d7f3b4f72765ece693c618f0e2178b69574b6644a97982287c888cc63e6009
2025-06-06T03:32:11.4344614Z   Stored in directory: /home/runner/.cache/pip/wheels/e0/e8/fc/8ab8aa326e33bc066ccd5f3ca9646eab4299881af933f94f09
2025-06-06T03:32:11.4364711Z Successfully built pyperclip
2025-06-06T03:32:11.8394777Z Installing collected packages: pytz, pyperclip, nvidia-cusparselt-cu12, mpmath, vine, uvicorn, tzdata, threadpoolctl, sympy, setuptools, scipy, safetensors, regex, redis, python-multipart, psutil, protobuf, prometheus_client, portalocker, pamqp, nvidia-nvtx-cu12, nvidia-nvjitlink-cu12, nvidia-nccl-cu12, nvidia-curand-cu12, nvidia-cufile-cu12, nvidia-cuda-runtime-cu12, nvidia-cuda-nvrtc-cu12, nvidia-cuda-cupti-cu12, nvidia-cublas-cu12, networkx, nest-asyncio, narwhals, kiwisolver, joblib, hf-xet, fsspec, fonttools, exceptiongroup, cycler, contourpy, click-plugins, click-didyoumean, billiard, bidict, triton, starlette, simple-websocket, scikit-learn, plotly, pandas, nvidia-cusparse-cu12, nvidia-cufft-cu12, nvidia-cudnn-cu12, matplotlib, huggingface-hub, grpcio-reflection, grpcio-health-checking, click-repl, amqp, aiormq, tokenizers, python-engineio, nvidia-cusolver-cu12, kombu, grpcio-status, fastapi, aio_pika, transformers, torch, qdrant-client, python-socketio, celery, sentence-transformers, mem0ai, flask-socketio, fireworks-ai
2025-06-06T03:32:25.5610520Z   Attempting uninstall: protobuf
2025-06-06T03:32:25.5679012Z     Found existing installation: protobuf 5.29.4
2025-06-06T03:32:25.5740932Z     Uninstalling protobuf-5.29.4:
2025-06-06T03:32:25.5757441Z       Successfully uninstalled protobuf-5.29.4
2025-06-06T03:33:05.0592181Z   Attempting uninstall: grpcio-status
2025-06-06T03:33:05.0639862Z     Found existing installation: grpcio-status 1.71.0
2025-06-06T03:33:05.0659796Z     Uninstalling grpcio-status-1.71.0:
2025-06-06T03:33:05.0668360Z       Successfully uninstalled grpcio-status-1.71.0
2025-06-06T03:33:27.6073635Z   Attempting uninstall: fireworks-ai
2025-06-06T03:33:27.6125849Z     Found existing installation: fireworks-ai 0.17.16
2025-06-06T03:33:27.6322651Z     Uninstalling fireworks-ai-0.17.16:
2025-06-06T03:33:27.6359940Z       Successfully uninstalled fireworks-ai-0.17.16
2025-06-06T03:33:27.8878199Z 
2025-06-06T03:33:27.9063866Z Successfully installed aio_pika-9.5.5 aiormq-6.8.1 amqp-5.3.1 bidict-0.23.1 billiard-4.2.1 celery-5.5.3 click-didyoumean-0.3.1 click-plugins-1.1.1 click-repl-0.3.0 contourpy-1.3.2 cycler-0.12.1 exceptiongroup-1.3.0 fastapi-0.115.12 fireworks-ai-0.17.4 flask-socketio-5.5.1 fonttools-4.58.1 fsspec-2025.5.1 grpcio-health-checking-1.62.3 grpcio-reflection-1.62.3 grpcio-status-1.62.3 hf-xet-1.1.3 huggingface-hub-0.32.4 joblib-1.5.1 kiwisolver-1.4.8 kombu-5.5.4 matplotlib-3.10.3 mem0ai-0.1.104 mpmath-1.3.0 narwhals-1.41.0 nest-asyncio-1.6.0 networkx-3.5 nvidia-cublas-cu12-12.6.4.1 nvidia-cuda-cupti-cu12-12.6.80 nvidia-cuda-nvrtc-cu12-12.6.77 nvidia-cuda-runtime-cu12-12.6.77 nvidia-cudnn-cu12-9.5.1.17 nvidia-cufft-cu12-11.3.0.4 nvidia-cufile-cu12-1.11.1.6 nvidia-curand-cu12-10.3.7.77 nvidia-cusolver-cu12-11.7.1.2 nvidia-cusparse-cu12-12.5.4.2 nvidia-cusparselt-cu12-0.6.3 nvidia-nccl-cu12-2.26.2 nvidia-nvjitlink-cu12-12.6.85 nvidia-nvtx-cu12-12.6.77 pamqp-3.3.0 pandas-2.3.0 plotly-6.1.2 portalocker-2.10.1 prometheus_client-0.22.1 protobuf-4.25.8 psutil-7.0.0 pyperclip-1.9.0 python-engineio-4.12.2 python-multipart-0.0.20 python-socketio-5.13.0 pytz-2025.2 qdrant-client-1.14.2 redis-6.2.0 regex-2024.11.6 safetensors-0.5.3 scikit-learn-1.7.0 scipy-1.15.3 sentence-transformers-4.1.0 setuptools-80.9.0 simple-websocket-1.1.0 starlette-0.46.2 sympy-1.14.0 threadpoolctl-3.6.0 tokenizers-0.21.1 torch-2.7.1 transformers-4.52.4 triton-3.3.1 tzdata-2025.2 uvicorn-0.34.3 vine-5.1.0
2025-06-06T03:33:28.9198499Z Installing MCP SDK using installation script...
2025-06-06T03:33:28.9539192Z Platform: Linux
2025-06-06T03:33:28.9540044Z Python version: 3.12.10 (main, Apr  8 2025, 22:38:13) [GCC 13.3.0]
2025-06-06T03:33:28.9541259Z Python executable: /opt/hostedtoolcache/Python/3.12.10/x64/bin/python
2025-06-06T03:33:28.9542949Z Looking for script at: /home/runner/work/pAIssive_income/pAIssive_income/scripts/setup/install_mcp_sdk.py
2025-06-06T03:33:28.9544725Z Absolute script path: /home/runner/work/pAIssive_income/pAIssive_income/scripts/setup/install_mcp_sdk.py
2025-06-06T03:33:28.9545983Z Expected directory 1: /home/runner/work/pAIssive_income/pAIssive_income/scripts/setup
2025-06-06T03:33:28.9546913Z Expected directory 2: /home/runner/work/pAIssive_income/pAIssive_income/scripts/setup
2025-06-06T03:33:28.9580189Z Running command: /opt/hostedtoolcache/Python/3.12.10/x64/bin/python /home/runner/work/pAIssive_income/pAIssive_income/scripts/setup/install_mcp_sdk.py
2025-06-06T03:33:34.7034099Z Platform: Linux
2025-06-06T03:33:34.7034853Z Python version: 3.12.10 (main, Apr  8 2025, 22:38:13) [GCC 13.3.0]
2025-06-06T03:33:34.7035658Z Python executable: /opt/hostedtoolcache/Python/3.12.10/x64/bin/python
2025-06-06T03:33:34.7036292Z Running in CI environment: True
2025-06-06T03:33:34.7036688Z MCP SDK is not installed
2025-06-06T03:33:34.7037126Z Installing MCP SDK from GitHub...
2025-06-06T03:33:34.7038004Z Cloning MCP SDK repository to /tmp/tmptxtllmcp...
2025-06-06T03:33:34.7038895Z Installing MCP SDK...
2025-06-06T03:33:34.7039336Z MCP SDK installed successfully
2025-06-06T03:33:34.7040067Z Running in CI environment, returning success regardless of installation result
2025-06-06T03:33:34.7040560Z 
2025-06-06T03:33:34.7148271Z ##[group]Run ruff check .
2025-06-06T03:33:34.7148553Z [36;1mruff check .[0m
2025-06-06T03:33:34.7148757Z [36;1mpyright .[0m
2025-06-06T03:33:34.7202173Z shell: /usr/bin/bash -e {0}
2025-06-06T03:33:34.7202407Z env:
2025-06-06T03:33:34.7202635Z   TOOL_API_KEY: ci-test-api-key-for-github-actions
2025-06-06T03:33:34.7203000Z   pythonLocation: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:33:34.7203403Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib/pkgconfig
2025-06-06T03:33:34.7203787Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:33:34.7204139Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:33:34.7204489Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:33:34.7204856Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib
2025-06-06T03:33:34.7205155Z ##[endgroup]
2025-06-06T03:33:34.8132919Z .github/scripts/ensure-codeql-configs.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8134567Z   |
2025-06-06T03:33:34.8134790Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8135099Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8135360Z 2 | # ruff: noqa: N999
2025-06-06T03:33:34.8135563Z 3 | """
2025-06-06T03:33:34.8135729Z   |
2025-06-06T03:33:34.8135828Z 
2025-06-06T03:33:34.8136239Z .github/scripts/generate_ci_cd_dashboard.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8136667Z   |
2025-06-06T03:33:34.8136857Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8137106Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8137617Z 2 | """
2025-06-06T03:33:34.8137980Z 3 | Generate CI/CD dashboard visualizations from workflow metrics.
2025-06-06T03:33:34.8138303Z   |
2025-06-06T03:33:34.8138414Z 
2025-06-06T03:33:34.8138781Z .github/scripts/validate_sarif.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8139189Z   |
2025-06-06T03:33:34.8139412Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8139664Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8139882Z 2 | """
2025-06-06T03:33:34.8140201Z 3 | Validate SARIF files and create valid empty ones if needed.
2025-06-06T03:33:34.8140504Z   |
2025-06-06T03:33:34.8140591Z 
2025-06-06T03:33:34.8140974Z adk_demo/mem0_enhanced_adk_agents.py:317:13: TRY300 Consider moving this statement to an `else` block
2025-06-06T03:33:34.8141384Z     |
2025-06-06T03:33:34.8141663Z 315 |             if isinstance(search_result, list):
2025-06-06T03:33:34.8142008Z 316 |                 return search_result
2025-06-06T03:33:34.8142270Z 317 |             return []
2025-06-06T03:33:34.8142509Z     |             ^^^^^^^^^ TRY300
2025-06-06T03:33:34.8142783Z 318 |         except Exception:
2025-06-06T03:33:34.8143129Z 319 |             logger.exception("Error retrieving memories")
2025-06-06T03:33:34.8143420Z     |
2025-06-06T03:33:34.8143522Z 
2025-06-06T03:33:34.8143905Z agent_team/mem0_enhanced_agents.py:256:13: TRY300 Consider moving this statement to an `else` block
2025-06-06T03:33:34.8144310Z     |
2025-06-06T03:33:34.8144572Z 254 |             if isinstance(search_result, list):
2025-06-06T03:33:34.8144898Z 255 |                 return search_result
2025-06-06T03:33:34.8145157Z 256 |             return []
2025-06-06T03:33:34.8145390Z     |             ^^^^^^^^^ TRY300
2025-06-06T03:33:34.8145653Z 257 |         except Exception:
2025-06-06T03:33:34.8145989Z 258 |             logger.exception("Error retrieving memories")
2025-06-06T03:33:34.8146268Z     |
2025-06-06T03:33:34.8146367Z 
2025-06-06T03:33:34.8146860Z ai_models/adapters/mcp_adapter.py:25:17: D401 First line of docstring should be in imperative mood: "Placeholder connect method."
2025-06-06T03:33:34.8147536Z    |
2025-06-06T03:33:34.8147784Z 24 |             def connect(self) -> None:
2025-06-06T03:33:34.8148337Z 25 |                 """Placeholder connect method."""
2025-06-06T03:33:34.8148660Z    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ D401
2025-06-06T03:33:34.8148954Z 26 |
2025-06-06T03:33:34.8149520Z 27 |             def send_message(self, message: str) -> str:
2025-06-06T03:33:34.8149809Z    |
2025-06-06T03:33:34.8149898Z 
2025-06-06T03:33:34.8150212Z ai_models/adapters/mcp_adapter.py:27:36: ARG002 Unused method argument: `message`
2025-06-06T03:33:34.8150565Z    |
2025-06-06T03:33:34.8150813Z 25 |                 """Placeholder connect method."""
2025-06-06T03:33:34.8151062Z 26 |
2025-06-06T03:33:34.8151333Z 27 |             def send_message(self, message: str) -> str:
2025-06-06T03:33:34.8151651Z    |                                    ^^^^^^^ ARG002
2025-06-06T03:33:34.8151985Z 28 |                 """Placeholder send_message method."""
2025-06-06T03:33:34.8152289Z 29 |                 return ""
2025-06-06T03:33:34.8152493Z    |
2025-06-06T03:33:34.8152585Z 
2025-06-06T03:33:34.8153088Z ai_models/adapters/mcp_adapter.py:28:17: D401 First line of docstring should be in imperative mood: "Placeholder send_message method."
2025-06-06T03:33:34.8153587Z    |
2025-06-06T03:33:34.8153859Z 27 |             def send_message(self, message: str) -> str:
2025-06-06T03:33:34.8154491Z 28 |                 """Placeholder send_message method."""
2025-06-06T03:33:34.8154819Z    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ D401
2025-06-06T03:33:34.8155110Z 29 |                 return ""
2025-06-06T03:33:34.8155314Z    |
2025-06-06T03:33:34.8155407Z 
2025-06-06T03:33:34.8155889Z ai_models/adapters/mcp_adapter.py:32:17: D401 First line of docstring should be in imperative mood: "Placeholder disconnect method."
2025-06-06T03:33:34.8156382Z    |
2025-06-06T03:33:34.8156628Z 31 |             def disconnect(self) -> None:
2025-06-06T03:33:34.8156979Z 32 |                 """Placeholder disconnect method."""
2025-06-06T03:33:34.8157562Z    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ D401
2025-06-06T03:33:34.8157825Z    |
2025-06-06T03:33:34.8157912Z 
2025-06-06T03:33:34.8158250Z ai_models/artist_agent.py:70:9: C901 `extract_relevant_expression` is too complex (11 > 10)
2025-06-06T03:33:34.8158646Z    |
2025-06-06T03:33:34.8158824Z 68 |         return ""
2025-06-06T03:33:34.8159005Z 69 |
2025-06-06T03:33:34.8159389Z 70 |     def extract_relevant_expression(self, prompt: str, tool_name: str) -> str:
2025-06-06T03:33:34.8159790Z    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ C901
2025-06-06T03:33:34.8160025Z 71 |         """
2025-06-06T03:33:34.8160404Z 72 |         Extract the relevant expression from the prompt based on the tool.
2025-06-06T03:33:34.8160728Z    |
2025-06-06T03:33:34.8160821Z 
2025-06-06T03:33:34.8161094Z ai_models/artist_agent.py:70:9: PLR0911 Too many return statements (8 > 6)
2025-06-06T03:33:34.8161429Z    |
2025-06-06T03:33:34.8161600Z 68 |         return ""
2025-06-06T03:33:34.8161784Z 69 |
2025-06-06T03:33:34.8162158Z 70 |     def extract_relevant_expression(self, prompt: str, tool_name: str) -> str:
2025-06-06T03:33:34.8162559Z    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLR0911
2025-06-06T03:33:34.8162792Z 71 |         """
2025-06-06T03:33:34.8163178Z 72 |         Extract the relevant expression from the prompt based on the tool.
2025-06-06T03:33:34.8163504Z    |
2025-06-06T03:33:34.8163595Z 
2025-06-06T03:33:34.8163962Z ai_models/artist_agent.py:104:21: PLW2901 `for` loop variable `part` overwritten by assignment target
2025-06-06T03:33:34.8164370Z     |
2025-06-06T03:33:34.8164674Z 102 |                 # Take the longest match that contains operators
2025-06-06T03:33:34.8165336Z 103 |                 for part in sorted(math_parts, key=len, reverse=True):
2025-06-06T03:33:34.8165731Z 104 |                     part = part.strip()
2025-06-06T03:33:34.8166027Z     |                     ^^^^ PLW2901
2025-06-06T03:33:34.8166300Z 105 |                     if (
2025-06-06T03:33:34.8166658Z 106 |                         any(op in part for op in ["+", "-", "*", "/", "%"])
2025-06-06T03:33:34.8167114Z     |
2025-06-06T03:33:34.8167209Z 
2025-06-06T03:33:34.8167879Z ai_models/artist_rl/test_artist_rl.py:17:9: ANN201 Missing return type annotation for public function `setUp`
2025-06-06T03:33:34.8168478Z    |
2025-06-06T03:33:34.8168726Z 15 |     """Unit tests for ArtistRLEnv."""
2025-06-06T03:33:34.8169005Z 16 |
2025-06-06T03:33:34.8169189Z 17 |     def setUp(self):
2025-06-06T03:33:34.8169404Z    |         ^^^^^ ANN201
2025-06-06T03:33:34.8169670Z 18 |         self.env = ArtistRLEnv()
2025-06-06T03:33:34.8169906Z    |
2025-06-06T03:33:34.8170135Z    = help: Add return type annotation: `None`
2025-06-06T03:33:34.8170323Z 
2025-06-06T03:33:34.8170634Z ai_models/artist_rl/test_artist_rl.py:17:9: D102 Missing docstring in public method
2025-06-06T03:33:34.8170999Z    |
2025-06-06T03:33:34.8171223Z 15 |     """Unit tests for ArtistRLEnv."""
2025-06-06T03:33:34.8171464Z 16 |
2025-06-06T03:33:34.8171643Z 17 |     def setUp(self):
2025-06-06T03:33:34.8171849Z    |         ^^^^^ D102
2025-06-06T03:33:34.8172104Z 18 |         self.env = ArtistRLEnv()
2025-06-06T03:33:34.8172331Z    |
2025-06-06T03:33:34.8172418Z 
2025-06-06T03:33:34.8172837Z ai_models/artist_rl/test_artist_rl.py:20:9: ANN201 Missing return type annotation for public function `tearDown`
2025-06-06T03:33:34.8173281Z    |
2025-06-06T03:33:34.8173493Z 18 |         self.env = ArtistRLEnv()
2025-06-06T03:33:34.8173722Z 19 |
2025-06-06T03:33:34.8173906Z 20 |     def tearDown(self):
2025-06-06T03:33:34.8174117Z    |         ^^^^^^^^ ANN201
2025-06-06T03:33:34.8174365Z 21 |         self.env.close()
2025-06-06T03:33:34.8174608Z    |
2025-06-06T03:33:34.8174826Z    = help: Add return type annotation: `None`
2025-06-06T03:33:34.8175009Z 
2025-06-06T03:33:34.8175311Z ai_models/artist_rl/test_artist_rl.py:20:9: D102 Missing docstring in public method
2025-06-06T03:33:34.8175674Z    |
2025-06-06T03:33:34.8175882Z 18 |         self.env = ArtistRLEnv()
2025-06-06T03:33:34.8176109Z 19 |
2025-06-06T03:33:34.8176289Z 20 |     def tearDown(self):
2025-06-06T03:33:34.8176509Z    |         ^^^^^^^^ D102
2025-06-06T03:33:34.8176751Z 21 |         self.env.close()
2025-06-06T03:33:34.8176962Z    |
2025-06-06T03:33:34.8177050Z 
2025-06-06T03:33:34.8177755Z ai_models/artist_rl/test_artist_rl.py:23:9: ANN201 Missing return type annotation for public function `test_reset_returns_observation`
2025-06-06T03:33:34.8178276Z    |
2025-06-06T03:33:34.8178457Z 21 |         self.env.close()
2025-06-06T03:33:34.8178662Z 22 |
2025-06-06T03:33:34.8178923Z 23 |     def test_reset_returns_observation(self):
2025-06-06T03:33:34.8179234Z    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ANN201
2025-06-06T03:33:34.8179601Z 24 |         """reset() should return an initial observation."""
2025-06-06T03:33:34.8179939Z 25 |         obs = self.env.reset()
2025-06-06T03:33:34.8180163Z    |
2025-06-06T03:33:34.8180381Z    = help: Add return type annotation: `None`
2025-06-06T03:33:34.8180572Z 
2025-06-06T03:33:34.8181000Z ai_models/artist_rl/test_artist_rl.py:26:9: PT009 Use a regular `assert` instead of unittest-style `assertIsNotNone`
2025-06-06T03:33:34.8181458Z    |
2025-06-06T03:33:34.8181744Z 24 |         """reset() should return an initial observation."""
2025-06-06T03:33:34.8182080Z 25 |         obs = self.env.reset()
2025-06-06T03:33:34.8182375Z 26 |         self.assertIsNotNone(obs)
2025-06-06T03:33:34.8182652Z    |         ^^^^^^^^^^^^^^^^^^^^ PT009
2025-06-06T03:33:34.8182873Z 27 |
2025-06-06T03:33:34.8183107Z 28 |     def test_step_returns_tuple(self):
2025-06-06T03:33:34.8183349Z    |
2025-06-06T03:33:34.8183608Z    = help: Replace `assertIsNotNone(...)` with `assert ...`
2025-06-06T03:33:34.8183832Z 
2025-06-06T03:33:34.8184313Z ai_models/artist_rl/test_artist_rl.py:28:9: ANN201 Missing return type annotation for public function `test_step_returns_tuple`
2025-06-06T03:33:34.8184798Z    |
2025-06-06T03:33:34.8185018Z 26 |         self.assertIsNotNone(obs)
2025-06-06T03:33:34.8185250Z 27 |
2025-06-06T03:33:34.8185479Z 28 |     def test_step_returns_tuple(self):
2025-06-06T03:33:34.8185905Z    |         ^^^^^^^^^^^^^^^^^^^^^^^ ANN201
2025-06-06T03:33:34.8186266Z 29 |         """step() should return (obs, reward, done, info)."""
2025-06-06T03:33:34.8186574Z 30 |         self.env.reset()
2025-06-06T03:33:34.8186888Z    |
2025-06-06T03:33:34.8187116Z    = help: Add return type annotation: `None`
2025-06-06T03:33:34.8187419Z 
2025-06-06T03:33:34.8187831Z ai_models/artist_rl/test_artist_rl.py:33:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
2025-06-06T03:33:34.8188269Z    |
2025-06-06T03:33:34.8188527Z 31 |         action = self.env.action_space.sample()
2025-06-06T03:33:34.8188860Z 32 |         result = self.env.step(action)
2025-06-06T03:33:34.8189180Z 33 |         self.assertEqual(len(result), 4)
2025-06-06T03:33:34.8189459Z    |         ^^^^^^^^^^^^^^^^ PT009
2025-06-06T03:33:34.8189752Z 34 |         obs, reward, done, info = result
2025-06-06T03:33:34.8190085Z 35 |         self.assertIsInstance(reward, float)
2025-06-06T03:33:34.8190337Z    |
2025-06-06T03:33:34.8190581Z    = help: Replace `assertEqual(...)` with `assert ...`
2025-06-06T03:33:34.8190792Z 
2025-06-06T03:33:34.8191225Z ai_models/artist_rl/test_artist_rl.py:35:9: PT009 Use a regular `assert` instead of unittest-style `assertIsInstance`
2025-06-06T03:33:34.8191682Z    |
2025-06-06T03:33:34.8191916Z 33 |         self.assertEqual(len(result), 4)
2025-06-06T03:33:34.8192231Z 34 |         obs, reward, done, info = result
2025-06-06T03:33:34.8192559Z 35 |         self.assertIsInstance(reward, float)
2025-06-06T03:33:34.8192853Z    |         ^^^^^^^^^^^^^^^^^^^^^ PT009
2025-06-06T03:33:34.8193167Z 36 |         self.assertIsInstance(done, bool)
2025-06-06T03:33:34.8193501Z 37 |         self.assertIsInstance(info, dict)
2025-06-06T03:33:34.8193936Z    |
2025-06-06T03:33:34.8194378Z    = help: Replace `assertIsInstance(...)` with `assert ...`
2025-06-06T03:33:34.8194764Z 
2025-06-06T03:33:34.8195535Z ai_models/artist_rl/test_artist_rl.py:36:9: PT009 Use a regular `assert` instead of unittest-style `assertIsInstance`
2025-06-06T03:33:34.8196352Z    |
2025-06-06T03:33:34.8196751Z 34 |         obs, reward, done, info = result
2025-06-06T03:33:34.8197592Z 35 |         self.assertIsInstance(reward, float)
2025-06-06T03:33:34.8198201Z 36 |         self.assertIsInstance(done, bool)
2025-06-06T03:33:34.8198701Z    |         ^^^^^^^^^^^^^^^^^^^^^ PT009
2025-06-06T03:33:34.8199248Z 37 |         self.assertIsInstance(info, dict)
2025-06-06T03:33:34.8199677Z    |
2025-06-06T03:33:34.8200130Z    = help: Replace `assertIsInstance(...)` with `assert ...`
2025-06-06T03:33:34.8200518Z 
2025-06-06T03:33:34.8201272Z ai_models/artist_rl/test_artist_rl.py:37:9: PT009 Use a regular `assert` instead of unittest-style `assertIsInstance`
2025-06-06T03:33:34.8202025Z    |
2025-06-06T03:33:34.8202440Z 35 |         self.assertIsInstance(reward, float)
2025-06-06T03:33:34.8203014Z 36 |         self.assertIsInstance(done, bool)
2025-06-06T03:33:34.8203560Z 37 |         self.assertIsInstance(info, dict)
2025-06-06T03:33:34.8204086Z    |         ^^^^^^^^^^^^^^^^^^^^^ PT009
2025-06-06T03:33:34.8204457Z 38 |
2025-06-06T03:33:34.8204857Z 39 |     def test_minimal_train_test_cycle(self):
2025-06-06T03:33:34.8205270Z    |
2025-06-06T03:33:34.8205715Z    = help: Replace `assertIsInstance(...)` with `assert ...`
2025-06-06T03:33:34.8206096Z 
2025-06-06T03:33:34.8207755Z ai_models/artist_rl/test_artist_rl.py:39:9: ANN201 Missing return type annotation for public function `test_minimal_train_test_cycle`
2025-06-06T03:33:34.8208748Z    |
2025-06-06T03:33:34.8209156Z 37 |         self.assertIsInstance(info, dict)
2025-06-06T03:33:34.8209589Z 38 |
2025-06-06T03:33:34.8209987Z 39 |     def test_minimal_train_test_cycle(self):
2025-06-06T03:33:34.8210476Z    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ANN201
2025-06-06T03:33:34.8211127Z 40 |         """Minimal train/test loop: run env for a few steps."""
2025-06-06T03:33:34.8211688Z 41 |         obs = self.env.reset()
2025-06-06T03:33:34.8212047Z    |
2025-06-06T03:33:34.8212413Z    = help: Add return type annotation: `None`
2025-06-06T03:33:34.8212941Z 
2025-06-06T03:33:34.8213714Z ai_models/artist_rl/test_artist_rl.py:49:9: PT009 Use a regular `assert` instead of unittest-style `assertIsInstance`
2025-06-06T03:33:34.8214643Z    |
2025-06-06T03:33:34.8214951Z 47 |             if done:
2025-06-06T03:33:34.8215317Z 48 |                 break
2025-06-06T03:33:34.8215818Z 49 |         self.assertIsInstance(total_reward, float)
2025-06-06T03:33:34.8216266Z    |         ^^^^^^^^^^^^^^^^^^^^^ PT009
2025-06-06T03:33:34.8216504Z    |
2025-06-06T03:33:34.8216786Z    = help: Replace `assertIsInstance(...)` with `assert ...`
2025-06-06T03:33:34.8217006Z 
2025-06-06T03:33:34.8217581Z artist_experiments/multi_api_orchestration.py:53:21: G004 Logging statement uses f-string
2025-06-06T03:33:34.8217997Z    |
2025-06-06T03:33:34.8218155Z 51 |         """
2025-06-06T03:33:34.8218530Z 52 |         # This is a mock implementation
2025-06-06T03:33:34.8219282Z 53 |         logger.info(f"Searching for products with query: {query}, limit: {limit}")
2025-06-06T03:33:34.8220067Z    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T03:33:34.8220494Z 54 |
2025-06-06T03:33:34.8220855Z 55 |         # Simulate API call
2025-06-06T03:33:34.8221224Z    |
2025-06-06T03:33:34.8221366Z 
2025-06-06T03:33:34.8221987Z artist_experiments/multi_api_orchestration.py:78:21: G004 Logging statement uses f-string
2025-06-06T03:33:34.8222697Z    |
2025-06-06T03:33:34.8222968Z 76 |         """
2025-06-06T03:33:34.8223357Z 77 |         # This is a mock implementation
2025-06-06T03:33:34.8223796Z 78 |         logger.info(f"Getting market trends for category: {category}")
2025-06-06T03:33:34.8224195Z    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T03:33:34.8224454Z 79 |
2025-06-06T03:33:34.8224669Z 80 |         # Simulate API call
2025-06-06T03:33:34.8224889Z    |
2025-06-06T03:33:34.8224983Z 
2025-06-06T03:33:34.8225334Z artist_experiments/multi_api_orchestration.py:107:21: G004 Logging statement uses f-string
2025-06-06T03:33:34.8225740Z     |
2025-06-06T03:33:34.8225915Z 105 |         """
2025-06-06T03:33:34.8226178Z 106 |         # This is a mock implementation
2025-06-06T03:33:34.8226632Z 107 |         logger.info(f"Analyzing competitors for company: {company_name}")
2025-06-06T03:33:34.8227043Z     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T03:33:34.8227547Z 108 |
2025-06-06T03:33:34.8227807Z 109 |         # Simulate API call
2025-06-06T03:33:34.8228044Z     |
2025-06-06T03:33:34.8228141Z 
2025-06-06T03:33:34.8228444Z artist_experiments/run_artist.py:86:18: S104 Possible binding to all interfaces
2025-06-06T03:33:34.8228804Z    |
2025-06-06T03:33:34.8229019Z 84 | if __name__ == "__main__":
2025-06-06T03:33:34.8229346Z 85 |     port = int(os.environ.get("PORT", 5000))
2025-06-06T03:33:34.8229723Z 86 |     app.run(host="0.0.0.0", port=port, debug=True)
2025-06-06T03:33:34.8230027Z    |                  ^^^^^^^^^ S104
2025-06-06T03:33:34.8230256Z    |
2025-06-06T03:33:34.8230346Z 
2025-06-06T03:33:34.8230667Z artist_experiments/run_artist.py:86:40: S201 Use of `debug=True` in Flask app detected
2025-06-06T03:33:34.8231039Z    |
2025-06-06T03:33:34.8231249Z 84 | if __name__ == "__main__":
2025-06-06T03:33:34.8231555Z 85 |     port = int(os.environ.get("PORT", 5000))
2025-06-06T03:33:34.8231920Z 86 |     app.run(host="0.0.0.0", port=port, debug=True)
2025-06-06T03:33:34.8232243Z    |                                        ^^^^^^^^^^ S201
2025-06-06T03:33:34.8232487Z    |
2025-06-06T03:33:34.8232580Z 
2025-06-06T03:33:34.8233121Z artist_experiments/test_artist_experiments.py:58:47: PLR2004 Magic value used in comparison, consider replacing `2` with a constant variable
2025-06-06T03:33:34.8233668Z    |
2025-06-06T03:33:34.8233940Z 56 |         result = api_tool.search_products("test", 2)
2025-06-06T03:33:34.8234290Z 57 |         result_dict = json.loads(result)
2025-06-06T03:33:34.8235017Z 58 |         assert len(result_dict["results"]) == 2  # noqa: S101
2025-06-06T03:33:34.8235890Z    |                                               ^ PLR2004
2025-06-06T03:33:34.8236889Z 59 |         assert result_dict["results"][0]["name"] == "test Product 1"  # noqa: S101
2025-06-06T03:33:34.8237701Z    |
2025-06-06T03:33:34.8237861Z 
2025-06-06T03:33:34.8238544Z common_utils/logging/__init__.py:1:1: A005 Module `logging` shadows a Python standard-library module
2025-06-06T03:33:34.8239819Z common_utils/secrets/__init__.py:1:1: A005 Module `secrets` shadows a Python standard-library module
2025-06-06T03:33:34.8240998Z common_utils/tooling.py:222:9: TRY300 Consider moving this statement to an `else` block
2025-06-06T03:33:34.8241659Z     |
2025-06-06T03:33:34.8242267Z 220 | …     char_count = len(text)
2025-06-06T03:33:34.8242682Z 221 | …
2025-06-06T03:33:34.8244207Z 222 | …     return f"Sentiment: {sentiment} | Words: {word_count} | Characters: {char_count} | Positive indicators: {positive_count} | Negative indicators: {negative_count}"
2025-06-06T03:33:34.8245589Z     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
2025-06-06T03:33:34.8246119Z 223 | …
2025-06-06T03:33:34.8246546Z 224 | … except Exception as e:
2025-06-06T03:33:34.8246917Z     |
2025-06-06T03:33:34.8247071Z 
2025-06-06T03:33:34.8247745Z common_utils/tooling.py:224:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T03:33:34.8248372Z     |
2025-06-06T03:33:34.8249755Z 222 |         return f"Sentiment: {sentiment} | Words: {word_count} | Characters: {char_count} | Positive indicators: {positive_count} | Ne…
2025-06-06T03:33:34.8250629Z 223 |
2025-06-06T03:33:34.8251009Z 224 |     except Exception as e:
2025-06-06T03:33:34.8251479Z     |            ^^^^^^^^^ BLE001
2025-06-06T03:33:34.8252000Z 225 |         return f"Error analyzing text: {e}"
2025-06-06T03:33:34.8252364Z     |
2025-06-06T03:33:34.8252465Z 
2025-06-06T03:33:34.8252776Z convert_bandit_to_sarif.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8253155Z   |
2025-06-06T03:33:34.8253345Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8253585Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8253806Z 2 | """
2025-06-06T03:33:34.8254071Z 3 | Convert Bandit JSON output to SARIF format.
2025-06-06T03:33:34.8254330Z   |
2025-06-06T03:33:34.8254425Z 
2025-06-06T03:33:34.8254715Z create_bandit_files.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8255063Z   |
2025-06-06T03:33:34.8255248Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8255482Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8255696Z 2 | """
2025-06-06T03:33:34.8256027Z 3 | Create Bandit configuration files for GitHub Actions workflows.
2025-06-06T03:33:34.8256349Z   |
2025-06-06T03:33:34.8256437Z 
2025-06-06T03:33:34.8256721Z create_empty_sarif.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8257063Z   |
2025-06-06T03:33:34.8257444Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8257825Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8258053Z 2 | """
2025-06-06T03:33:34.8258341Z 3 | Create empty SARIF files for GitHub Advanced Security.
2025-06-06T03:33:34.8258634Z   |
2025-06-06T03:33:34.8258726Z 
2025-06-06T03:33:34.8259040Z demo_vector_rag.py:1:1: D205 1 blank line required between summary line and description
2025-06-06T03:33:34.8259397Z    |
2025-06-06T03:33:34.8259557Z  1 | / """
2025-06-06T03:33:34.8259908Z  2 | | Demo: Vector Database + RAG (Retrieval-Augmented Generation) using ChromaDB
2025-06-06T03:33:34.8260402Z  3 | | with a Unified Schema and Best Practices for Interoperability.
2025-06-06T03:33:34.8260716Z  4 | |
2025-06-06T03:33:34.8260889Z  5 | | Requirements:
2025-06-06T03:33:34.8261181Z  6 | |  1. uv pip install chromadb sentence-transformers
2025-06-06T03:33:34.8261498Z  7 | |  2. python demo_vector_rag.py
2025-06-06T03:33:34.8261730Z  8 | |
2025-06-06T03:33:34.8261938Z  9 | | This script demonstrates:
2025-06-06T03:33:34.8262720Z 10 | | - Unified schema for vector DB (id, content, user_id, metadata, embedding)
2025-06-06T03:33:34.8263198Z 11 | | - Canonicalization and deduplication before upsert
2025-06-06T03:33:34.8263740Z 12 | | - Context propagation and metadata filtering on retrieval
2025-06-06T03:33:34.8264149Z 13 | | - Clear comments and test block for reference
2025-06-06T03:33:34.8264410Z 14 | |
2025-06-06T03:33:34.8264686Z 15 | | For more details, see README_mem0_integration.md.
2025-06-06T03:33:34.8264962Z 16 | | """
2025-06-06T03:33:34.8265129Z    | |___^ D205
2025-06-06T03:33:34.8265305Z 17 |
2025-06-06T03:33:34.8265550Z 18 |   from __future__ import annotations
2025-06-06T03:33:34.8265797Z    |
2025-06-06T03:33:34.8265999Z    = help: Insert single blank line
2025-06-06T03:33:34.8266170Z 
2025-06-06T03:33:34.8266477Z demo_vector_rag.py:47:5: D205 1 blank line required between summary line and description
2025-06-06T03:33:34.8266842Z    |
2025-06-06T03:33:34.8267092Z 46 |   def canonicalize_text(text: str) -> str:
2025-06-06T03:33:34.8267570Z 47 | /     """
2025-06-06T03:33:34.8267894Z 48 | |     Normalize and canonicalize text for deduplication.
2025-06-06T03:33:34.8268436Z 49 | |     - Lowercase, strip, remove extra whitespace, apply NFC unicode normalization.
2025-06-06T03:33:34.8268796Z 50 | |     """
2025-06-06T03:33:34.8268979Z    | |_______^ D205
2025-06-06T03:33:34.8269322Z 51 |       text = unicodedata.normalize("NFC", text.lower().strip())
2025-06-06T03:33:34.8269699Z 52 |       text = " ".join(text.split())
2025-06-06T03:33:34.8269939Z    |
2025-06-06T03:33:34.8270145Z    = help: Insert single blank line
2025-06-06T03:33:34.8270310Z 
2025-06-06T03:33:34.8270658Z demo_vector_rag.py:53:12: RET504 Unnecessary assignment to `text` before `return` statement
2025-06-06T03:33:34.8271047Z    |
2025-06-06T03:33:34.8271369Z 51 |     text = unicodedata.normalize("NFC", text.lower().strip())
2025-06-06T03:33:34.8271735Z 52 |     text = " ".join(text.split())
2025-06-06T03:33:34.8271990Z 53 |     return text
2025-06-06T03:33:34.8272188Z    |            ^^^^ RET504
2025-06-06T03:33:34.8272391Z    |
2025-06-06T03:33:34.8272605Z    = help: Remove unnecessary assignment
2025-06-06T03:33:34.8272789Z 
2025-06-06T03:33:34.8273104Z demo_vector_rag.py:57:5: D205 1 blank line required between summary line and description
2025-06-06T03:33:34.8273468Z    |
2025-06-06T03:33:34.8273839Z 56 |   def canonical_doc_hash(user_id: str, content: str, metadata: dict) -> str:
2025-06-06T03:33:34.8274181Z 57 | /     """
2025-06-06T03:33:34.8274465Z 58 | |     Create a canonical hash for deduplication.
2025-06-06T03:33:34.8274936Z 59 | |     Uses user_id, canonicalized content, and metadata['source'] if present.
2025-06-06T03:33:34.8275281Z 60 | |     """
2025-06-06T03:33:34.8275459Z    | |_______^ D205
2025-06-06T03:33:34.8275742Z 61 |       content_canon = canonicalize_text(content)
2025-06-06T03:33:34.8276080Z 62 |       source = metadata.get("source", "")
2025-06-06T03:33:34.8276328Z    |
2025-06-06T03:33:34.8276532Z    = help: Insert single blank line
2025-06-06T03:33:34.8276705Z 
2025-06-06T03:33:34.8276982Z demo_vector_rag.py:71:25: UP006 Use `list` instead of `List` for type annotation
2025-06-06T03:33:34.8277470Z    |
2025-06-06T03:33:34.8277704Z 69 |     user_id: Optional[str] = None,
2025-06-06T03:33:34.8278040Z 70 |     default_metadata: Optional[dict] = None,
2025-06-06T03:33:34.8278385Z 71 |     embedding: Optional[List[float]] = None,
2025-06-06T03:33:34.8278674Z    |                         ^^^^ UP006
2025-06-06T03:33:34.8278912Z 72 | ) -> dict:
2025-06-06T03:33:34.8279091Z 73 |     """
2025-06-06T03:33:34.8279254Z    |
2025-06-06T03:33:34.8279457Z    = help: Replace with `list`
2025-06-06T03:33:34.8279613Z 
2025-06-06T03:33:34.8279921Z demo_vector_rag.py:73:5: D205 1 blank line required between summary line and description
2025-06-06T03:33:34.8280282Z    |
2025-06-06T03:33:34.8280533Z 71 |       embedding: Optional[List[float]] = None,
2025-06-06T03:33:34.8280806Z 72 |   ) -> dict:
2025-06-06T03:33:34.8281004Z 73 | /     """
2025-06-06T03:33:34.8281438Z 74 | |     Ensure the document follows the unified schema.
2025-06-06T03:33:34.8281813Z 75 | |     If fields are missing, fill with defaults.
2025-06-06T03:33:34.8282076Z 76 | |     """
2025-06-06T03:33:34.8282401Z    | |_______^ D205
2025-06-06T03:33:34.8282602Z 77 |       doc_out = {}
2025-06-06T03:33:34.8282824Z 78 |       doc_out["id"] = (
2025-06-06T03:33:34.8283031Z    |
2025-06-06T03:33:34.8283234Z    = help: Insert single blank line
2025-06-06T03:33:34.8283405Z 
2025-06-06T03:33:34.8283681Z demo_vector_rag.py:150:11: UP006 Use `list` instead of `List` for type annotation
2025-06-06T03:33:34.8284024Z     |
2025-06-06T03:33:34.8284402Z 148 | # 6. Canonicalization and deduplication logic before inserting documents
2025-06-06T03:33:34.8284849Z 149 | def embed_and_insert_documents_with_dedup(
2025-06-06T03:33:34.8285141Z 150 |     docs: List[dict],
2025-06-06T03:33:34.8285359Z     |           ^^^^ UP006
2025-06-06T03:33:34.8285642Z 151 |     embedder_model: SentenceTransformer,
2025-06-06T03:33:34.8285987Z 152 |     collection: chromadb.Collection,
2025-06-06T03:33:34.8286238Z     |
2025-06-06T03:33:34.8286438Z     = help: Replace with `list`
2025-06-06T03:33:34.8286595Z 
2025-06-06T03:33:34.8286885Z demo_vector_rag.py:154:6: UP006 Use `tuple` instead of `Tuple` for type annotation
2025-06-06T03:33:34.8287402Z     |
2025-06-06T03:33:34.8287653Z 152 |     collection: chromadb.Collection,
2025-06-06T03:33:34.8288143Z 153 |     user_id_default: str = "global",
2025-06-06T03:33:34.8288714Z 154 | ) -> Tuple[List[dict], List[str]]:
2025-06-06T03:33:34.8289160Z     |      ^^^^^ UP006
2025-06-06T03:33:34.8289477Z 155 |     """
2025-06-06T03:33:34.8290165Z 156 |     Embed documents, canonicalize, deduplicate, and insert into collection.
2025-06-06T03:33:34.8290810Z     |
2025-06-06T03:33:34.8291167Z     = help: Replace with `tuple`
2025-06-06T03:33:34.8291454Z 
2025-06-06T03:33:34.8291960Z demo_vector_rag.py:154:12: UP006 Use `list` instead of `List` for type annotation
2025-06-06T03:33:34.8292585Z     |
2025-06-06T03:33:34.8293003Z 152 |     collection: chromadb.Collection,
2025-06-06T03:33:34.8293571Z 153 |     user_id_default: str = "global",
2025-06-06T03:33:34.8294124Z 154 | ) -> Tuple[List[dict], List[str]]:
2025-06-06T03:33:34.8294565Z     |            ^^^^ UP006
2025-06-06T03:33:34.8294910Z 155 |     """
2025-06-06T03:33:34.8295597Z 156 |     Embed documents, canonicalize, deduplicate, and insert into collection.
2025-06-06T03:33:34.8296227Z     |
2025-06-06T03:33:34.8296554Z     = help: Replace with `list`
2025-06-06T03:33:34.8296826Z 
2025-06-06T03:33:34.8297496Z demo_vector_rag.py:154:24: UP006 Use `list` instead of `List` for type annotation
2025-06-06T03:33:34.8298115Z     |
2025-06-06T03:33:34.8298521Z 152 |     collection: chromadb.Collection,
2025-06-06T03:33:34.8299082Z 153 |     user_id_default: str = "global",
2025-06-06T03:33:34.8299628Z 154 | ) -> Tuple[List[dict], List[str]]:
2025-06-06T03:33:34.8300106Z     |                        ^^^^ UP006
2025-06-06T03:33:34.8300508Z 155 |     """
2025-06-06T03:33:34.8301196Z 156 |     Embed documents, canonicalize, deduplicate, and insert into collection.
2025-06-06T03:33:34.8301819Z     |
2025-06-06T03:33:34.8302149Z     = help: Replace with `list`
2025-06-06T03:33:34.8302418Z 
2025-06-06T03:33:34.8302990Z demo_vector_rag.py:155:5: D205 1 blank line required between summary line and description
2025-06-06T03:33:34.8303651Z     |
2025-06-06T03:33:34.8304057Z 153 |       user_id_default: str = "global",
2025-06-06T03:33:34.8304613Z 154 |   ) -> Tuple[List[dict], List[str]]:
2025-06-06T03:33:34.8305035Z 155 | /     """
2025-06-06T03:33:34.8305736Z 156 | |     Embed documents, canonicalize, deduplicate, and insert into collection.
2025-06-06T03:33:34.8306601Z 157 | |     Returns: (inserted_docs, skipped_duplicate_ids)
2025-06-06T03:33:34.8307093Z 158 | |     """
2025-06-06T03:33:34.8307537Z     | |_______^ D205
2025-06-06T03:33:34.8307945Z 159 |       stored_hashes = set()
2025-06-06T03:33:34.8308644Z 160 |       # Retrieve all existing documents' canonical hashes (if any)
2025-06-06T03:33:34.8309401Z     |
2025-06-06T03:33:34.8309748Z     = help: Insert single blank line
2025-06-06T03:33:34.8310047Z 
2025-06-06T03:33:34.8310606Z demo_vector_rag.py:155:5: D400 First line should end with a period
2025-06-06T03:33:34.8311162Z     |
2025-06-06T03:33:34.8311571Z 153 |       user_id_default: str = "global",
2025-06-06T03:33:34.8312121Z 154 |   ) -> Tuple[List[dict], List[str]]:
2025-06-06T03:33:34.8312553Z 155 | /     """
2025-06-06T03:33:34.8313236Z 156 | |     Embed documents, canonicalize, deduplicate, and insert into collection.
2025-06-06T03:33:34.8314036Z 157 | |     Returns: (inserted_docs, skipped_duplicate_ids)
2025-06-06T03:33:34.8314505Z 158 | |     """
2025-06-06T03:33:34.8314805Z     | |_______^ D400
2025-06-06T03:33:34.8315212Z 159 |       stored_hashes = set()
2025-06-06T03:33:34.8315909Z 160 |       # Retrieve all existing documents' canonical hashes (if any)
2025-06-06T03:33:34.8316456Z     |
2025-06-06T03:33:34.8316754Z     = help: Add period
2025-06-06T03:33:34.8316982Z 
2025-06-06T03:33:34.8317864Z demo_vector_rag.py:155:5: D415 First line should end with a period, question mark, or exclamation point
2025-06-06T03:33:34.8318622Z     |
2025-06-06T03:33:34.8319049Z 153 |       user_id_default: str = "global",
2025-06-06T03:33:34.8319618Z 154 |   ) -> Tuple[List[dict], List[str]]:
2025-06-06T03:33:34.8320091Z 155 | /     """
2025-06-06T03:33:34.8320787Z 156 | |     Embed documents, canonicalize, deduplicate, and insert into collection.
2025-06-06T03:33:34.8321666Z 157 | |     Returns: (inserted_docs, skipped_duplicate_ids)
2025-06-06T03:33:34.8322175Z 158 | |     """
2025-06-06T03:33:34.8322479Z     | |_______^ D415
2025-06-06T03:33:34.8322883Z 159 |       stored_hashes = set()
2025-06-06T03:33:34.8323562Z 160 |       # Retrieve all existing documents' canonical hashes (if any)
2025-06-06T03:33:34.8324101Z     |
2025-06-06T03:33:34.8324454Z     = help: Add closing punctuation
2025-06-06T03:33:34.8324740Z 
2025-06-06T03:33:34.8325285Z demo_vector_rag.py:169:13: F841 Local variable `source` is assigned to but never used
2025-06-06T03:33:34.8325907Z     |
2025-06-06T03:33:34.8326332Z 167 |             meta = existing["metadatas"][i]
2025-06-06T03:33:34.8326980Z 168 |             uid = meta.get("user_id", user_id_default)
2025-06-06T03:33:34.8327806Z 169 |             source = meta.get("source", "demo")
2025-06-06T03:33:34.8328267Z     |             ^^^^^^ F841
2025-06-06T03:33:34.8328696Z 170 |             content = doc
2025-06-06T03:33:34.8329298Z 171 |             doc_hash = canonical_doc_hash(uid, content, meta)
2025-06-06T03:33:34.8329786Z     |
2025-06-06T03:33:34.8330209Z     = help: Remove assignment to unused variable `source`
2025-06-06T03:33:34.8330594Z 
2025-06-06T03:33:34.8331193Z demo_vector_rag.py:173:5: S110 `try`-`except`-`pass` detected, consider logging the exception
2025-06-06T03:33:34.8331858Z     |
2025-06-06T03:33:34.8332368Z 171 |               doc_hash = canonical_doc_hash(uid, content, meta)
2025-06-06T03:33:34.8332999Z 172 |               stored_hashes.add(doc_hash)
2025-06-06T03:33:34.8333467Z 173 | /     except Exception:
2025-06-06T03:33:34.8333971Z 174 | |         pass  # Collection may be empty
2025-06-06T03:33:34.8334422Z     | |____________^ S110
2025-06-06T03:33:34.8334754Z 175 |
2025-06-06T03:33:34.8335142Z 176 |       inserted_docs = []
2025-06-06T03:33:34.8335514Z     |
2025-06-06T03:33:34.8335672Z 
2025-06-06T03:33:34.8336150Z demo_vector_rag.py:173:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T03:33:34.8336761Z     |
2025-06-06T03:33:34.8337394Z 171 |             doc_hash = canonical_doc_hash(uid, content, meta)
2025-06-06T03:33:34.8337783Z 172 |             stored_hashes.add(doc_hash)
2025-06-06T03:33:34.8338063Z 173 |     except Exception:
2025-06-06T03:33:34.8338307Z     |            ^^^^^^^^^ BLE001
2025-06-06T03:33:34.8338604Z 174 |         pass  # Collection may be empty
2025-06-06T03:33:34.8338847Z     |
2025-06-06T03:33:34.8338938Z 
2025-06-06T03:33:34.8339273Z demo_vector_rag.py:180:9: PLW2901 `for` loop variable `doc` overwritten by assignment target
2025-06-06T03:33:34.8339841Z     |
2025-06-06T03:33:34.8340026Z 179 |     for doc in docs:
2025-06-06T03:33:34.8340549Z 180 |         doc = prepare_document(doc, user_id=user_id_default)
2025-06-06T03:33:34.8341096Z     |         ^^^ PLW2901
2025-06-06T03:33:34.8341718Z 181 |         doc_hash = canonical_doc_hash(doc["user_id"], doc["content"], doc["metadata"])
2025-06-06T03:33:34.8342165Z 182 |         if doc_hash in stored_hashes:
2025-06-06T03:33:34.8342415Z     |
2025-06-06T03:33:34.8342510Z 
2025-06-06T03:33:34.8342752Z demo_vector_rag.py:184:17: G004 Logging statement uses f-string
2025-06-06T03:33:34.8343081Z     |
2025-06-06T03:33:34.8343313Z 182 |         if doc_hash in stored_hashes:
2025-06-06T03:33:34.8343612Z 183 |             logger.info(
2025-06-06T03:33:34.8344111Z 184 |                 f"Deduplication: Skipping duplicate doc id={doc['id']} (hash={doc_hash[:8]}...)"
2025-06-06T03:33:34.8344608Z     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T03:33:34.8344902Z 185 |             )
2025-06-06T03:33:34.8345181Z 186 |             skipped_ids.append(doc["id"])
2025-06-06T03:33:34.8345442Z     |
2025-06-06T03:33:34.8345539Z 
2025-06-06T03:33:34.8345772Z demo_vector_rag.py:208:21: G004 Logging statement uses f-string
2025-06-06T03:33:34.8346078Z     |
2025-06-06T03:33:34.8346251Z 206 |             ],
2025-06-06T03:33:34.8346443Z 207 |         )
2025-06-06T03:33:34.8346819Z 208 |         logger.info(f"Inserted doc id={doc['id']} (hash={doc_hash[:8]}...)")
2025-06-06T03:33:34.8347381Z     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T03:33:34.8347716Z 209 |         inserted_docs.append(doc)
2025-06-06T03:33:34.8348026Z 210 |         stored_hashes.add(doc_hash)
2025-06-06T03:33:34.8348263Z     |
2025-06-06T03:33:34.8348359Z 
2025-06-06T03:33:34.8348583Z demo_vector_rag.py:218:13: G004 Logging statement uses f-string
2025-06-06T03:33:34.8348886Z     |
2025-06-06T03:33:34.8349132Z 216 |     demo_documents, embedder, collection
2025-06-06T03:33:34.8349385Z 217 | )
2025-06-06T03:33:34.8349821Z 218 | logger.info(f"\nInserted {len(inserted)} documents, skipped {len(skipped)} duplicates.")
2025-06-06T03:33:34.8350311Z     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T03:33:34.8350576Z     |
2025-06-06T03:33:34.8350665Z 
2025-06-06T03:33:34.8350984Z demo_vector_rag.py:229:5: D205 1 blank line required between summary line and description
2025-06-06T03:33:34.8351352Z     |
2025-06-06T03:33:34.8351559Z 227 |       n_results: int = 3,
2025-06-06T03:33:34.8351787Z 228 |   ) -> dict:
2025-06-06T03:33:34.8351969Z 229 | /     """
2025-06-06T03:33:34.8352317Z 230 | |     Query the vector DB with optional user_id and metadata filter.
2025-06-06T03:33:34.8352708Z 231 | |     Returns the matching results.
2025-06-06T03:33:34.8352954Z 232 | |     """
2025-06-06T03:33:34.8353137Z     | |_______^ D205
2025-06-06T03:33:34.8353543Z 233 |       query_embedding = embedder.encode([canonicalize_text(query)])[0].tolist()
2025-06-06T03:33:34.8353916Z 234 |       where = {}
2025-06-06T03:33:34.8354104Z     |
2025-06-06T03:33:34.8354315Z     = help: Insert single blank line
2025-06-06T03:33:34.8354538Z 
2025-06-06T03:33:34.8355165Z demo_vector_rag.py:245:12: RET504 Unnecessary assignment to `results` before `return` statement
2025-06-06T03:33:34.8355746Z     |
2025-06-06T03:33:34.8356056Z 243 |         include=["documents", "metadatas", "distances", "ids"],
2025-06-06T03:33:34.8356356Z 244 |     )
2025-06-06T03:33:34.8356546Z 245 |     return results
2025-06-06T03:33:34.8356774Z     |            ^^^^^^^ RET504
2025-06-06T03:33:34.8356978Z     |
2025-06-06T03:33:34.8357194Z     = help: Remove unnecessary assignment
2025-06-06T03:33:34.8357486Z 
2025-06-06T03:33:34.8357715Z demo_vector_rag.py:256:13: G004 Logging statement uses f-string
2025-06-06T03:33:34.8358022Z     |
2025-06-06T03:33:34.8358332Z 254 | )
2025-06-06T03:33:34.8358491Z 255 |
2025-06-06T03:33:34.8358840Z 256 | logger.info(f"\nQuery: {query}\nFilter: {metadata_filter}\nResults:")
2025-06-06T03:33:34.8359355Z     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T03:33:34.8359675Z 257 | for doc, meta, dist in zip(
2025-06-06T03:33:34.8360106Z 258 |     results["documents"][0], results["metadatas"][0], results["distances"][0]
2025-06-06T03:33:34.8360689Z     |
2025-06-06T03:33:34.8360867Z 
2025-06-06T03:33:34.8361265Z demo_vector_rag.py:267:17: G004 Logging statement uses f-string
2025-06-06T03:33:34.8361808Z     |
2025-06-06T03:33:34.8362278Z 265 | for i, doc in enumerate(all_facts["documents"]):
2025-06-06T03:33:34.8362770Z 266 |     meta = all_facts["metadatas"][i]
2025-06-06T03:33:34.8363153Z 267 |     logger.info(f"Fact {i + 1}: {doc} [meta: {meta}]")
2025-06-06T03:33:34.8363501Z     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T03:33:34.8363750Z 268 |
2025-06-06T03:33:34.8364038Z 269 | # 8. Test block: Verify deduplication and filtering
2025-06-06T03:33:34.8364322Z     |
2025-06-06T03:33:34.8364417Z 
2025-06-06T03:33:34.8364859Z demo_vector_rag.py:272:5: ANN201 Missing return type annotation for public function `test_deduplication_and_metadata`
2025-06-06T03:33:34.8365328Z     |
2025-06-06T03:33:34.8365571Z 272 | def test_deduplication_and_metadata():
2025-06-06T03:33:34.8365876Z     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ANN201
2025-06-06T03:33:34.8366133Z 273 |     """
2025-06-06T03:33:34.8366437Z 274 |     Test deduplication (should not insert duplicates)
2025-06-06T03:33:34.8366724Z     |
2025-06-06T03:33:34.8366951Z     = help: Add return type annotation: `None`
2025-06-06T03:33:34.8367138Z 
2025-06-06T03:33:34.8367599Z demo_vector_rag.py:273:5: D205 1 blank line required between summary line and description
2025-06-06T03:33:34.8367980Z     |
2025-06-06T03:33:34.8368228Z 272 |   def test_deduplication_and_metadata():
2025-06-06T03:33:34.8368489Z 273 | /     """
2025-06-06T03:33:34.8368802Z 274 | |     Test deduplication (should not insert duplicates)
2025-06-06T03:33:34.8384786Z 275 | |     and metadata filtering (should return only filtered docs).
2025-06-06T03:33:34.8385138Z 276 | |     """
2025-06-06T03:33:34.8385343Z     | |_______^ D205
2025-06-06T03:33:34.8385628Z 277 |       # Try to re-insert a duplicate doc
2025-06-06T03:33:34.8385918Z 278 |       duplicate = {
2025-06-06T03:33:34.8386128Z     |
2025-06-06T03:33:34.8386341Z     = help: Insert single blank line
2025-06-06T03:33:34.8386512Z 
2025-06-06T03:33:34.8386735Z demo_vector_rag.py:319:5: ERA001 Found commented-out code
2025-06-06T03:33:34.8387034Z     |
2025-06-06T03:33:34.8387504Z 318 |     # Cleanup for demo (optional):
2025-06-06T03:33:34.8387848Z 319 |     # client.delete_collection("demo_rag")
2025-06-06T03:33:34.8388177Z     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ERA001
2025-06-06T03:33:34.8388417Z     |
2025-06-06T03:33:34.8388624Z     = help: Remove commented-out code
2025-06-06T03:33:34.8388804Z 
2025-06-06T03:33:34.8389104Z dev_tools/health_check.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8389466Z   |
2025-06-06T03:33:34.8389658Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8389898Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8390117Z 2 | """
2025-06-06T03:33:34.8390296Z 3 | health_check.py.
2025-06-06T03:33:34.8390481Z   |
2025-06-06T03:33:34.8390577Z 
2025-06-06T03:33:34.8391004Z examples/mem0_enhanced_agents_example.py:92:5: F841 Local variable `research_task` is assigned to but never used
2025-06-06T03:33:34.8391458Z    |
2025-06-06T03:33:34.8391632Z 91 |     # Add tasks
2025-06-06T03:33:34.8391879Z 92 |     research_task = team.add_task(
2025-06-06T03:33:34.8392131Z    |     ^^^^^^^^^^^^^ F841
2025-06-06T03:33:34.8392546Z 93 |         description="Research the market for AI-powered productivity tools",
2025-06-06T03:33:34.8392936Z 94 |         agent=researcher,
2025-06-06T03:33:34.8393147Z    |
2025-06-06T03:33:34.8393418Z    = help: Remove assignment to unused variable `research_task`
2025-06-06T03:33:34.8393835Z 
2025-06-06T03:33:34.8394270Z examples/mem0_enhanced_agents_example.py:97:5: F841 Local variable `development_task` is assigned to but never used
2025-06-06T03:33:34.8394828Z    |
2025-06-06T03:33:34.8394991Z 95 |     )
2025-06-06T03:33:34.8395151Z 96 |
2025-06-06T03:33:34.8395376Z 97 |     development_task = team.add_task(
2025-06-06T03:33:34.8395647Z    |     ^^^^^^^^^^^^^^^^ F841
2025-06-06T03:33:34.8396070Z 98 |         description="Design an AI tool based on the market research", agent=developer
2025-06-06T03:33:34.8396420Z 99 |     )
2025-06-06T03:33:34.8396581Z    |
2025-06-06T03:33:34.8396855Z    = help: Remove assignment to unused variable `development_task`
2025-06-06T03:33:34.8397100Z 
2025-06-06T03:33:34.8397669Z examples/mem0_enhanced_agents_example.py:101:5: F841 Local variable `monetization_task` is assigned to but never used
2025-06-06T03:33:34.8398132Z     |
2025-06-06T03:33:34.8398288Z  99 |     )
2025-06-06T03:33:34.8398457Z 100 |
2025-06-06T03:33:34.8398695Z 101 |     monetization_task = team.add_task(
2025-06-06T03:33:34.8398972Z     |     ^^^^^^^^^^^^^^^^^ F841
2025-06-06T03:33:34.8399437Z 102 |         description="Create a monetization strategy for the AI tool", agent=monetization
2025-06-06T03:33:34.8399814Z 103 |     )
2025-06-06T03:33:34.8399975Z     |
2025-06-06T03:33:34.8400262Z     = help: Remove assignment to unused variable `monetization_task`
2025-06-06T03:33:34.8400503Z 
2025-06-06T03:33:34.8400837Z examples/mem0_enhanced_agents_example.py:108:5: C901 `run_example` is too complex (12 > 10)
2025-06-06T03:33:34.8401226Z     |
2025-06-06T03:33:34.8401440Z 108 | def run_example() -> None:
2025-06-06T03:33:34.8401670Z     |     ^^^^^^^^^^^ C901
2025-06-06T03:33:34.8402019Z 109 |     """Run the example workflow with memory-enhanced agents."""
2025-06-06T03:33:34.8402365Z 110 |     # Check dependencies
2025-06-06T03:33:34.8402574Z     |
2025-06-06T03:33:34.8402669Z 
2025-06-06T03:33:34.8402982Z examples/mem0_enhanced_agents_example.py:126:21: G004 Logging statement uses f-string
2025-06-06T03:33:34.8403358Z     |
2025-06-06T03:33:34.8403565Z 124 |         result = team.run()
2025-06-06T03:33:34.8403917Z 125 |         logger.info("Workflow completed successfully")
2025-06-06T03:33:34.8404287Z 126 |         logger.info(f"Result: {result}")
2025-06-06T03:33:34.8404584Z     |                     ^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T03:33:34.8404870Z 127 |     except Exception as e:
2025-06-06T03:33:34.8405202Z 128 |         logger.error(f"Error running workflow: {e}")
2025-06-06T03:33:34.8405463Z     |
2025-06-06T03:33:34.8405556Z 
2025-06-06T03:33:34.8405913Z examples/mem0_enhanced_agents_example.py:127:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T03:33:34.8406319Z     |
2025-06-06T03:33:34.8406604Z 125 |         logger.info("Workflow completed successfully")
2025-06-06T03:33:34.8406967Z 126 |         logger.info(f"Result: {result}")
2025-06-06T03:33:34.8407366Z 127 |     except Exception as e:
2025-06-06T03:33:34.8407619Z     |            ^^^^^^^^^ BLE001
2025-06-06T03:33:34.8407945Z 128 |         logger.error(f"Error running workflow: {e}")
2025-06-06T03:33:34.8408207Z     |
2025-06-06T03:33:34.8408295Z 
2025-06-06T03:33:34.8408693Z examples/mem0_enhanced_agents_example.py:128:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T03:33:34.8409121Z     |
2025-06-06T03:33:34.8409356Z 126 |         logger.info(f"Result: {result}")
2025-06-06T03:33:34.8409646Z 127 |     except Exception as e:
2025-06-06T03:33:34.8409971Z 128 |         logger.error(f"Error running workflow: {e}")
2025-06-06T03:33:34.8410298Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T03:33:34.8410543Z 129 |
2025-06-06T03:33:34.8410813Z 130 |     # Demonstrate memory retrieval (old, direct use)
2025-06-06T03:33:34.8411081Z     |
2025-06-06T03:33:34.8411279Z     = help: Replace with `exception`
2025-06-06T03:33:34.8411444Z 
2025-06-06T03:33:34.8411755Z examples/mem0_enhanced_agents_example.py:128:22: G004 Logging statement uses f-string
2025-06-06T03:33:34.8412248Z     |
2025-06-06T03:33:34.8412481Z 126 |         logger.info(f"Result: {result}")
2025-06-06T03:33:34.8412776Z 127 |     except Exception as e:
2025-06-06T03:33:34.8413200Z 128 |         logger.error(f"Error running workflow: {e}")
2025-06-06T03:33:34.8413540Z     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T03:33:34.8413788Z 129 |
2025-06-06T03:33:34.8414056Z 130 |     # Demonstrate memory retrieval (old, direct use)
2025-06-06T03:33:34.8414323Z     |
2025-06-06T03:33:34.8414417Z 
2025-06-06T03:33:34.8414724Z examples/mem0_enhanced_agents_example.py:140:25: G004 Logging statement uses f-string
2025-06-06T03:33:34.8415088Z     |
2025-06-06T03:33:34.8415255Z 138 |             )
2025-06-06T03:33:34.8415427Z 139 |
2025-06-06T03:33:34.8415752Z 140 |             logger.info(f"Retrieved {len(memories)} memories (direct):")
2025-06-06T03:33:34.8416145Z     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T03:33:34.8416501Z 141 |             for i, memory in enumerate(memories):
2025-06-06T03:33:34.8416847Z 142 |                 if isinstance(memory, dict):
2025-06-06T03:33:34.8417093Z     |
2025-06-06T03:33:34.8417191Z 
2025-06-06T03:33:34.8417604Z examples/mem0_enhanced_agents_example.py:144:25: G004 Logging statement uses f-string
2025-06-06T03:33:34.8417977Z     |
2025-06-06T03:33:34.8418214Z 142 |                 if isinstance(memory, dict):
2025-06-06T03:33:34.8418514Z 143 |                     logger.info(
2025-06-06T03:33:34.8418907Z 144 |                         f"Memory {i + 1}: {memory.get('text', 'No text')[:100]}..."
2025-06-06T03:33:34.8419290Z     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T03:33:34.8419569Z 145 |                     )
2025-06-06T03:33:34.8419790Z 146 |                 else:
2025-06-06T03:33:34.8419979Z     |
2025-06-06T03:33:34.8420068Z 
2025-06-06T03:33:34.8420379Z examples/mem0_enhanced_agents_example.py:147:33: G004 Logging statement uses f-string
2025-06-06T03:33:34.8420749Z     |
2025-06-06T03:33:34.8420918Z 145 |                     )
2025-06-06T03:33:34.8421127Z 146 |                 else:
2025-06-06T03:33:34.8421476Z 147 |                     logger.info(f"Memory {i + 1}: {str(memory)[:100]}...")
2025-06-06T03:33:34.8421845Z     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T03:33:34.8422156Z 148 |         except Exception as e:
2025-06-06T03:33:34.8422519Z 149 |             logger.error(f"Error retrieving memories: {e}")
2025-06-06T03:33:34.8422801Z     |
2025-06-06T03:33:34.8422889Z 
2025-06-06T03:33:34.8423241Z examples/mem0_enhanced_agents_example.py:148:16: BLE001 Do not catch blind exception: `Exception`
2025-06-06T03:33:34.8423643Z     |
2025-06-06T03:33:34.8423814Z 146 |                 else:
2025-06-06T03:33:34.8424158Z 147 |                     logger.info(f"Memory {i + 1}: {str(memory)[:100]}...")
2025-06-06T03:33:34.8424503Z 148 |         except Exception as e:
2025-06-06T03:33:34.8424758Z     |                ^^^^^^^^^ BLE001
2025-06-06T03:33:34.8425106Z 149 |             logger.error(f"Error retrieving memories: {e}")
2025-06-06T03:33:34.8425383Z     |
2025-06-06T03:33:34.8425480Z 
2025-06-06T03:33:34.8425874Z examples/mem0_enhanced_agents_example.py:149:13: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T03:33:34.8426305Z     |
2025-06-06T03:33:34.8426625Z 147 |                     logger.info(f"Memory {i + 1}: {str(memory)[:100]}...")
2025-06-06T03:33:34.8426964Z 148 |         except Exception as e:
2025-06-06T03:33:34.8427436Z 149 |             logger.error(f"Error retrieving memories: {e}")
2025-06-06T03:33:34.8427786Z     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T03:33:34.8428036Z 150 |
2025-06-06T03:33:34.8428384Z 151 |     # --- New: Demonstrate retrieval using KnowledgeIntegrationLayer ---
2025-06-06T03:33:34.8428707Z     |
2025-06-06T03:33:34.8428905Z     = help: Replace with `exception`
2025-06-06T03:33:34.8429195Z 
2025-06-06T03:33:34.8429516Z examples/mem0_enhanced_agents_example.py:149:26: G004 Logging statement uses f-string
2025-06-06T03:33:34.8429891Z     |
2025-06-06T03:33:34.8430302Z 147 |                     logger.info(f"Memory {i + 1}: {str(memory)[:100]}...")
2025-06-06T03:33:34.8430651Z 148 |         except Exception as e:
2025-06-06T03:33:34.8430999Z 149 |             logger.error(f"Error retrieving memories: {e}")
2025-06-06T03:33:34.8431340Z     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T03:33:34.8431581Z 150 |
2025-06-06T03:33:34.8431922Z 151 |     # --- New: Demonstrate retrieval using KnowledgeIntegrationLayer ---
2025-06-06T03:33:34.8432244Z     |
2025-06-06T03:33:34.8432336Z 
2025-06-06T03:33:34.8432764Z examples/mem0_enhanced_agents_example.py:166:17: ANN202 Missing return type annotation for private function `search`
2025-06-06T03:33:34.8433227Z     |
2025-06-06T03:33:34.8433601Z 164 |         # Stub/mock clients for demonstration (replace with real clients as needed)
2025-06-06T03:33:34.8434011Z 165 |         class DummyMem0Client:
2025-06-06T03:33:34.8434348Z 166 |             def search(self, query, user_id, **kwargs):
2025-06-06T03:33:34.8434652Z     |                 ^^^^^^ ANN202
2025-06-06T03:33:34.8435097Z 167 |                 return [{"source": "mem0", "content": f"dummy mem0 for '{query}'"}]
2025-06-06T03:33:34.8435411Z     |
2025-06-06T03:33:34.8435614Z     = help: Add return type annotation
2025-06-06T03:33:34.8435784Z 
2025-06-06T03:33:34.8436189Z examples/mem0_enhanced_agents_example.py:166:30: ANN001 Missing type annotation for function argument `query`
2025-06-06T03:33:34.8436627Z     |
2025-06-06T03:33:34.8436995Z 164 |         # Stub/mock clients for demonstration (replace with real clients as needed)
2025-06-06T03:33:34.8437512Z 165 |         class DummyMem0Client:
2025-06-06T03:33:34.8437847Z 166 |             def search(self, query, user_id, **kwargs):
2025-06-06T03:33:34.8438158Z     |                              ^^^^^ ANN001
2025-06-06T03:33:34.8438577Z 167 |                 return [{"source": "mem0", "content": f"dummy mem0 for '{query}'"}]
2025-06-06T03:33:34.8438892Z     |
2025-06-06T03:33:34.8438980Z 
2025-06-06T03:33:34.8439393Z examples/mem0_enhanced_agents_example.py:166:37: ANN001 Missing type annotation for function argument `user_id`
2025-06-06T03:33:34.8439839Z     |
2025-06-06T03:33:34.8440203Z 164 |         # Stub/mock clients for demonstration (replace with real clients as needed)
2025-06-06T03:33:34.8440603Z 165 |         class DummyMem0Client:
2025-06-06T03:33:34.8440934Z 166 |             def search(self, query, user_id, **kwargs):
2025-06-06T03:33:34.8441253Z     |                                     ^^^^^^^ ANN001
2025-06-06T03:33:34.8441665Z 167 |                 return [{"source": "mem0", "content": f"dummy mem0 for '{query}'"}]
2025-06-06T03:33:34.8441977Z     |
2025-06-06T03:33:34.8442070Z 
2025-06-06T03:33:34.8442385Z examples/mem0_enhanced_agents_example.py:166:37: ARG002 Unused method argument: `user_id`
2025-06-06T03:33:34.8442767Z     |
2025-06-06T03:33:34.8443130Z 164 |         # Stub/mock clients for demonstration (replace with real clients as needed)
2025-06-06T03:33:34.8443529Z 165 |         class DummyMem0Client:
2025-06-06T03:33:34.8443856Z 166 |             def search(self, query, user_id, **kwargs):
2025-06-06T03:33:34.8444171Z     |                                     ^^^^^^^ ARG002
2025-06-06T03:33:34.8444597Z 167 |                 return [{"source": "mem0", "content": f"dummy mem0 for '{query}'"}]
2025-06-06T03:33:34.8444916Z     |
2025-06-06T03:33:34.8445008Z 
2025-06-06T03:33:34.8445364Z examples/mem0_enhanced_agents_example.py:166:46: ANN003 Missing type annotation for `**kwargs`
2025-06-06T03:33:34.8445765Z     |
2025-06-06T03:33:34.8446139Z 164 |         # Stub/mock clients for demonstration (replace with real clients as needed)
2025-06-06T03:33:34.8446539Z 165 |         class DummyMem0Client:
2025-06-06T03:33:34.8446867Z 166 |             def search(self, query, user_id, **kwargs):
2025-06-06T03:33:34.8447433Z     |                                              ^^^^^^^^ ANN003
2025-06-06T03:33:34.8447973Z 167 |                 return [{"source": "mem0", "content": f"dummy mem0 for '{query}'"}]
2025-06-06T03:33:34.8448310Z     |
2025-06-06T03:33:34.8448404Z 
2025-06-06T03:33:34.8448730Z examples/mem0_enhanced_agents_example.py:166:48: ARG002 Unused method argument: `kwargs`
2025-06-06T03:33:34.8449115Z     |
2025-06-06T03:33:34.8449491Z 164 |         # Stub/mock clients for demonstration (replace with real clients as needed)
2025-06-06T03:33:34.8449898Z 165 |         class DummyMem0Client:
2025-06-06T03:33:34.8450228Z 166 |             def search(self, query, user_id, **kwargs):
2025-06-06T03:33:34.8450550Z     |                                                ^^^^^^ ARG002
2025-06-06T03:33:34.8450974Z 167 |                 return [{"source": "mem0", "content": f"dummy mem0 for '{query}'"}]
2025-06-06T03:33:34.8451281Z     |
2025-06-06T03:33:34.8451371Z 
2025-06-06T03:33:34.8451800Z examples/mem0_enhanced_agents_example.py:169:17: ANN202 Missing return type annotation for private function `add`
2025-06-06T03:33:34.8452252Z     |
2025-06-06T03:33:34.8452587Z 167 |                 return [{"source": "mem0", "content": f"dummy mem0 for '{query}'"}]
2025-06-06T03:33:34.8452899Z 168 |
2025-06-06T03:33:34.8453162Z 169 |             def add(self, content, user_id, **kwargs):
2025-06-06T03:33:34.8453457Z     |                 ^^^ ANN202
2025-06-06T03:33:34.8453788Z 170 |                 return {"status": "added", "content": content}
2025-06-06T03:33:34.8454059Z     |
2025-06-06T03:33:34.8454264Z     = help: Add return type annotation
2025-06-06T03:33:34.8454432Z 
2025-06-06T03:33:34.8454841Z examples/mem0_enhanced_agents_example.py:169:27: ANN001 Missing type annotation for function argument `content`
2025-06-06T03:33:34.8455290Z     |
2025-06-06T03:33:34.8455625Z 167 |                 return [{"source": "mem0", "content": f"dummy mem0 for '{query}'"}]
2025-06-06T03:33:34.8455939Z 168 |
2025-06-06T03:33:34.8456197Z 169 |             def add(self, content, user_id, **kwargs):
2025-06-06T03:33:34.8456507Z     |                           ^^^^^^^ ANN001
2025-06-06T03:33:34.8456864Z 170 |                 return {"status": "added", "content": content}
2025-06-06T03:33:34.8457137Z     |
2025-06-06T03:33:34.8457363Z 
2025-06-06T03:33:34.8457766Z examples/mem0_enhanced_agents_example.py:169:36: ANN001 Missing type annotation for function argument `user_id`
2025-06-06T03:33:34.8458210Z     |
2025-06-06T03:33:34.8458817Z 167 |                 return [{"source": "mem0", "content": f"dummy mem0 for '{query}'"}]
2025-06-06T03:33:34.8459363Z 168 |
2025-06-06T03:33:34.8459847Z 169 |             def add(self, content, user_id, **kwargs):
2025-06-06T03:33:34.8460412Z     |                                    ^^^^^^^ ANN001
2025-06-06T03:33:34.8461058Z 170 |                 return {"status": "added", "content": content}
2025-06-06T03:33:34.8461533Z     |
2025-06-06T03:33:34.8461689Z 
2025-06-06T03:33:34.8462239Z examples/mem0_enhanced_agents_example.py:169:36: ARG002 Unused method argument: `user_id`
2025-06-06T03:33:34.8462933Z     |
2025-06-06T03:33:34.8463537Z 167 |                 return [{"source": "mem0", "content": f"dummy mem0 for '{query}'"}]
2025-06-06T03:33:34.8464154Z 168 |
2025-06-06T03:33:34.8464620Z 169 |             def add(self, content, user_id, **kwargs):
2025-06-06T03:33:34.8465193Z     |                                    ^^^^^^^ ARG002
2025-06-06T03:33:34.8465853Z 170 |                 return {"status": "added", "content": content}
2025-06-06T03:33:34.8466342Z     |
2025-06-06T03:33:34.8466445Z 
2025-06-06T03:33:34.8466811Z examples/mem0_enhanced_agents_example.py:169:45: ANN003 Missing type annotation for `**kwargs`
2025-06-06T03:33:34.8467401Z     |
2025-06-06T03:33:34.8468042Z 167 |                 return [{"source": "mem0", "content": f"dummy mem0 for '{query}'"}]
2025-06-06T03:33:34.8468561Z 168 |
2025-06-06T03:33:34.8468993Z 169 |             def add(self, content, user_id, **kwargs):
2025-06-06T03:33:34.8469816Z     |                                             ^^^^^^^^ ANN003
2025-06-06T03:33:34.8470476Z 170 |                 return {"status": "added", "content": content}
2025-06-06T03:33:34.8470970Z     |
2025-06-06T03:33:34.8471375Z 
2025-06-06T03:33:34.8471971Z examples/mem0_enhanced_agents_example.py:169:47: ARG002 Unused method argument: `kwargs`
2025-06-06T03:33:34.8472678Z     |
2025-06-06T03:33:34.8473309Z 167 |                 return [{"source": "mem0", "content": f"dummy mem0 for '{query}'"}]
2025-06-06T03:33:34.8473897Z 168 |
2025-06-06T03:33:34.8474398Z 169 |             def add(self, content, user_id, **kwargs):
2025-06-06T03:33:34.8475007Z     |                                               ^^^^^^ ARG002
2025-06-06T03:33:34.8475405Z 170 |                 return {"status": "added", "content": content}
2025-06-06T03:33:34.8475712Z     |
2025-06-06T03:33:34.8475809Z 
2025-06-06T03:33:34.8476266Z examples/mem0_enhanced_agents_example.py:173:17: ANN202 Missing return type annotation for private function `query`
2025-06-06T03:33:34.8476745Z     |
2025-06-06T03:33:34.8476975Z 172 |         class DummyVectorClient:
2025-06-06T03:33:34.8477579Z 173 |             def query(self, query, user_id, **kwargs):
2025-06-06T03:33:34.8477899Z     |                 ^^^^^ ANN202
2025-06-06T03:33:34.8478160Z 174 |                 return [
2025-06-06T03:33:34.8478564Z 175 |                     {"source": "vector_rag", "content": f"dummy vector for '{query}'"}
2025-06-06T03:33:34.8478890Z     |
2025-06-06T03:33:34.8479100Z     = help: Add return type annotation
2025-06-06T03:33:34.8479278Z 
2025-06-06T03:33:34.8479687Z examples/mem0_enhanced_agents_example.py:173:29: ANN001 Missing type annotation for function argument `query`
2025-06-06T03:33:34.8480134Z     |
2025-06-06T03:33:34.8480358Z 172 |         class DummyVectorClient:
2025-06-06T03:33:34.8480706Z 173 |             def query(self, query, user_id, **kwargs):
2025-06-06T03:33:34.8481022Z     |                             ^^^^^ ANN001
2025-06-06T03:33:34.8481310Z 174 |                 return [
2025-06-06T03:33:34.8481704Z 175 |                     {"source": "vector_rag", "content": f"dummy vector for '{query}'"}
2025-06-06T03:33:34.8482023Z     |
2025-06-06T03:33:34.8482119Z 
2025-06-06T03:33:34.8482537Z examples/mem0_enhanced_agents_example.py:173:36: ANN001 Missing type annotation for function argument `user_id`
2025-06-06T03:33:34.8482989Z     |
2025-06-06T03:33:34.8483214Z 172 |         class DummyVectorClient:
2025-06-06T03:33:34.8483558Z 173 |             def query(self, query, user_id, **kwargs):
2025-06-06T03:33:34.8483880Z     |                                    ^^^^^^^ ANN001
2025-06-06T03:33:34.8484162Z 174 |                 return [
2025-06-06T03:33:34.8484555Z 175 |                     {"source": "vector_rag", "content": f"dummy vector for '{query}'"}
2025-06-06T03:33:34.8484880Z     |
2025-06-06T03:33:34.8484971Z 
2025-06-06T03:33:34.8485309Z examples/mem0_enhanced_agents_example.py:173:36: ARG002 Unused method argument: `user_id`
2025-06-06T03:33:34.8485702Z     |
2025-06-06T03:33:34.8485921Z 172 |         class DummyVectorClient:
2025-06-06T03:33:34.8486264Z 173 |             def query(self, query, user_id, **kwargs):
2025-06-06T03:33:34.8486579Z     |                                    ^^^^^^^ ARG002
2025-06-06T03:33:34.8486860Z 174 |                 return [
2025-06-06T03:33:34.8487707Z 175 |                     {"source": "vector_rag", "content": f"dummy vector for '{query}'"}
2025-06-06T03:33:34.8488301Z     |
2025-06-06T03:33:34.8488484Z 
2025-06-06T03:33:34.8489095Z examples/mem0_enhanced_agents_example.py:173:45: ANN003 Missing type annotation for `**kwargs`
2025-06-06T03:33:34.8489531Z     |
2025-06-06T03:33:34.8489765Z 172 |         class DummyVectorClient:
2025-06-06T03:33:34.8490121Z 173 |             def query(self, query, user_id, **kwargs):
2025-06-06T03:33:34.8490542Z     |                                             ^^^^^^^^ ANN003
2025-06-06T03:33:34.8490837Z 174 |                 return [
2025-06-06T03:33:34.8491417Z 175 |                     {"source": "vector_rag", "content": f"dummy vector for '{query}'"}
2025-06-06T03:33:34.8491740Z     |
2025-06-06T03:33:34.8491833Z 
2025-06-06T03:33:34.8492262Z examples/mem0_enhanced_agents_example.py:173:47: ARG002 Unused method argument: `kwargs`
2025-06-06T03:33:34.8492654Z     |
2025-06-06T03:33:34.8492882Z 172 |         class DummyVectorClient:
2025-06-06T03:33:34.8493234Z 173 |             def query(self, query, user_id, **kwargs):
2025-06-06T03:33:34.8493560Z     |                                               ^^^^^^ ARG002
2025-06-06T03:33:34.8493849Z 174 |                 return [
2025-06-06T03:33:34.8494237Z 175 |                     {"source": "vector_rag", "content": f"dummy vector for '{query}'"}
2025-06-06T03:33:34.8494553Z     |
2025-06-06T03:33:34.8494644Z 
2025-06-06T03:33:34.8495070Z examples/mem0_enhanced_agents_example.py:178:17: ANN202 Missing return type annotation for private function `add`
2025-06-06T03:33:34.8495529Z     |
2025-06-06T03:33:34.8495705Z 176 |                 ]
2025-06-06T03:33:34.8495900Z 177 |
2025-06-06T03:33:34.8496161Z 178 |             def add(self, content, user_id, **kwargs):
2025-06-06T03:33:34.8496449Z     |                 ^^^ ANN202
2025-06-06T03:33:34.8496793Z 179 |                 return {"status": "added", "content": content}
2025-06-06T03:33:34.8497068Z     |
2025-06-06T03:33:34.8497470Z     = help: Add return type annotation
2025-06-06T03:33:34.8497655Z 
2025-06-06T03:33:34.8498076Z examples/mem0_enhanced_agents_example.py:178:27: ANN001 Missing type annotation for function argument `content`
2025-06-06T03:33:34.8498535Z     |
2025-06-06T03:33:34.8498715Z 176 |                 ]
2025-06-06T03:33:34.8498912Z 177 |
2025-06-06T03:33:34.8499188Z 178 |             def add(self, content, user_id, **kwargs):
2025-06-06T03:33:34.8499507Z     |                           ^^^^^^^ ANN001
2025-06-06T03:33:34.8499873Z 179 |                 return {"status": "added", "content": content}
2025-06-06T03:33:34.8500156Z     |
2025-06-06T03:33:34.8500288Z 
2025-06-06T03:33:34.8500703Z examples/mem0_enhanced_agents_example.py:178:36: ANN001 Missing type annotation for function argument `user_id`
2025-06-06T03:33:34.8501157Z     |
2025-06-06T03:33:34.8501337Z 176 |                 ]
2025-06-06T03:33:34.8501525Z 177 |
2025-06-06T03:33:34.8501798Z 178 |             def add(self, content, user_id, **kwargs):
2025-06-06T03:33:34.8502114Z     |                                    ^^^^^^^ ANN001
2025-06-06T03:33:34.8502481Z 179 |                 return {"status": "added", "content": content}
2025-06-06T03:33:34.8502753Z     |
2025-06-06T03:33:34.8502844Z 
2025-06-06T03:33:34.8503179Z examples/mem0_enhanced_agents_example.py:178:36: ARG002 Unused method argument: `user_id`
2025-06-06T03:33:34.8503568Z     |
2025-06-06T03:33:34.8503745Z 176 |                 ]
2025-06-06T03:33:34.8503930Z 177 |
2025-06-06T03:33:34.8504186Z 178 |             def add(self, content, user_id, **kwargs):
2025-06-06T03:33:34.8504497Z     |                                    ^^^^^^^ ARG002
2025-06-06T03:33:34.8504859Z 179 |                 return {"status": "added", "content": content}
2025-06-06T03:33:34.8505128Z     |
2025-06-06T03:33:34.8505224Z 
2025-06-06T03:33:34.8505572Z examples/mem0_enhanced_agents_example.py:178:45: ANN003 Missing type annotation for `**kwargs`
2025-06-06T03:33:34.8505975Z     |
2025-06-06T03:33:34.8506148Z 176 |                 ]
2025-06-06T03:33:34.8506336Z 177 |
2025-06-06T03:33:34.8506596Z 178 |             def add(self, content, user_id, **kwargs):
2025-06-06T03:33:34.8506923Z     |                                             ^^^^^^^^ ANN003
2025-06-06T03:33:34.8507546Z 179 |                 return {"status": "added", "content": content}
2025-06-06T03:33:34.8507838Z     |
2025-06-06T03:33:34.8507937Z 
2025-06-06T03:33:34.8508266Z examples/mem0_enhanced_agents_example.py:178:47: ARG002 Unused method argument: `kwargs`
2025-06-06T03:33:34.8508652Z     |
2025-06-06T03:33:34.8508829Z 176 |                 ]
2025-06-06T03:33:34.8509081Z 177 |
2025-06-06T03:33:34.8509779Z 178 |             def add(self, content, user_id, **kwargs):
2025-06-06T03:33:34.8510409Z     |                                               ^^^^^^ ARG002
2025-06-06T03:33:34.8511314Z 179 |                 return {"status": "added", "content": content}
2025-06-06T03:33:34.8511738Z     |
2025-06-06T03:33:34.8511843Z 
2025-06-06T03:33:34.8512189Z examples/mem0_enhanced_agents_example.py:191:21: G004 Logging statement uses f-string
2025-06-06T03:33:34.8512577Z     |
2025-06-06T03:33:34.8512882Z 189 |         query = "What agents were involved in the workflow?"
2025-06-06T03:33:34.8513400Z 190 |         results_fallback = integration_fallback.search(query, user_id=user_id)
2025-06-06T03:33:34.8513969Z 191 |         logger.info(f"Fallback strategy results: {results_fallback}")
2025-06-06T03:33:34.8514364Z     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T03:33:34.8514621Z 192 |
2025-06-06T03:33:34.8514974Z 193 |         # Example: aggregation strategy (combines results from all sources)
2025-06-06T03:33:34.8515306Z     |
2025-06-06T03:33:34.8515402Z 
2025-06-06T03:33:34.8515730Z examples/mem0_enhanced_agents_example.py:199:21: G004 Logging statement uses f-string
2025-06-06T03:33:34.8516111Z     |
2025-06-06T03:33:34.8516272Z 197 |         )
2025-06-06T03:33:34.8516668Z 198 |         results_aggregate = integration_aggregate.search(query, user_id=user_id)
2025-06-06T03:33:34.8517410Z 199 |         logger.info(f"Aggregation strategy results: {results_aggregate}")
2025-06-06T03:33:34.8517853Z     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T03:33:34.8518114Z 200 |
2025-06-06T03:33:34.8518480Z 201 |         # This is the new recommended pattern for agent/team knowledge retrieval:
2025-06-06T03:33:34.8518838Z     |
2025-06-06T03:33:34.8518935Z 
2025-06-06T03:33:34.8519302Z examples/mem0_enhanced_agents_example.py:203:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T03:33:34.8519720Z     |
2025-06-06T03:33:34.8520090Z 201 |         # This is the new recommended pattern for agent/team knowledge retrieval:
2025-06-06T03:33:34.8520733Z 202 |         # Use KnowledgeIntegrationLayer as a unified, extensible interface to search across all sources.
2025-06-06T03:33:34.8521220Z 203 |     except Exception as e:
2025-06-06T03:33:34.8521475Z     |            ^^^^^^^^^ BLE001
2025-06-06T03:33:34.8521868Z 204 |         logger.error(f"Error using KnowledgeIntegrationLayer: {e}")
2025-06-06T03:33:34.8522186Z     |
2025-06-06T03:33:34.8522278Z 
2025-06-06T03:33:34.8522676Z examples/mem0_enhanced_agents_example.py:204:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T03:33:34.8523115Z     |
2025-06-06T03:33:34.8523579Z 202 |         # Use KnowledgeIntegrationLayer as a unified, extensible interface to search across all sources.
2025-06-06T03:33:34.8524055Z 203 |     except Exception as e:
2025-06-06T03:33:34.8524436Z 204 |         logger.error(f"Error using KnowledgeIntegrationLayer: {e}")
2025-06-06T03:33:34.8524832Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T03:33:34.8525087Z     |
2025-06-06T03:33:34.8525292Z     = help: Replace with `exception`
2025-06-06T03:33:34.8525465Z 
2025-06-06T03:33:34.8525781Z examples/mem0_enhanced_agents_example.py:204:22: G004 Logging statement uses f-string
2025-06-06T03:33:34.8526159Z     |
2025-06-06T03:33:34.8526619Z 202 |         # Use KnowledgeIntegrationLayer as a unified, extensible interface to search across all sources.
2025-06-06T03:33:34.8527088Z 203 |     except Exception as e:
2025-06-06T03:33:34.8527666Z 204 |         logger.error(f"Error using KnowledgeIntegrationLayer: {e}")
2025-06-06T03:33:34.8528065Z     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T03:33:34.8528319Z     |
2025-06-06T03:33:34.8528408Z 
2025-06-06T03:33:34.8528871Z examples/mem0_enhanced_agents_example.py:208:5: D401 First line of docstring should be in imperative mood: "Main function."
2025-06-06T03:33:34.8529550Z     |
2025-06-06T03:33:34.8529745Z 207 | def main() -> None:
2025-06-06T03:33:34.8530003Z 208 |     """Main function."""
2025-06-06T03:33:34.8530261Z     |     ^^^^^^^^^^^^^^^^^^^^ D401
2025-06-06T03:33:34.8530955Z 209 |     logger.info("Starting mem0-enhanced agents example")
2025-06-06T03:33:34.8531440Z 210 |     run_example()
2025-06-06T03:33:34.8531649Z     |
2025-06-06T03:33:34.8531744Z 
2025-06-06T03:33:34.8531945Z examples/test_mem0_local.py:21:5: T201 `print` found
2025-06-06T03:33:34.8532223Z    |
2025-06-06T03:33:34.8532438Z 19 |     from mem0 import Memory
2025-06-06T03:33:34.8532688Z 20 | except ImportError:
2025-06-06T03:33:34.8533130Z 21 |     print("mem0ai package not installed. Please install it with: pip install mem0ai")
2025-06-06T03:33:34.8533513Z    |     ^^^^^ T201
2025-06-06T03:33:34.8533716Z 22 |     sys.exit(1)
2025-06-06T03:33:34.8533902Z    |
2025-06-06T03:33:34.8534081Z    = help: Remove `print`
2025-06-06T03:33:34.8534260Z 
2025-06-06T03:33:34.8534698Z examples/test_mem0_local.py:25:22: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `data`
2025-06-06T03:33:34.8535190Z    |
2025-06-06T03:33:34.8535422Z 25 | def print_json(data: Any) -> None:
2025-06-06T03:33:34.8535705Z    |                      ^^^ ANN401
2025-06-06T03:33:34.8536007Z 26 |     """Print data as formatted JSON."""
2025-06-06T03:33:34.8536335Z 27 |     print(json.dumps(data, indent=2))
2025-06-06T03:33:34.8536582Z    |
2025-06-06T03:33:34.8536670Z 
2025-06-06T03:33:34.8536859Z examples/test_mem0_local.py:27:5: T201 `print` found
2025-06-06T03:33:34.8537128Z    |
2025-06-06T03:33:34.8537530Z 25 | def print_json(data: Any) -> None:
2025-06-06T03:33:34.8537838Z 26 |     """Print data as formatted JSON."""
2025-06-06T03:33:34.8538152Z 27 |     print(json.dumps(data, indent=2))
2025-06-06T03:33:34.8538407Z    |     ^^^^^ T201
2025-06-06T03:33:34.8538589Z    |
2025-06-06T03:33:34.8538763Z    = help: Remove `print`
2025-06-06T03:33:34.8538905Z 
2025-06-06T03:33:34.8539099Z examples/test_mem0_local.py:32:5: T201 `print` found
2025-06-06T03:33:34.8539382Z    |
2025-06-06T03:33:34.8539636Z 30 | def test_basic_memory_operations() -> None:
2025-06-06T03:33:34.8540034Z 31 |     """Test basic memory operations: add, search, get_all."""
2025-06-06T03:33:34.8540461Z 32 |     print("\n=== Testing Basic Memory Operations ===\n")
2025-06-06T03:33:34.8540751Z    |     ^^^^^ T201
2025-06-06T03:33:34.8540930Z 33 |
2025-06-06T03:33:34.8541117Z 34 |     # Initialize memory
2025-06-06T03:33:34.8541328Z    |
2025-06-06T03:33:34.8541503Z    = help: Remove `print`
2025-06-06T03:33:34.8541640Z 
2025-06-06T03:33:34.8541828Z examples/test_mem0_local.py:39:5: T201 `print` found
2025-06-06T03:33:34.8542099Z    |
2025-06-06T03:33:34.8542319Z 38 |     # Test adding a simple memory
2025-06-06T03:33:34.8542622Z 39 |     print("Adding a simple memory...")
2025-06-06T03:33:34.8542876Z    |     ^^^^^ T201
2025-06-06T03:33:34.8543087Z 40 |     result = memory.add(
2025-06-06T03:33:34.8543512Z 41 |         "I prefer dark mode in my applications and use VSCode as my primary editor.",
2025-06-06T03:33:34.8543895Z    |
2025-06-06T03:33:34.8544068Z    = help: Remove `print`
2025-06-06T03:33:34.8544208Z 
2025-06-06T03:33:34.8544393Z examples/test_mem0_local.py:45:5: T201 `print` found
2025-06-06T03:33:34.8544663Z    |
2025-06-06T03:33:34.8544908Z 43 |         metadata={"category": "preferences"},
2025-06-06T03:33:34.8545161Z 44 |     )
2025-06-06T03:33:34.8545258Z 45 |     print("Result:")
2025-06-06T03:33:34.8545341Z    |     ^^^^^ T201
2025-06-06T03:33:34.8545439Z 46 |     print_json(result)
2025-06-06T03:33:34.8545512Z    |
2025-06-06T03:33:34.8545598Z    = help: Remove `print`
2025-06-06T03:33:34.8545605Z 
2025-06-06T03:33:34.8545791Z examples/test_mem0_local.py:49:5: T201 `print` found
2025-06-06T03:33:34.8545859Z    |
2025-06-06T03:33:34.8546010Z 48 |     # Test adding conversation messages
2025-06-06T03:33:34.8546177Z 49 |     print("\nAdding conversation messages...")
2025-06-06T03:33:34.8546256Z    |     ^^^^^ T201
2025-06-06T03:33:34.8546344Z 50 |     messages = [
2025-06-06T03:33:34.8546704Z 51 |         {"role": "user", "content": "I'm allergic to shellfish."},
2025-06-06T03:33:34.8546772Z    |
2025-06-06T03:33:34.8546864Z    = help: Remove `print`
2025-06-06T03:33:34.8546969Z 
2025-06-06T03:33:34.8547152Z examples/test_mem0_local.py:58:5: T201 `print` found
2025-06-06T03:33:34.8547376Z    |
2025-06-06T03:33:34.8547456Z 56 |     ]
2025-06-06T03:33:34.8547642Z 57 |     result = memory.add(messages, user_id=user_id)
2025-06-06T03:33:34.8547739Z 58 |     print("Result:")
2025-06-06T03:33:34.8547818Z    |     ^^^^^ T201
2025-06-06T03:33:34.8547915Z 59 |     print_json(result)
2025-06-06T03:33:34.8547989Z    |
2025-06-06T03:33:34.8548072Z    = help: Remove `print`
2025-06-06T03:33:34.8548079Z 
2025-06-06T03:33:34.8548266Z examples/test_mem0_local.py:62:5: T201 `print` found
2025-06-06T03:33:34.8548335Z    |
2025-06-06T03:33:34.8548472Z 61 |     # Test searching for memories
2025-06-06T03:33:34.8548671Z 62 |     print("\nSearching for memories about allergies...")
2025-06-06T03:33:34.8548756Z    |     ^^^^^ T201
2025-06-06T03:33:34.8549050Z 63 |     search_result = memory.search("What food allergies do I have?", user_id=user_id)
2025-06-06T03:33:34.8549181Z 64 |     print("Search result:")
2025-06-06T03:33:34.8549250Z    |
2025-06-06T03:33:34.8549340Z    = help: Remove `print`
2025-06-06T03:33:34.8549348Z 
2025-06-06T03:33:34.8549523Z examples/test_mem0_local.py:64:5: T201 `print` found
2025-06-06T03:33:34.8549596Z    |
2025-06-06T03:33:34.8549787Z 62 |     print("\nSearching for memories about allergies...")
2025-06-06T03:33:34.8550082Z 63 |     search_result = memory.search("What food allergies do I have?", user_id=user_id)
2025-06-06T03:33:34.8550200Z 64 |     print("Search result:")
2025-06-06T03:33:34.8550278Z    |     ^^^^^ T201
2025-06-06T03:33:34.8550403Z 65 |     print_json(search_result)
2025-06-06T03:33:34.8550476Z    |
2025-06-06T03:33:34.8550563Z    = help: Remove `print`
2025-06-06T03:33:34.8550575Z 
2025-06-06T03:33:34.8550750Z examples/test_mem0_local.py:68:5: T201 `print` found
2025-06-06T03:33:34.8550821Z    |
2025-06-06T03:33:34.8550953Z 67 |     # Test getting all memories
2025-06-06T03:33:34.8551095Z 68 |     print("\nGetting all memories...")
2025-06-06T03:33:34.8551178Z    |     ^^^^^ T201
2025-06-06T03:33:34.8551354Z 69 |     all_memories = memory.get_all(user_id=user_id)
2025-06-06T03:33:34.8551471Z 70 |     print("All memories:")
2025-06-06T03:33:34.8551547Z    |
2025-06-06T03:33:34.8551631Z    = help: Remove `print`
2025-06-06T03:33:34.8551638Z 
2025-06-06T03:33:34.8551817Z examples/test_mem0_local.py:70:5: T201 `print` found
2025-06-06T03:33:34.8551885Z    |
2025-06-06T03:33:34.8552028Z 68 |     print("\nGetting all memories...")
2025-06-06T03:33:34.8552195Z 69 |     all_memories = memory.get_all(user_id=user_id)
2025-06-06T03:33:34.8552316Z 70 |     print("All memories:")
2025-06-06T03:33:34.8552397Z    |     ^^^^^ T201
2025-06-06T03:33:34.8552631Z 71 |     print_json(all_memories)
2025-06-06T03:33:34.8552752Z    |
2025-06-06T03:33:34.8552855Z    = help: Remove `print`
2025-06-06T03:33:34.8552863Z 
2025-06-06T03:33:34.8553370Z examples/test_mem0_local.py:77:36: FA100 Add `from __future__ import annotations` to simplify `typing.Optional`
2025-06-06T03:33:34.8553453Z    |
2025-06-06T03:33:34.8553682Z 77 | def test_memory_updates(memory_id: Optional[str]) -> None:
2025-06-06T03:33:34.8553809Z    |                                    ^^^^^^^^ FA100
2025-06-06T03:33:34.8554041Z 78 |     """Test memory update and history operations."""
2025-06-06T03:33:34.8554147Z 79 |     if not memory_id:
2025-06-06T03:33:34.8554217Z    |
2025-06-06T03:33:34.8554225Z 
2025-06-06T03:33:34.8554406Z examples/test_mem0_local.py:80:9: T201 `print` found
2025-06-06T03:33:34.8554474Z    |
2025-06-06T03:33:34.8554652Z 78 |     """Test memory update and history operations."""
2025-06-06T03:33:34.8554747Z 79 |     if not memory_id:
2025-06-06T03:33:34.8554952Z 80 |         print("No memory ID available for update testing.")
2025-06-06T03:33:34.8555030Z    |         ^^^^^ T201
2025-06-06T03:33:34.8555280Z 81 |         return
2025-06-06T03:33:34.8555351Z    |
2025-06-06T03:33:34.8555446Z    = help: Remove `print`
2025-06-06T03:33:34.8555453Z 
2025-06-06T03:33:34.8555738Z examples/test_mem0_local.py:83:5: T201 `print` found
2025-06-06T03:33:34.8555815Z    |
2025-06-06T03:33:34.8555899Z 81 |         return
2025-06-06T03:33:34.8555972Z 82 |
2025-06-06T03:33:34.8556181Z 83 |     print("\n=== Testing Memory Updates and History ===\n")
2025-06-06T03:33:34.8556264Z    |     ^^^^^ T201
2025-06-06T03:33:34.8556332Z 84 |
2025-06-06T03:33:34.8556437Z 85 |     # Initialize memory
2025-06-06T03:33:34.8556504Z    |
2025-06-06T03:33:34.8556591Z    = help: Remove `print`
2025-06-06T03:33:34.8556598Z 
2025-06-06T03:33:34.8556779Z examples/test_mem0_local.py:89:5: T201 `print` found
2025-06-06T03:33:34.8556853Z    |
2025-06-06T03:33:34.8556979Z 88 |     # Test updating a memory
2025-06-06T03:33:34.8557148Z 89 |     print(f"Updating memory {memory_id}...")
2025-06-06T03:33:34.8557413Z    |     ^^^^^ T201
2025-06-06T03:33:34.8557585Z 90 |     update_result = memory.update(
2025-06-06T03:33:34.8557709Z 91 |         memory_id=memory_id,
2025-06-06T03:33:34.8557783Z    |
2025-06-06T03:33:34.8557875Z    = help: Remove `print`
2025-06-06T03:33:34.8557883Z 
2025-06-06T03:33:34.8558075Z examples/test_mem0_local.py:94:5: T201 `print` found
2025-06-06T03:33:34.8558143Z    |
2025-06-06T03:33:34.8558489Z 92 |         data="I prefer dark mode in all applications and use VSCode and PyCharm as my editors.",
2025-06-06T03:33:34.8558560Z 93 |     )
2025-06-06T03:33:34.8558692Z 94 |     print("Update result:")
2025-06-06T03:33:34.8558767Z    |     ^^^^^ T201
2025-06-06T03:33:34.8558900Z 95 |     print_json(update_result)
2025-06-06T03:33:34.8558967Z    |
2025-06-06T03:33:34.8559055Z    = help: Remove `print`
2025-06-06T03:33:34.8559063Z 
2025-06-06T03:33:34.8559245Z examples/test_mem0_local.py:98:5: T201 `print` found
2025-06-06T03:33:34.8559316Z     |
2025-06-06T03:33:34.8559432Z  97 |     # Test getting memory history
2025-06-06T03:33:34.8559577Z  98 |     print("\nGetting memory history...")
2025-06-06T03:33:34.8559657Z     |     ^^^^^ T201
2025-06-06T03:33:34.8559839Z  99 |     history_result = memory.history(memory_id=memory_id)
2025-06-06T03:33:34.8559976Z 100 |     print("History result:")
2025-06-06T03:33:34.8560045Z     |
2025-06-06T03:33:34.8560137Z     = help: Remove `print`
2025-06-06T03:33:34.8560144Z 
2025-06-06T03:33:34.8560332Z examples/test_mem0_local.py:100:5: T201 `print` found
2025-06-06T03:33:34.8560405Z     |
2025-06-06T03:33:34.8560536Z  98 |     print("\nGetting memory history...")
2025-06-06T03:33:34.8560706Z  99 |     history_result = memory.history(memory_id=memory_id)
2025-06-06T03:33:34.8560833Z 100 |     print("History result:")
2025-06-06T03:33:34.8560913Z     |     ^^^^^ T201
2025-06-06T03:33:34.8561040Z 101 |     print_json(history_result)
2025-06-06T03:33:34.8561113Z     |
2025-06-06T03:33:34.8561198Z     = help: Remove `print`
2025-06-06T03:33:34.8561205Z 
2025-06-06T03:33:34.8561394Z examples/test_mem0_local.py:106:5: T201 `print` found
2025-06-06T03:33:34.8561461Z     |
2025-06-06T03:33:34.8561640Z 104 | def test_memory_deletion(user_id: str) -> None:
2025-06-06T03:33:34.8561799Z 105 |     """Test memory deletion operations."""
2025-06-06T03:33:34.8561973Z 106 |     print("\n=== Testing Memory Deletion ===\n")
2025-06-06T03:33:34.8562048Z     |     ^^^^^ T201
2025-06-06T03:33:34.8562118Z 107 |
2025-06-06T03:33:34.8562217Z 108 |     # Initialize memory
2025-06-06T03:33:34.8562287Z     |
2025-06-06T03:33:34.8562373Z     = help: Remove `print`
2025-06-06T03:33:34.8562380Z 
2025-06-06T03:33:34.8562560Z examples/test_mem0_local.py:112:5: T201 `print` found
2025-06-06T03:33:34.8562628Z     |
2025-06-06T03:33:34.8562807Z 111 |     # Add a temporary memory for deletion testing
2025-06-06T03:33:34.8563033Z 112 |     print("Adding a temporary memory for deletion testing...")
2025-06-06T03:33:34.8563111Z     |     ^^^^^ T201
2025-06-06T03:33:34.8563227Z 113 |     result = memory.add(
2025-06-06T03:33:34.8563556Z 114 |         "This is a temporary memory that will be deleted.",
2025-06-06T03:33:34.8563626Z     |
2025-06-06T03:33:34.8563716Z     = help: Remove `print`
2025-06-06T03:33:34.8563723Z 
2025-06-06T03:33:34.8564006Z examples/test_mem0_local.py:121:9: T201 `print` found
2025-06-06T03:33:34.8564084Z     |
2025-06-06T03:33:34.8564181Z 120 |     if not memory_id:
2025-06-06T03:33:34.8564437Z 121 |         print("Failed to create temporary memory for deletion testing.")
2025-06-06T03:33:34.8564515Z     |         ^^^^^ T201
2025-06-06T03:33:34.8564609Z 122 |         return
2025-06-06T03:33:34.8564682Z     |
2025-06-06T03:33:34.8564774Z     = help: Remove `print`
2025-06-06T03:33:34.8564782Z 
2025-06-06T03:33:34.8564970Z examples/test_mem0_local.py:125:5: T201 `print` found
2025-06-06T03:33:34.8565045Z     |
2025-06-06T03:33:34.8565190Z 124 |     # Test deleting a specific memory
2025-06-06T03:33:34.8565362Z 125 |     print(f"\nDeleting memory {memory_id}...")
2025-06-06T03:33:34.8565441Z     |     ^^^^^ T201
2025-06-06T03:33:34.8565645Z 126 |     delete_result = memory.delete(memory_id=memory_id)
2025-06-06T03:33:34.8565769Z 127 |     print("Delete result:")
2025-06-06T03:33:34.8565844Z     |
2025-06-06T03:33:34.8565934Z     = help: Remove `print`
2025-06-06T03:33:34.8565946Z 
2025-06-06T03:33:34.8566128Z examples/test_mem0_local.py:127:5: T201 `print` found
2025-06-06T03:33:34.8566196Z     |
2025-06-06T03:33:34.8566363Z 125 |     print(f"\nDeleting memory {memory_id}...")
2025-06-06T03:33:34.8566557Z 126 |     delete_result = memory.delete(memory_id=memory_id)
2025-06-06T03:33:34.8566683Z 127 |     print("Delete result:")
2025-06-06T03:33:34.8566758Z     |     ^^^^^ T201
2025-06-06T03:33:34.8566891Z 128 |     print_json(delete_result)
2025-06-06T03:33:34.8566959Z     |
2025-06-06T03:33:34.8567048Z     = help: Remove `print`
2025-06-06T03:33:34.8567055Z 
2025-06-06T03:33:34.8567481Z examples/test_mem0_local.py:132:5: ERA001 Found commented-out code
2025-06-06T03:33:34.8567556Z     |
2025-06-06T03:33:34.8567727Z 130 |     # Test deleting all memories for a user
2025-06-06T03:33:34.8567955Z 131 |     # Commented out to avoid accidentally deleting all memories
2025-06-06T03:33:34.8568179Z 132 |     # print(f"\nDeleting all memories for user {user_id}...")
2025-06-06T03:33:34.8568320Z     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ERA001
2025-06-06T03:33:34.8568540Z 133 |     # delete_all_result = memory.delete_all(user_id=user_id)
2025-06-06T03:33:34.8568678Z 134 |     # print("Delete all result:")
2025-06-06T03:33:34.8568747Z     |
2025-06-06T03:33:34.8568867Z     = help: Remove commented-out code
2025-06-06T03:33:34.8568875Z 
2025-06-06T03:33:34.8569118Z examples/test_mem0_local.py:133:5: ERA001 Found commented-out code
2025-06-06T03:33:34.8569187Z     |
2025-06-06T03:33:34.8569415Z 131 |     # Commented out to avoid accidentally deleting all memories
2025-06-06T03:33:34.8569628Z 132 |     # print(f"\nDeleting all memories for user {user_id}...")
2025-06-06T03:33:34.8569841Z 133 |     # delete_all_result = memory.delete_all(user_id=user_id)
2025-06-06T03:33:34.8569985Z     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ERA001
2025-06-06T03:33:34.8570126Z 134 |     # print("Delete all result:")
2025-06-06T03:33:34.8570266Z 135 |     # print_json(delete_all_result)
2025-06-06T03:33:34.8570339Z     |
2025-06-06T03:33:34.8570455Z     = help: Remove commented-out code
2025-06-06T03:33:34.8570462Z 
2025-06-06T03:33:34.8570700Z examples/test_mem0_local.py:134:5: ERA001 Found commented-out code
2025-06-06T03:33:34.8570768Z     |
2025-06-06T03:33:34.8570982Z 132 |     # print(f"\nDeleting all memories for user {user_id}...")
2025-06-06T03:33:34.8571182Z 133 |     # delete_all_result = memory.delete_all(user_id=user_id)
2025-06-06T03:33:34.8571318Z 134 |     # print("Delete all result:")
2025-06-06T03:33:34.8571432Z     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ERA001
2025-06-06T03:33:34.8571574Z 135 |     # print_json(delete_all_result)
2025-06-06T03:33:34.8571641Z     |
2025-06-06T03:33:34.8571886Z     = help: Remove commented-out code
2025-06-06T03:33:34.8571894Z 
2025-06-06T03:33:34.8572126Z examples/test_mem0_local.py:135:5: ERA001 Found commented-out code
2025-06-06T03:33:34.8572195Z     |
2025-06-06T03:33:34.8572592Z 133 |     # delete_all_result = memory.delete_all(user_id=user_id)
2025-06-06T03:33:34.8572866Z 134 |     # print("Delete all result:")
2025-06-06T03:33:34.8573141Z 135 |     # print_json(delete_all_result)
2025-06-06T03:33:34.8573345Z     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ERA001
2025-06-06T03:33:34.8573465Z     |
2025-06-06T03:33:34.8573665Z     = help: Remove commented-out code
2025-06-06T03:33:34.8573677Z 
2025-06-06T03:33:34.8574219Z examples/test_mem0_local.py:139:5: D401 First line of docstring should be in imperative mood: "Main function to run all tests."
2025-06-06T03:33:34.8574295Z     |
2025-06-06T03:33:34.8574408Z 138 | def main() -> None:
2025-06-06T03:33:34.8574569Z 139 |     """Main function to run all tests."""
2025-06-06T03:33:34.8574689Z     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ D401
2025-06-06T03:33:34.8574838Z 140 |     # Check if OpenAI API key is set
2025-06-06T03:33:34.8574993Z 141 |     if "OPENAI_API_KEY" not in os.environ:
2025-06-06T03:33:34.8575068Z     |
2025-06-06T03:33:34.8575079Z 
2025-06-06T03:33:34.8575270Z examples/test_mem0_local.py:142:9: T201 `print` found
2025-06-06T03:33:34.8575344Z     |
2025-06-06T03:33:34.8575482Z 140 |     # Check if OpenAI API key is set
2025-06-06T03:33:34.8575639Z 141 |     if "OPENAI_API_KEY" not in os.environ:
2025-06-06T03:33:34.8575881Z 142 |         print("Error: OPENAI_API_KEY environment variable not set.")
2025-06-06T03:33:34.8575965Z     |         ^^^^^ T201
2025-06-06T03:33:34.8576211Z 143 |         print("mem0 requires an OpenAI API key to function properly.")
2025-06-06T03:33:34.8576441Z 144 |         print("Set it with: export OPENAI_API_KEY='your-api-key'")
2025-06-06T03:33:34.8576509Z     |
2025-06-06T03:33:34.8576603Z     = help: Remove `print`
2025-06-06T03:33:34.8576610Z 
2025-06-06T03:33:34.8576797Z examples/test_mem0_local.py:143:9: T201 `print` found
2025-06-06T03:33:34.8576873Z     |
2025-06-06T03:33:34.8577025Z 141 |     if "OPENAI_API_KEY" not in os.environ:
2025-06-06T03:33:34.8577420Z 142 |         print("Error: OPENAI_API_KEY environment variable not set.")
2025-06-06T03:33:34.8577671Z 143 |         print("mem0 requires an OpenAI API key to function properly.")
2025-06-06T03:33:34.8577754Z     |         ^^^^^ T201
2025-06-06T03:33:34.8577975Z 144 |         print("Set it with: export OPENAI_API_KEY='your-api-key'")
2025-06-06T03:33:34.8578062Z 145 |         return
2025-06-06T03:33:34.8578127Z     |
2025-06-06T03:33:34.8578215Z     = help: Remove `print`
2025-06-06T03:33:34.8578222Z 
2025-06-06T03:33:34.8578403Z examples/test_mem0_local.py:144:9: T201 `print` found
2025-06-06T03:33:34.8578479Z     |
2025-06-06T03:33:34.8578706Z 142 |         print("Error: OPENAI_API_KEY environment variable not set.")
2025-06-06T03:33:34.8578947Z 143 |         print("mem0 requires an OpenAI API key to function properly.")
2025-06-06T03:33:34.8579169Z 144 |         print("Set it with: export OPENAI_API_KEY='your-api-key'")
2025-06-06T03:33:34.8579252Z     |         ^^^^^ T201
2025-06-06T03:33:34.8579336Z 145 |         return
2025-06-06T03:33:34.8579413Z     |
2025-06-06T03:33:34.8579497Z     = help: Remove `print`
2025-06-06T03:33:34.8579509Z 
2025-06-06T03:33:34.8579688Z examples/test_mem0_local.py:153:5: T201 `print` found
2025-06-06T03:33:34.8579761Z     |
2025-06-06T03:33:34.8579895Z 151 |     test_memory_deletion(user_id)
2025-06-06T03:33:34.8579969Z 152 |
2025-06-06T03:33:34.8580131Z 153 |     print("\n=== All Tests Completed ===\n")
2025-06-06T03:33:34.8580210Z     |     ^^^^^ T201
2025-06-06T03:33:34.8580277Z     |
2025-06-06T03:33:34.8580366Z     = help: Remove `print`
2025-06-06T03:33:34.8580373Z 
2025-06-06T03:33:34.8580642Z fix_line_endings.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8580714Z   |
2025-06-06T03:33:34.8580809Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8581093Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8581224Z 2 | """Fix line endings in a file."""
2025-06-06T03:33:34.8581299Z   |
2025-06-06T03:33:34.8581307Z 
2025-06-06T03:33:34.8581705Z generate_bandit_config.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8581783Z   |
2025-06-06T03:33:34.8581880Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8581981Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8582052Z 2 | """
2025-06-06T03:33:34.8582305Z 3 | Generate Bandit configuration files for GitHub Actions workflows.
2025-06-06T03:33:34.8582371Z   |
2025-06-06T03:33:34.8582379Z 
2025-06-06T03:33:34.8582713Z generate_bandit_config_fixed.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8582781Z   |
2025-06-06T03:33:34.8582883Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8582978Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8583051Z 2 | """
2025-06-06T03:33:34.8583256Z 3 | Generate Bandit Configuration Files for GitHub Actions.
2025-06-06T03:33:34.8583335Z   |
2025-06-06T03:33:34.8583344Z 
2025-06-06T03:33:34.8583595Z init_agent_db.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8583666Z   |
2025-06-06T03:33:34.8583763Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8583862Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8584099Z 2 | """init_agent_db.py - Initialize the agent database with test data."""
2025-06-06T03:33:34.8584170Z   |
2025-06-06T03:33:34.8584177Z 
2025-06-06T03:33:34.8584407Z init_db.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8584479Z   |
2025-06-06T03:33:34.8584572Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8584673Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8584914Z 2 | """init_db.py - Initialize the database with tables and initial data."""
2025-06-06T03:33:34.8584985Z   |
2025-06-06T03:33:34.8584993Z 
2025-06-06T03:33:34.8585286Z install_crewai_for_tests.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8585365Z   |
2025-06-06T03:33:34.8585459Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8585561Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8585628Z 2 | """
2025-06-06T03:33:34.8585810Z 3 | Install CrewAI and its dependencies for tests.
2025-06-06T03:33:34.8585877Z   |
2025-06-06T03:33:34.8585891Z 
2025-06-06T03:33:34.8586145Z install_mcp_sdk.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8586218Z   |
2025-06-06T03:33:34.8586314Z 1 | #!/usr/bin/env python
2025-06-06T03:33:34.8586417Z   | ^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8586486Z 2 | """
2025-06-06T03:33:34.8586632Z 3 | Wrapper script to install the MCP SDK.
2025-06-06T03:33:34.8586702Z   |
2025-06-06T03:33:34.8586709Z 
2025-06-06T03:33:34.8587097Z interfaces/knowledge_interfaces.py:63:5: D205 1 blank line required between summary line and description
2025-06-06T03:33:34.8587164Z    |
2025-06-06T03:33:34.8587505Z 62 |   class KnowledgeSource(ABC):
2025-06-06T03:33:34.8587589Z 63 | /     """
2025-06-06T03:33:34.8587885Z 64 | |     Abstract base class for a knowledge source (e.g., mem0, vector database).
2025-06-06T03:33:34.8588151Z 65 | |     To add a new knowledge source, subclass this and implement all methods.
2025-06-06T03:33:34.8588231Z 66 | |     """
2025-06-06T03:33:34.8588308Z    | |_______^ D205
2025-06-06T03:33:34.8588382Z 67 |
2025-06-06T03:33:34.8588481Z 68 |       @abstractmethod
2025-06-06T03:33:34.8588554Z    |
2025-06-06T03:33:34.8588667Z    = help: Insert single blank line
2025-06-06T03:33:34.8588676Z 
2025-06-06T03:33:34.8589004Z interfaces/knowledge_interfaces.py:69:48: ANN003 Missing type annotation for `**kwargs`
2025-06-06T03:33:34.8589073Z    |
2025-06-06T03:33:34.8589174Z 68 |     @abstractmethod
2025-06-06T03:33:34.8589451Z 69 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T03:33:34.8589593Z    |                                                ^^^^^^^^ ANN003
2025-06-06T03:33:34.8589664Z 70 |         """
2025-06-06T03:33:34.8590030Z 71 |         Search for relevant information given a query and user context.
2025-06-06T03:33:34.8590098Z    |
2025-06-06T03:33:34.8590106Z 
2025-06-06T03:33:34.8590632Z interfaces/knowledge_interfaces.py:69:61: FA100 Add `from __future__ import annotations` to simplify `typing.List`
2025-06-06T03:33:34.8590704Z    |
2025-06-06T03:33:34.8590805Z 68 |     @abstractmethod
2025-06-06T03:33:34.8591080Z 69 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T03:33:34.8591229Z    |                                                             ^^^^ FA100
2025-06-06T03:33:34.8591300Z 70 |         """
2025-06-06T03:33:34.8591547Z 71 |         Search for relevant information given a query and user context.
2025-06-06T03:33:34.8591614Z    |
2025-06-06T03:33:34.8591621Z 
2025-06-06T03:33:34.8592044Z interfaces/knowledge_interfaces.py:69:66: FA100 Add `from __future__ import annotations` to simplify `typing.Dict`
2025-06-06T03:33:34.8592112Z    |
2025-06-06T03:33:34.8592216Z 68 |     @abstractmethod
2025-06-06T03:33:34.8592487Z 69 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T03:33:34.8592641Z    |                                                                  ^^^^ FA100
2025-06-06T03:33:34.8592711Z 70 |         """
2025-06-06T03:33:34.8592954Z 71 |         Search for relevant information given a query and user context.
2025-06-06T03:33:34.8593026Z    |
2025-06-06T03:33:34.8593033Z 
2025-06-06T03:33:34.8593351Z interfaces/knowledge_interfaces.py:84:47: ANN003 Missing type annotation for `**kwargs`
2025-06-06T03:33:34.8593428Z    |
2025-06-06T03:33:34.8593524Z 83 |     @abstractmethod
2025-06-06T03:33:34.8593747Z 84 |     def add(self, content: str, user_id: str, **kwargs) -> Any:
2025-06-06T03:33:34.8593880Z    |                                               ^^^^^^^^ ANN003
2025-06-06T03:33:34.8593954Z 85 |         """
2025-06-06T03:33:34.8594119Z 86 |         Add new knowledge/content to the source.
2025-06-06T03:33:34.8594196Z    |
2025-06-06T03:33:34.8594202Z 
2025-06-06T03:33:34.8594639Z interfaces/knowledge_interfaces.py:84:60: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `add`
2025-06-06T03:33:34.8594715Z    |
2025-06-06T03:33:34.8594807Z 83 |     @abstractmethod
2025-06-06T03:33:34.8595029Z 84 |     def add(self, content: str, user_id: str, **kwargs) -> Any:
2025-06-06T03:33:34.8595167Z    |                                                            ^^^ ANN401
2025-06-06T03:33:34.8595242Z 85 |         """
2025-06-06T03:33:34.8595411Z 86 |         Add new knowledge/content to the source.
2025-06-06T03:33:34.8595482Z    |
2025-06-06T03:33:34.8595490Z 
2025-06-06T03:33:34.8595808Z interfaces/knowledge_interfaces.py:98:71: ANN003 Missing type annotation for `**kwargs`
2025-06-06T03:33:34.8595882Z     |
2025-06-06T03:33:34.8595957Z  96 |         """
2025-06-06T03:33:34.8596029Z  97 |
2025-06-06T03:33:34.8596292Z  98 |     def update(self, content_id: str, new_content: str, user_id: str, **kwargs) -> Any:
2025-06-06T03:33:34.8596454Z     |                                                                       ^^^^^^^^ ANN003
2025-06-06T03:33:34.8596527Z  99 |         """
2025-06-06T03:33:34.8596719Z 100 |         Optionally update existing knowledge entry.
2025-06-06T03:33:34.8596786Z     |
2025-06-06T03:33:34.8596794Z 
2025-06-06T03:33:34.8597426Z interfaces/knowledge_interfaces.py:98:84: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `update`
2025-06-06T03:33:34.8597504Z     |
2025-06-06T03:33:34.8597577Z  96 |         """
2025-06-06T03:33:34.8597643Z  97 |
2025-06-06T03:33:34.8597910Z  98 |     def update(self, content_id: str, new_content: str, user_id: str, **kwargs) -> Any:
2025-06-06T03:33:34.8598076Z     |                                                                                    ^^^ ANN401
2025-06-06T03:33:34.8598149Z  99 |         """
2025-06-06T03:33:34.8598332Z 100 |         Optionally update existing knowledge entry.
2025-06-06T03:33:34.8598525Z     |
2025-06-06T03:33:34.8598532Z 
2025-06-06T03:33:34.8598965Z interfaces/knowledge_interfaces.py:112:35: EM101 Exception must not use a string literal, assign to variable first
2025-06-06T03:33:34.8599033Z     |
2025-06-06T03:33:34.8599216Z 111 |         """
2025-06-06T03:33:34.8599500Z 112 |         raise NotImplementedError("Update not implemented for this source.")
2025-06-06T03:33:34.8599651Z     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ EM101
2025-06-06T03:33:34.8599720Z 113 |
2025-06-06T03:33:34.8599973Z 114 |     def delete(self, content_id: str, user_id: str, **kwargs) -> Any:
2025-06-06T03:33:34.8600041Z     |
2025-06-06T03:33:34.8600198Z     = help: Assign to variable; remove string literal
2025-06-06T03:33:34.8600206Z 
2025-06-06T03:33:34.8600528Z interfaces/knowledge_interfaces.py:114:53: ANN003 Missing type annotation for `**kwargs`
2025-06-06T03:33:34.8600604Z     |
2025-06-06T03:33:34.8600877Z 112 |         raise NotImplementedError("Update not implemented for this source.")
2025-06-06T03:33:34.8600953Z 113 |
2025-06-06T03:33:34.8601189Z 114 |     def delete(self, content_id: str, user_id: str, **kwargs) -> Any:
2025-06-06T03:33:34.8601339Z     |                                                     ^^^^^^^^ ANN003
2025-06-06T03:33:34.8601419Z 115 |         """
2025-06-06T03:33:34.8601677Z 116 |         Optionally delete an entry.
2025-06-06T03:33:34.8601789Z     |
2025-06-06T03:33:34.8601799Z 
2025-06-06T03:33:34.8602424Z interfaces/knowledge_interfaces.py:114:66: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `delete`
2025-06-06T03:33:34.8602500Z     |
2025-06-06T03:33:34.8602783Z 112 |         raise NotImplementedError("Update not implemented for this source.")
2025-06-06T03:33:34.8602856Z 113 |
2025-06-06T03:33:34.8603097Z 114 |     def delete(self, content_id: str, user_id: str, **kwargs) -> Any:
2025-06-06T03:33:34.8603243Z     |                                                                  ^^^ ANN401
2025-06-06T03:33:34.8603330Z 115 |         """
2025-06-06T03:33:34.8603480Z 116 |         Optionally delete an entry.
2025-06-06T03:33:34.8603548Z     |
2025-06-06T03:33:34.8603556Z 
2025-06-06T03:33:34.8603991Z interfaces/knowledge_interfaces.py:127:35: EM101 Exception must not use a string literal, assign to variable first
2025-06-06T03:33:34.8604058Z     |
2025-06-06T03:33:34.8604141Z 126 |         """
2025-06-06T03:33:34.8604409Z 127 |         raise NotImplementedError("Delete not implemented for this source.")
2025-06-06T03:33:34.8604558Z     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ EM101
2025-06-06T03:33:34.8604626Z     |
2025-06-06T03:33:34.8604775Z     = help: Assign to variable; remove string literal
2025-06-06T03:33:34.8604782Z 
2025-06-06T03:33:34.8605101Z interfaces/knowledge_interfaces.py:131:5: D200 One-line docstring should fit on one line
2025-06-06T03:33:34.8605173Z     |
2025-06-06T03:33:34.8605350Z 130 |   class Mem0KnowledgeSource(KnowledgeSource):
2025-06-06T03:33:34.8605429Z 131 | /     """
2025-06-06T03:33:34.8605703Z 132 | |     Concrete implementation of KnowledgeSource for mem0 (Memory API).
2025-06-06T03:33:34.8605781Z 133 | |     """
2025-06-06T03:33:34.8605860Z     | |_______^ D200
2025-06-06T03:33:34.8605934Z 134 |
2025-06-06T03:33:34.8606108Z 135 |       def __init__(self, mem0_client: Any):
2025-06-06T03:33:34.8606177Z     |
2025-06-06T03:33:34.8606298Z     = help: Reformat to one line
2025-06-06T03:33:34.8606305Z 
2025-06-06T03:33:34.8606722Z interfaces/knowledge_interfaces.py:135:9: ANN204 Missing return type annotation for special method `__init__`
2025-06-06T03:33:34.8606799Z     |
2025-06-06T03:33:34.8606869Z 133 |     """
2025-06-06T03:33:34.8606944Z 134 |
2025-06-06T03:33:34.8607099Z 135 |     def __init__(self, mem0_client: Any):
2025-06-06T03:33:34.8607188Z     |         ^^^^^^^^ ANN204
2025-06-06T03:33:34.8607471Z 136 |         """
2025-06-06T03:33:34.8607588Z 137 |         Args:
2025-06-06T03:33:34.8607656Z     |
2025-06-06T03:33:34.8607801Z     = help: Add return type annotation: `None`
2025-06-06T03:33:34.8607955Z 
2025-06-06T03:33:34.8608443Z interfaces/knowledge_interfaces.py:135:37: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `mem0_client`
2025-06-06T03:33:34.8608617Z     |
2025-06-06T03:33:34.8608692Z 133 |     """
2025-06-06T03:33:34.8608765Z 134 |
2025-06-06T03:33:34.8608920Z 135 |     def __init__(self, mem0_client: Any):
2025-06-06T03:33:34.8609047Z     |                                     ^^^ ANN401
2025-06-06T03:33:34.8609128Z 136 |         """
2025-06-06T03:33:34.8609215Z 137 |         Args:
2025-06-06T03:33:34.8609282Z     |
2025-06-06T03:33:34.8609339Z 
2025-06-06T03:33:34.8609770Z interfaces/knowledge_interfaces.py:136:9: D205 1 blank line required between summary line and description
2025-06-06T03:33:34.8609909Z     |
2025-06-06T03:33:34.8610099Z 135 |       def __init__(self, mem0_client: Any):
2025-06-06T03:33:34.8610255Z 136 | /         """
2025-06-06T03:33:34.8610512Z 137 | |         Args:
2025-06-06T03:33:34.8610833Z 138 | |             mem0_client: Initialized client for mem0's Memory API.
2025-06-06T03:33:34.8610980Z 139 | |
2025-06-06T03:33:34.8611093Z 140 | |         """
2025-06-06T03:33:34.8611246Z     | |___________^ D205
2025-06-06T03:33:34.8611537Z 141 |           self.mem0_client = mem0_client  # Stub: Replace with actual mem0 client
2025-06-06T03:33:34.8611799Z     |
2025-06-06T03:33:34.8611962Z     = help: Insert single blank line
2025-06-06T03:33:34.8611971Z 
2025-06-06T03:33:34.8612364Z interfaces/knowledge_interfaces.py:143:34: ARG002 Unused method argument: `user_id`
2025-06-06T03:33:34.8612466Z     |
2025-06-06T03:33:34.8612796Z 141 |         self.mem0_client = mem0_client  # Stub: Replace with actual mem0 client
2025-06-06T03:33:34.8612946Z 142 |
2025-06-06T03:33:34.8613356Z 143 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T03:33:34.8613512Z     |                                  ^^^^^^^ ARG002
2025-06-06T03:33:34.8613662Z 144 |         """
2025-06-06T03:33:34.8613861Z 145 |         Search mem0 for relevant memories.
2025-06-06T03:33:34.8614028Z     |
2025-06-06T03:33:34.8614036Z 
2025-06-06T03:33:34.8614462Z interfaces/knowledge_interfaces.py:143:48: ANN003 Missing type annotation for `**kwargs`
2025-06-06T03:33:34.8614563Z     |
2025-06-06T03:33:34.8614899Z 141 |         self.mem0_client = mem0_client  # Stub: Replace with actual mem0 client
2025-06-06T03:33:34.8614999Z 142 |
2025-06-06T03:33:34.8615410Z 143 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T03:33:34.8615601Z     |                                                ^^^^^^^^ ANN003
2025-06-06T03:33:34.8615751Z 144 |         """
2025-06-06T03:33:34.8615935Z 145 |         Search mem0 for relevant memories.
2025-06-06T03:33:34.8616071Z     |
2025-06-06T03:33:34.8616078Z 
2025-06-06T03:33:34.8616404Z interfaces/knowledge_interfaces.py:143:50: ARG002 Unused method argument: `kwargs`
2025-06-06T03:33:34.8616601Z     |
2025-06-06T03:33:34.8616897Z 141 |         self.mem0_client = mem0_client  # Stub: Replace with actual mem0 client
2025-06-06T03:33:34.8617036Z 142 |
2025-06-06T03:33:34.8617519Z 143 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T03:33:34.8617717Z     |                                                  ^^^^^^ ARG002
2025-06-06T03:33:34.8617927Z 144 |         """
2025-06-06T03:33:34.8618169Z 145 |         Search mem0 for relevant memories.
2025-06-06T03:33:34.8618270Z     |
2025-06-06T03:33:34.8618278Z 
2025-06-06T03:33:34.8618783Z interfaces/knowledge_interfaces.py:143:61: FA100 Add `from __future__ import annotations` to simplify `typing.List`
2025-06-06T03:33:34.8618870Z     |
2025-06-06T03:33:34.8619251Z 141 |         self.mem0_client = mem0_client  # Stub: Replace with actual mem0 client
2025-06-06T03:33:34.8619354Z 142 |
2025-06-06T03:33:34.8619697Z 143 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T03:33:34.8619870Z     |                                                             ^^^^ FA100
2025-06-06T03:33:34.8620191Z 144 |         """
2025-06-06T03:33:34.8620465Z 145 |         Search mem0 for relevant memories.
2025-06-06T03:33:34.8620566Z     |
2025-06-06T03:33:34.8620574Z 
2025-06-06T03:33:34.8621178Z interfaces/knowledge_interfaces.py:143:66: FA100 Add `from __future__ import annotations` to simplify `typing.Dict`
2025-06-06T03:33:34.8621286Z     |
2025-06-06T03:33:34.8621652Z 141 |         self.mem0_client = mem0_client  # Stub: Replace with actual mem0 client
2025-06-06T03:33:34.8621769Z 142 |
2025-06-06T03:33:34.8622113Z 143 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T03:33:34.8622286Z     |                                                                  ^^^^ FA100
2025-06-06T03:33:34.8622431Z 144 |         """
2025-06-06T03:33:34.8634139Z 145 |         Search mem0 for relevant memories.
2025-06-06T03:33:34.8634315Z     |
2025-06-06T03:33:34.8634334Z 
2025-06-06T03:33:34.8634968Z interfaces/knowledge_interfaces.py:144:9: D200 One-line docstring should fit on one line
2025-06-06T03:33:34.8635146Z     |
2025-06-06T03:33:34.8635610Z 143 |       def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T03:33:34.8635706Z 144 | /         """
2025-06-06T03:33:34.8635884Z 145 | |         Search mem0 for relevant memories.
2025-06-06T03:33:34.8635967Z 146 | |         """
2025-06-06T03:33:34.8636052Z     | |___________^ D200
2025-06-06T03:33:34.8636276Z 147 |           # Stub: Replace with actual call to mem0's Memory API
2025-06-06T03:33:34.8636375Z 148 |           # Example:
2025-06-06T03:33:34.8636445Z     |
2025-06-06T03:33:34.8636563Z     = help: Reformat to one line
2025-06-06T03:33:34.8636572Z 
2025-06-06T03:33:34.8636871Z interfaces/knowledge_interfaces.py:149:9: ERA001 Found commented-out code
2025-06-06T03:33:34.8636940Z     |
2025-06-06T03:33:34.8637151Z 147 |         # Stub: Replace with actual call to mem0's Memory API
2025-06-06T03:33:34.8637383Z 148 |         # Example:
2025-06-06T03:33:34.8637621Z 149 |         # return self.mem0_client.search(query, user_id, **kwargs)
2025-06-06T03:33:34.8637769Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ERA001
2025-06-06T03:33:34.8638019Z 150 |         return [{"source": "mem0", "content": f"Stub memory for '{query}'"}]
2025-06-06T03:33:34.8638091Z     |
2025-06-06T03:33:34.8638214Z     = help: Remove commented-out code
2025-06-06T03:33:34.8638227Z 
2025-06-06T03:33:34.8638557Z interfaces/knowledge_interfaces.py:152:33: ARG002 Unused method argument: `user_id`
2025-06-06T03:33:34.8638625Z     |
2025-06-06T03:33:34.8638873Z 150 |         return [{"source": "mem0", "content": f"Stub memory for '{query}'"}]
2025-06-06T03:33:34.8638941Z 151 |
2025-06-06T03:33:34.8639170Z 152 |     def add(self, content: str, user_id: str, **kwargs) -> Any:
2025-06-06T03:33:34.8639298Z     |                                 ^^^^^^^ ARG002
2025-06-06T03:33:34.8639379Z 153 |         """
2025-06-06T03:33:34.8639512Z 154 |         Add new content to mem0.
2025-06-06T03:33:34.8639583Z     |
2025-06-06T03:33:34.8639590Z 
2025-06-06T03:33:34.8639932Z interfaces/knowledge_interfaces.py:152:47: ANN003 Missing type annotation for `**kwargs`
2025-06-06T03:33:34.8640001Z     |
2025-06-06T03:33:34.8640248Z 150 |         return [{"source": "mem0", "content": f"Stub memory for '{query}'"}]
2025-06-06T03:33:34.8640313Z 151 |
2025-06-06T03:33:34.8640536Z 152 |     def add(self, content: str, user_id: str, **kwargs) -> Any:
2025-06-06T03:33:34.8640669Z     |                                               ^^^^^^^^ ANN003
2025-06-06T03:33:34.8640749Z 153 |         """
2025-06-06T03:33:34.8640877Z 154 |         Add new content to mem0.
2025-06-06T03:33:34.8640944Z     |
2025-06-06T03:33:34.8640951Z 
2025-06-06T03:33:34.8641258Z interfaces/knowledge_interfaces.py:152:49: ARG002 Unused method argument: `kwargs`
2025-06-06T03:33:34.8641325Z     |
2025-06-06T03:33:34.8641571Z 150 |         return [{"source": "mem0", "content": f"Stub memory for '{query}'"}]
2025-06-06T03:33:34.8641826Z 151 |
2025-06-06T03:33:34.8642051Z 152 |     def add(self, content: str, user_id: str, **kwargs) -> Any:
2025-06-06T03:33:34.8642283Z     |                                                 ^^^^^^ ARG002
2025-06-06T03:33:34.8642367Z 153 |         """
2025-06-06T03:33:34.8642496Z 154 |         Add new content to mem0.
2025-06-06T03:33:34.8642562Z     |
2025-06-06T03:33:34.8642569Z 
2025-06-06T03:33:34.8643027Z interfaces/knowledge_interfaces.py:152:60: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `add`
2025-06-06T03:33:34.8643091Z     |
2025-06-06T03:33:34.8643334Z 150 |         return [{"source": "mem0", "content": f"Stub memory for '{query}'"}]
2025-06-06T03:33:34.8643399Z 151 |
2025-06-06T03:33:34.8643613Z 152 |     def add(self, content: str, user_id: str, **kwargs) -> Any:
2025-06-06T03:33:34.8643752Z     |                                                            ^^^ ANN401
2025-06-06T03:33:34.8643832Z 153 |         """
2025-06-06T03:33:34.8643954Z 154 |         Add new content to mem0.
2025-06-06T03:33:34.8644025Z     |
2025-06-06T03:33:34.8644033Z 
2025-06-06T03:33:34.8644361Z interfaces/knowledge_interfaces.py:153:9: D200 One-line docstring should fit on one line
2025-06-06T03:33:34.8644430Z     |
2025-06-06T03:33:34.8644655Z 152 |       def add(self, content: str, user_id: str, **kwargs) -> Any:
2025-06-06T03:33:34.8644739Z 153 | /         """
2025-06-06T03:33:34.8644872Z 154 | |         Add new content to mem0.
2025-06-06T03:33:34.8644952Z 155 | |         """
2025-06-06T03:33:34.8645032Z     | |___________^ D200
2025-06-06T03:33:34.8645231Z 156 |           # Stub: Replace with actual call to mem0's add API
2025-06-06T03:33:34.8645326Z 157 |           # Example:
2025-06-06T03:33:34.8645390Z     |
2025-06-06T03:33:34.8645500Z     = help: Reformat to one line
2025-06-06T03:33:34.8645508Z 
2025-06-06T03:33:34.8645782Z interfaces/knowledge_interfaces.py:158:9: ERA001 Found commented-out code
2025-06-06T03:33:34.8645852Z     |
2025-06-06T03:33:34.8646054Z 156 |         # Stub: Replace with actual call to mem0's add API
2025-06-06T03:33:34.8646149Z 157 |         # Example:
2025-06-06T03:33:34.8646379Z 158 |         # return self.mem0_client.add(content, user_id, **kwargs)
2025-06-06T03:33:34.8646528Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ERA001
2025-06-06T03:33:34.8646768Z 159 |         return {"source": "mem0", "status": "added", "content": content}
2025-06-06T03:33:34.8646838Z     |
2025-06-06T03:33:34.8646959Z     = help: Remove commented-out code
2025-06-06T03:33:34.8646967Z 
2025-06-06T03:33:34.8647408Z interfaces/knowledge_interfaces.py:163:5: D200 One-line docstring should fit on one line
2025-06-06T03:33:34.8647478Z     |
2025-06-06T03:33:34.8647693Z 162 |   class VectorRAGKnowledgeSource(KnowledgeSource):
2025-06-06T03:33:34.8647764Z 163 | /     """
2025-06-06T03:33:34.8648113Z 164 | |     Concrete implementation of KnowledgeSource for vector database RAG (e.g., ChromaDB).
2025-06-06T03:33:34.8648181Z 165 | |     """
2025-06-06T03:33:34.8648267Z     | |_______^ D200
2025-06-06T03:33:34.8648333Z 166 |
2025-06-06T03:33:34.8648502Z 167 |       def __init__(self, vector_client: Any):
2025-06-06T03:33:34.8648569Z     |
2025-06-06T03:33:34.8648686Z     = help: Reformat to one line
2025-06-06T03:33:34.8648694Z 
2025-06-06T03:33:34.8649112Z interfaces/knowledge_interfaces.py:167:9: ANN204 Missing return type annotation for special method `__init__`
2025-06-06T03:33:34.8649188Z     |
2025-06-06T03:33:34.8649257Z 165 |     """
2025-06-06T03:33:34.8649329Z 166 |
2025-06-06T03:33:34.8649489Z 167 |     def __init__(self, vector_client: Any):
2025-06-06T03:33:34.8649574Z     |         ^^^^^^^^ ANN204
2025-06-06T03:33:34.8649654Z 168 |         """
2025-06-06T03:33:34.8649742Z 169 |         Args:
2025-06-06T03:33:34.8649809Z     |
2025-06-06T03:33:34.8649950Z     = help: Add return type annotation: `None`
2025-06-06T03:33:34.8649957Z 
2025-06-06T03:33:34.8650457Z interfaces/knowledge_interfaces.py:167:39: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `vector_client`
2025-06-06T03:33:34.8650652Z     |
2025-06-06T03:33:34.8650727Z 165 |     """
2025-06-06T03:33:34.8650801Z 166 |
2025-06-06T03:33:34.8651055Z 167 |     def __init__(self, vector_client: Any):
2025-06-06T03:33:34.8651188Z     |                                       ^^^ ANN401
2025-06-06T03:33:34.8651272Z 168 |         """
2025-06-06T03:33:34.8651360Z 169 |         Args:
2025-06-06T03:33:34.8651431Z     |
2025-06-06T03:33:34.8651444Z 
2025-06-06T03:33:34.8651833Z interfaces/knowledge_interfaces.py:168:9: D205 1 blank line required between summary line and description
2025-06-06T03:33:34.8651907Z     |
2025-06-06T03:33:34.8652068Z 167 |       def __init__(self, vector_client: Any):
2025-06-06T03:33:34.8652153Z 168 | /         """
2025-06-06T03:33:34.8652238Z 169 | |         Args:
2025-06-06T03:33:34.8652493Z 170 | |             vector_client: Initialized vector DB client (e.g., ChromaDB).
2025-06-06T03:33:34.8652563Z 171 | |
2025-06-06T03:33:34.8652652Z 172 | |         """
2025-06-06T03:33:34.8652735Z     | |___________^ D205
2025-06-06T03:33:34.8653048Z 173 |           self.vector_client = vector_client  # Stub: Replace with actual vector DB client
2025-06-06T03:33:34.8653115Z     |
2025-06-06T03:33:34.8653238Z     = help: Insert single blank line
2025-06-06T03:33:34.8653245Z 
2025-06-06T03:33:34.8653551Z interfaces/knowledge_interfaces.py:175:34: ARG002 Unused method argument: `user_id`
2025-06-06T03:33:34.8653629Z     |
2025-06-06T03:33:34.8653935Z 173 |         self.vector_client = vector_client  # Stub: Replace with actual vector DB client
2025-06-06T03:33:34.8654004Z 174 |
2025-06-06T03:33:34.8654286Z 175 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T03:33:34.8654409Z     |                                  ^^^^^^^ ARG002
2025-06-06T03:33:34.8654488Z 176 |         """
2025-06-06T03:33:34.8654657Z 177 |         Search vector DB for relevant documents.
2025-06-06T03:33:34.8654724Z     |
2025-06-06T03:33:34.8654735Z 
2025-06-06T03:33:34.8655060Z interfaces/knowledge_interfaces.py:175:48: ANN003 Missing type annotation for `**kwargs`
2025-06-06T03:33:34.8655128Z     |
2025-06-06T03:33:34.8655432Z 173 |         self.vector_client = vector_client  # Stub: Replace with actual vector DB client
2025-06-06T03:33:34.8655499Z 174 |
2025-06-06T03:33:34.8655779Z 175 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T03:33:34.8655916Z     |                                                ^^^^^^^^ ANN003
2025-06-06T03:33:34.8656000Z 176 |         """
2025-06-06T03:33:34.8656163Z 177 |         Search vector DB for relevant documents.
2025-06-06T03:33:34.8656236Z     |
2025-06-06T03:33:34.8656243Z 
2025-06-06T03:33:34.8656544Z interfaces/knowledge_interfaces.py:175:50: ARG002 Unused method argument: `kwargs`
2025-06-06T03:33:34.8656616Z     |
2025-06-06T03:33:34.8656910Z 173 |         self.vector_client = vector_client  # Stub: Replace with actual vector DB client
2025-06-06T03:33:34.8656988Z 174 |
2025-06-06T03:33:34.8657363Z 175 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T03:33:34.8657515Z     |                                                  ^^^^^^ ARG002
2025-06-06T03:33:34.8657597Z 176 |         """
2025-06-06T03:33:34.8657763Z 177 |         Search vector DB for relevant documents.
2025-06-06T03:33:34.8657831Z     |
2025-06-06T03:33:34.8657842Z 
2025-06-06T03:33:34.8658270Z interfaces/knowledge_interfaces.py:175:61: FA100 Add `from __future__ import annotations` to simplify `typing.List`
2025-06-06T03:33:34.8658341Z     |
2025-06-06T03:33:34.8658635Z 173 |         self.vector_client = vector_client  # Stub: Replace with actual vector DB client
2025-06-06T03:33:34.8658704Z 174 |
2025-06-06T03:33:34.8658975Z 175 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T03:33:34.8659123Z     |                                                             ^^^^ FA100
2025-06-06T03:33:34.8659202Z 176 |         """
2025-06-06T03:33:34.8659489Z 177 |         Search vector DB for relevant documents.
2025-06-06T03:33:34.8659555Z     |
2025-06-06T03:33:34.8659563Z 
2025-06-06T03:33:34.8660080Z interfaces/knowledge_interfaces.py:175:66: FA100 Add `from __future__ import annotations` to simplify `typing.Dict`
2025-06-06T03:33:34.8660150Z     |
2025-06-06T03:33:34.8660452Z 173 |         self.vector_client = vector_client  # Stub: Replace with actual vector DB client
2025-06-06T03:33:34.8660518Z 174 |
2025-06-06T03:33:34.8660795Z 175 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T03:33:34.8660934Z     |                                                                  ^^^^ FA100
2025-06-06T03:33:34.8661019Z 176 |         """
2025-06-06T03:33:34.8661180Z 177 |         Search vector DB for relevant documents.
2025-06-06T03:33:34.8661253Z     |
2025-06-06T03:33:34.8661260Z 
2025-06-06T03:33:34.8661581Z interfaces/knowledge_interfaces.py:176:9: D200 One-line docstring should fit on one line
2025-06-06T03:33:34.8661658Z     |
2025-06-06T03:33:34.8661937Z 175 |       def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T03:33:34.8662024Z 176 | /         """
2025-06-06T03:33:34.8662198Z 177 | |         Search vector DB for relevant documents.
2025-06-06T03:33:34.8662281Z 178 | |         """
2025-06-06T03:33:34.8662358Z     | |___________^ D200
2025-06-06T03:33:34.8662545Z 179 |           # Stub: Replace with actual vector DB search
2025-06-06T03:33:34.8662639Z 180 |           # Example:
2025-06-06T03:33:34.8662710Z     |
2025-06-06T03:33:34.8662819Z     = help: Reformat to one line
2025-06-06T03:33:34.8662826Z 
2025-06-06T03:33:34.8663106Z interfaces/knowledge_interfaces.py:181:9: ERA001 Found commented-out code
2025-06-06T03:33:34.8663172Z     |
2025-06-06T03:33:34.8663354Z 179 |         # Stub: Replace with actual vector DB search
2025-06-06T03:33:34.8663445Z 180 |         # Example:
2025-06-06T03:33:34.8663672Z 181 |         # return self.vector_client.query(query, user_id, **kwargs)
2025-06-06T03:33:34.8663821Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ERA001
2025-06-06T03:33:34.8664115Z 182 |         return [{"source": "vector_rag", "content": f"Stub vector match for '{query}'"}]
2025-06-06T03:33:34.8664189Z     |
2025-06-06T03:33:34.8664306Z     = help: Remove commented-out code
2025-06-06T03:33:34.8664313Z 
2025-06-06T03:33:34.8664624Z interfaces/knowledge_interfaces.py:184:33: ARG002 Unused method argument: `user_id`
2025-06-06T03:33:34.8664691Z     |
2025-06-06T03:33:34.8664979Z 182 |         return [{"source": "vector_rag", "content": f"Stub vector match for '{query}'"}]
2025-06-06T03:33:34.8665046Z 183 |
2025-06-06T03:33:34.8665272Z 184 |     def add(self, content: str, user_id: str, **kwargs) -> Any:
2025-06-06T03:33:34.8665391Z     |                                 ^^^^^^^ ARG002
2025-06-06T03:33:34.8665475Z 185 |         """
2025-06-06T03:33:34.8665617Z 186 |         Add new content to vector DB.
2025-06-06T03:33:34.8665717Z     |
2025-06-06T03:33:34.8665724Z 
2025-06-06T03:33:34.8666041Z interfaces/knowledge_interfaces.py:184:47: ANN003 Missing type annotation for `**kwargs`
2025-06-06T03:33:34.8666119Z     |
2025-06-06T03:33:34.8666403Z 182 |         return [{"source": "vector_rag", "content": f"Stub vector match for '{query}'"}]
2025-06-06T03:33:34.8666475Z 183 |
2025-06-06T03:33:34.8666689Z 184 |     def add(self, content: str, user_id: str, **kwargs) -> Any:
2025-06-06T03:33:34.8666830Z     |                                               ^^^^^^^^ ANN003
2025-06-06T03:33:34.8666911Z 185 |         """
2025-06-06T03:33:34.8667054Z 186 |         Add new content to vector DB.
2025-06-06T03:33:34.8667120Z     |
2025-06-06T03:33:34.8667127Z 
2025-06-06T03:33:34.8667595Z interfaces/knowledge_interfaces.py:184:49: ARG002 Unused method argument: `kwargs`
2025-06-06T03:33:34.8667663Z     |
2025-06-06T03:33:34.8667952Z 182 |         return [{"source": "vector_rag", "content": f"Stub vector match for '{query}'"}]
2025-06-06T03:33:34.8668144Z 183 |
2025-06-06T03:33:34.8668374Z 184 |     def add(self, content: str, user_id: str, **kwargs) -> Any:
2025-06-06T03:33:34.8668503Z     |                                                 ^^^^^^ ARG002
2025-06-06T03:33:34.8668689Z 185 |         """
2025-06-06T03:33:34.8668834Z 186 |         Add new content to vector DB.
2025-06-06T03:33:34.8668906Z     |
2025-06-06T03:33:34.8668913Z 
2025-06-06T03:33:34.8669368Z interfaces/knowledge_interfaces.py:184:60: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `add`
2025-06-06T03:33:34.8669436Z     |
2025-06-06T03:33:34.8669725Z 182 |         return [{"source": "vector_rag", "content": f"Stub vector match for '{query}'"}]
2025-06-06T03:33:34.8669792Z 183 |
2025-06-06T03:33:34.8670009Z 184 |     def add(self, content: str, user_id: str, **kwargs) -> Any:
2025-06-06T03:33:34.8670148Z     |                                                            ^^^ ANN401
2025-06-06T03:33:34.8670232Z 185 |         """
2025-06-06T03:33:34.8670375Z 186 |         Add new content to vector DB.
2025-06-06T03:33:34.8670445Z     |
2025-06-06T03:33:34.8670453Z 
2025-06-06T03:33:34.8670774Z interfaces/knowledge_interfaces.py:185:9: D200 One-line docstring should fit on one line
2025-06-06T03:33:34.8670848Z     |
2025-06-06T03:33:34.8671069Z 184 |       def add(self, content: str, user_id: str, **kwargs) -> Any:
2025-06-06T03:33:34.8671152Z 185 | /         """
2025-06-06T03:33:34.8671300Z 186 | |         Add new content to vector DB.
2025-06-06T03:33:34.8671388Z 187 | |         """
2025-06-06T03:33:34.8671467Z     | |___________^ D200
2025-06-06T03:33:34.8671647Z 188 |           # Stub: Replace with actual vector DB add
2025-06-06T03:33:34.8671740Z 189 |           # Example:
2025-06-06T03:33:34.8671816Z     |
2025-06-06T03:33:34.8671925Z     = help: Reformat to one line
2025-06-06T03:33:34.8671932Z 
2025-06-06T03:33:34.8672209Z interfaces/knowledge_interfaces.py:190:9: ERA001 Found commented-out code
2025-06-06T03:33:34.8672276Z     |
2025-06-06T03:33:34.8672456Z 188 |         # Stub: Replace with actual vector DB add
2025-06-06T03:33:34.8672545Z 189 |         # Example:
2025-06-06T03:33:34.8672777Z 190 |         # return self.vector_client.add(content, user_id, **kwargs)
2025-06-06T03:33:34.8672924Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ERA001
2025-06-06T03:33:34.8673187Z 191 |         return {"source": "vector_rag", "status": "added", "content": content}
2025-06-06T03:33:34.8673255Z     |
2025-06-06T03:33:34.8673378Z     = help: Remove commented-out code
2025-06-06T03:33:34.8673385Z 
2025-06-06T03:33:34.8673707Z interfaces/knowledge_interfaces.py:195:5: D200 One-line docstring should fit on one line
2025-06-06T03:33:34.8673777Z     |
2025-06-06T03:33:34.8673916Z 194 |   class KnowledgeStrategy(Enum):
2025-06-06T03:33:34.8673989Z 195 | /     """
2025-06-06T03:33:34.8674207Z 196 | |     Enum for strategy options in KnowledgeIntegrationLayer.
2025-06-06T03:33:34.8674287Z 197 | |     """
2025-06-06T03:33:34.8674363Z     | |_______^ D200
2025-06-06T03:33:34.8674440Z 198 |
2025-06-06T03:33:34.8674562Z 199 |       FALLBACK = "fallback"
2025-06-06T03:33:34.8674633Z     |
2025-06-06T03:33:34.8674740Z     = help: Reformat to one line
2025-06-06T03:33:34.8674752Z 
2025-06-06T03:33:34.8675169Z interfaces/knowledge_interfaces.py:213:9: ANN204 Missing return type annotation for special method `__init__`
2025-06-06T03:33:34.8675242Z     |
2025-06-06T03:33:34.8675311Z 211 |     """
2025-06-06T03:33:34.8675379Z 212 |
2025-06-06T03:33:34.8675477Z 213 |     def __init__(
2025-06-06T03:33:34.8675557Z     |         ^^^^^^^^ ANN204
2025-06-06T03:33:34.8675649Z 214 |         self,
2025-06-06T03:33:34.8675804Z 215 |         sources: List[KnowledgeSource],
2025-06-06T03:33:34.8675876Z     |
2025-06-06T03:33:34.8676008Z     = help: Add return type annotation: `None`
2025-06-06T03:33:34.8676021Z 
2025-06-06T03:33:34.8676449Z interfaces/knowledge_interfaces.py:215:18: FA100 Add `from __future__ import annotations` to simplify `typing.List`
2025-06-06T03:33:34.8676609Z     |
2025-06-06T03:33:34.8676698Z 213 |     def __init__(
2025-06-06T03:33:34.8676783Z 214 |         self,
2025-06-06T03:33:34.8676931Z 215 |         sources: List[KnowledgeSource],
2025-06-06T03:33:34.8677103Z     |                  ^^^^ FA100
2025-06-06T03:33:34.8677450Z 216 |         strategy: "KnowledgeStrategy" = KnowledgeStrategy.FALLBACK,
2025-06-06T03:33:34.8677527Z 217 |     ):
2025-06-06T03:33:34.8677594Z     |
2025-06-06T03:33:34.8677601Z 
2025-06-06T03:33:34.8677996Z interfaces/knowledge_interfaces.py:218:9: D205 1 blank line required between summary line and description
2025-06-06T03:33:34.8678064Z     |
2025-06-06T03:33:34.8678316Z 216 |           strategy: "KnowledgeStrategy" = KnowledgeStrategy.FALLBACK,
2025-06-06T03:33:34.8678387Z 217 |       ):
2025-06-06T03:33:34.8678473Z 218 | /         """
2025-06-06T03:33:34.8678558Z 219 | |         Args:
2025-06-06T03:33:34.8678772Z 220 | |             sources: List of KnowledgeSource implementations.
2025-06-06T03:33:34.8678948Z 221 | |             strategy: Aggregation logic. One of:
2025-06-06T03:33:34.8679293Z 222 | |                 - KnowledgeStrategy.FALLBACK: Try sources in order, return first with results.
2025-06-06T03:33:34.8679582Z 223 | |                 - KnowledgeStrategy.AGGREGATE: Query all sources and merge results.
2025-06-06T03:33:34.8679655Z 224 | |
2025-06-06T03:33:34.8679734Z 225 | |         """
2025-06-06T03:33:34.8679816Z     | |___________^ D205
2025-06-06T03:33:34.8679941Z 226 |           self.sources = sources
2025-06-06T03:33:34.8680089Z 227 |           if isinstance(strategy, str):
2025-06-06T03:33:34.8680155Z     |
2025-06-06T03:33:34.8680272Z     = help: Insert single blank line
2025-06-06T03:33:34.8680279Z 
2025-06-06T03:33:34.8680991Z interfaces/knowledge_interfaces.py:232:17: B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
2025-06-06T03:33:34.8681068Z     |
2025-06-06T03:33:34.8681285Z 230 |                 self.strategy = KnowledgeStrategy(strategy.lower())
2025-06-06T03:33:34.8681418Z 231 |             except ValueError:
2025-06-06T03:33:34.8681668Z 232 |                 raise ValueError(f"Unknown integration strategy: {strategy}")
2025-06-06T03:33:34.8681825Z     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ B904
2025-06-06T03:33:34.8682017Z 233 |         elif isinstance(strategy, KnowledgeStrategy):
2025-06-06T03:33:34.8682163Z 234 |             self.strategy = strategy
2025-06-06T03:33:34.8682231Z     |
2025-06-06T03:33:34.8682244Z 
2025-06-06T03:33:34.8682651Z interfaces/knowledge_interfaces.py:232:23: TRY003 Avoid specifying long messages outside the exception class
2025-06-06T03:33:34.8682725Z     |
2025-06-06T03:33:34.8682941Z 230 |                 self.strategy = KnowledgeStrategy(strategy.lower())
2025-06-06T03:33:34.8683071Z 231 |             except ValueError:
2025-06-06T03:33:34.8683316Z 232 |                 raise ValueError(f"Unknown integration strategy: {strategy}")
2025-06-06T03:33:34.8683475Z     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY003
2025-06-06T03:33:34.8683661Z 233 |         elif isinstance(strategy, KnowledgeStrategy):
2025-06-06T03:33:34.8683804Z 234 |             self.strategy = strategy
2025-06-06T03:33:34.8683872Z     |
2025-06-06T03:33:34.8683879Z 
2025-06-06T03:33:34.8684326Z interfaces/knowledge_interfaces.py:232:34: EM102 Exception must not use an f-string literal, assign to variable first
2025-06-06T03:33:34.8684395Z     |
2025-06-06T03:33:34.8684613Z 230 |                 self.strategy = KnowledgeStrategy(strategy.lower())
2025-06-06T03:33:34.8684734Z 231 |             except ValueError:
2025-06-06T03:33:34.8684980Z 232 |                 raise ValueError(f"Unknown integration strategy: {strategy}")
2025-06-06T03:33:34.8685123Z     |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ EM102
2025-06-06T03:33:34.8685310Z 233 |         elif isinstance(strategy, KnowledgeStrategy):
2025-06-06T03:33:34.8685571Z 234 |             self.strategy = strategy
2025-06-06T03:33:34.8685643Z     |
2025-06-06T03:33:34.8685805Z     = help: Assign to variable; remove f-string literal
2025-06-06T03:33:34.8685813Z 
2025-06-06T03:33:34.8686328Z interfaces/knowledge_interfaces.py:236:19: TRY003 Avoid specifying long messages outside the exception class
2025-06-06T03:33:34.8686400Z     |
2025-06-06T03:33:34.8686547Z 234 |             self.strategy = strategy
2025-06-06T03:33:34.8686631Z 235 |         else:
2025-06-06T03:33:34.8686880Z 236 |             raise TypeError(f"Invalid strategy type: {type(strategy)}")
2025-06-06T03:33:34.8687026Z     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY003
2025-06-06T03:33:34.8687098Z 237 |
2025-06-06T03:33:34.8687485Z 238 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T03:33:34.8687557Z     |
2025-06-06T03:33:34.8687564Z 
2025-06-06T03:33:34.8688007Z interfaces/knowledge_interfaces.py:236:29: EM102 Exception must not use an f-string literal, assign to variable first
2025-06-06T03:33:34.8688080Z     |
2025-06-06T03:33:34.8688224Z 234 |             self.strategy = strategy
2025-06-06T03:33:34.8688312Z 235 |         else:
2025-06-06T03:33:34.8688552Z 236 |             raise TypeError(f"Invalid strategy type: {type(strategy)}")
2025-06-06T03:33:34.8688696Z     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ EM102
2025-06-06T03:33:34.8688765Z 237 |
2025-06-06T03:33:34.8689041Z 238 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T03:33:34.8689113Z     |
2025-06-06T03:33:34.8689262Z     = help: Assign to variable; remove f-string literal
2025-06-06T03:33:34.8689270Z 
2025-06-06T03:33:34.8689601Z interfaces/knowledge_interfaces.py:238:48: ANN003 Missing type annotation for `**kwargs`
2025-06-06T03:33:34.8689668Z     |
2025-06-06T03:33:34.8689914Z 236 |             raise TypeError(f"Invalid strategy type: {type(strategy)}")
2025-06-06T03:33:34.8689984Z 237 |
2025-06-06T03:33:34.8690260Z 238 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T03:33:34.8690397Z     |                                                ^^^^^^^^ ANN003
2025-06-06T03:33:34.8690483Z 239 |         """
2025-06-06T03:33:34.8690682Z 240 |         Search using the configured integration strategy.
2025-06-06T03:33:34.8690756Z     |
2025-06-06T03:33:34.8690763Z 
2025-06-06T03:33:34.8691187Z interfaces/knowledge_interfaces.py:238:61: FA100 Add `from __future__ import annotations` to simplify `typing.List`
2025-06-06T03:33:34.8691260Z     |
2025-06-06T03:33:34.8691499Z 236 |             raise TypeError(f"Invalid strategy type: {type(strategy)}")
2025-06-06T03:33:34.8691564Z 237 |
2025-06-06T03:33:34.8691840Z 238 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T03:33:34.8691975Z     |                                                             ^^^^ FA100
2025-06-06T03:33:34.8692058Z 239 |         """
2025-06-06T03:33:34.8692259Z 240 |         Search using the configured integration strategy.
2025-06-06T03:33:34.8692331Z     |
2025-06-06T03:33:34.8692339Z 
2025-06-06T03:33:34.8692757Z interfaces/knowledge_interfaces.py:238:66: FA100 Add `from __future__ import annotations` to simplify `typing.Dict`
2025-06-06T03:33:34.8692832Z     |
2025-06-06T03:33:34.8693069Z 236 |             raise TypeError(f"Invalid strategy type: {type(strategy)}")
2025-06-06T03:33:34.8693145Z 237 |
2025-06-06T03:33:34.8693422Z 238 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T03:33:34.8693572Z     |                                                                  ^^^^ FA100
2025-06-06T03:33:34.8693654Z 239 |         """
2025-06-06T03:33:34.8693853Z 240 |         Search using the configured integration strategy.
2025-06-06T03:33:34.8693923Z     |
2025-06-06T03:33:34.8693932Z 
2025-06-06T03:33:34.8694352Z interfaces/knowledge_interfaces.py:253:25: FA100 Add `from __future__ import annotations` to simplify `typing.List`
2025-06-06T03:33:34.8694543Z     |
2025-06-06T03:33:34.8694644Z 251 |             return []
2025-06-06T03:33:34.8694848Z 252 |         if self.strategy == KnowledgeStrategy.AGGREGATE:
2025-06-06T03:33:34.8695114Z 253 |             aggregated: List[Dict[str, Any]] = []
2025-06-06T03:33:34.8695228Z     |                         ^^^^ FA100
2025-06-06T03:33:34.8695384Z 254 |             for source in self.sources:
2025-06-06T03:33:34.8695632Z 255 |                 aggregated.extend(source.search(query, user_id, **kwargs))
2025-06-06T03:33:34.8695704Z     |
2025-06-06T03:33:34.8695712Z 
2025-06-06T03:33:34.8696122Z interfaces/knowledge_interfaces.py:253:30: FA100 Add `from __future__ import annotations` to simplify `typing.Dict`
2025-06-06T03:33:34.8696194Z     |
2025-06-06T03:33:34.8696288Z 251 |             return []
2025-06-06T03:33:34.8696492Z 252 |         if self.strategy == KnowledgeStrategy.AGGREGATE:
2025-06-06T03:33:34.8696654Z 253 |             aggregated: List[Dict[str, Any]] = []
2025-06-06T03:33:34.8696774Z     |                              ^^^^ FA100
2025-06-06T03:33:34.8696914Z 254 |             for source in self.sources:
2025-06-06T03:33:34.8697163Z 255 |                 aggregated.extend(source.search(query, user_id, **kwargs))
2025-06-06T03:33:34.8697338Z     |
2025-06-06T03:33:34.8697347Z 
2025-06-06T03:33:34.8697758Z interfaces/knowledge_interfaces.py:257:15: TRY003 Avoid specifying long messages outside the exception class
2025-06-06T03:33:34.8697830Z     |
2025-06-06T03:33:34.8698068Z 255 |                 aggregated.extend(source.search(query, user_id, **kwargs))
2025-06-06T03:33:34.8698195Z 256 |             return aggregated
2025-06-06T03:33:34.8698455Z 257 |         raise ValueError(f"Unknown integration strategy: {self.strategy}")
2025-06-06T03:33:34.8698604Z     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY003
2025-06-06T03:33:34.8698671Z 258 |
2025-06-06T03:33:34.8698912Z 259 |     def add(self, content: str, user_id: str, **kwargs) -> List[Any]:
2025-06-06T03:33:34.8698983Z     |
2025-06-06T03:33:34.8698991Z 
2025-06-06T03:33:34.8699427Z interfaces/knowledge_interfaces.py:257:26: EM102 Exception must not use an f-string literal, assign to variable first
2025-06-06T03:33:34.8699496Z     |
2025-06-06T03:33:34.8699736Z 255 |                 aggregated.extend(source.search(query, user_id, **kwargs))
2025-06-06T03:33:34.8699854Z 256 |             return aggregated
2025-06-06T03:33:34.8700125Z 257 |         raise ValueError(f"Unknown integration strategy: {self.strategy}")
2025-06-06T03:33:34.8700267Z     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ EM102
2025-06-06T03:33:34.8700339Z 258 |
2025-06-06T03:33:34.8700571Z 259 |     def add(self, content: str, user_id: str, **kwargs) -> List[Any]:
2025-06-06T03:33:34.8700642Z     |
2025-06-06T03:33:34.8700794Z     = help: Assign to variable; remove f-string literal
2025-06-06T03:33:34.8700803Z 
2025-06-06T03:33:34.8701128Z interfaces/knowledge_interfaces.py:259:47: ANN003 Missing type annotation for `**kwargs`
2025-06-06T03:33:34.8701198Z     |
2025-06-06T03:33:34.8701455Z 257 |         raise ValueError(f"Unknown integration strategy: {self.strategy}")
2025-06-06T03:33:34.8701526Z 258 |
2025-06-06T03:33:34.8701761Z 259 |     def add(self, content: str, user_id: str, **kwargs) -> List[Any]:
2025-06-06T03:33:34.8701902Z     |                                               ^^^^^^^^ ANN003
2025-06-06T03:33:34.8701985Z 260 |         """
2025-06-06T03:33:34.8702130Z 261 |         Add content to all sources.
2025-06-06T03:33:34.8702197Z     |
2025-06-06T03:33:34.8702204Z 
2025-06-06T03:33:34.8702623Z interfaces/knowledge_interfaces.py:259:60: FA100 Add `from __future__ import annotations` to simplify `typing.List`
2025-06-06T03:33:34.8702690Z     |
2025-06-06T03:33:34.8702951Z 257 |         raise ValueError(f"Unknown integration strategy: {self.strategy}")
2025-06-06T03:33:34.8703018Z 258 |
2025-06-06T03:33:34.8703249Z 259 |     def add(self, content: str, user_id: str, **kwargs) -> List[Any]:
2025-06-06T03:33:34.8703505Z     |                                                            ^^^^ FA100
2025-06-06T03:33:34.8703591Z 260 |         """
2025-06-06T03:33:34.8703870Z 261 |         Add content to all sources.
2025-06-06T03:33:34.8703945Z     |
2025-06-06T03:33:34.8703953Z 
2025-06-06T03:33:34.8704344Z interfaces/knowledge_interfaces.py:269:13: PERF401 Use a list comprehension to create a transformed list
2025-06-06T03:33:34.8704417Z     |
2025-06-06T03:33:34.8704512Z 267 |         results = []
2025-06-06T03:33:34.8704650Z 268 |         for source in self.sources:
2025-06-06T03:33:34.8704874Z 269 |             results.append(source.add(content, user_id, **kwargs))
2025-06-06T03:33:34.8705018Z     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PERF401
2025-06-06T03:33:34.8705114Z 270 |         return results
2025-06-06T03:33:34.8705187Z     |
2025-06-06T03:33:34.8705345Z     = help: Replace for loop with list comprehension
2025-06-06T03:33:34.8705356Z 
2025-06-06T03:33:34.8705717Z main_agents.py:179:40: FA100 Add `from __future__ import annotations` to simplify `typing.Optional`
2025-06-06T03:33:34.8705786Z     |
2025-06-06T03:33:34.8705891Z 178 | def create_agents(
2025-06-06T03:33:34.8706104Z 179 |     use_memory: bool = False, user_id: Optional[str] = None
2025-06-06T03:33:34.8706237Z     |                                        ^^^^^^^^ FA100
2025-06-06T03:33:34.8706361Z 180 | ) -> tuple[Agent, Agent]:
2025-06-06T03:33:34.8706438Z 181 |     """
2025-06-06T03:33:34.8706505Z     |
2025-06-06T03:33:34.8706512Z 
2025-06-06T03:33:34.8706874Z main_agents.py:180:6: FA102 Missing `from __future__ import annotations`, but uses PEP 585 collection
2025-06-06T03:33:34.8706942Z     |
2025-06-06T03:33:34.8707045Z 178 | def create_agents(
2025-06-06T03:33:34.8707380Z 179 |     use_memory: bool = False, user_id: Optional[str] = None
2025-06-06T03:33:34.8707499Z 180 | ) -> tuple[Agent, Agent]:
2025-06-06T03:33:34.8707599Z     |      ^^^^^^^^^^^^^^^^^^^ FA102
2025-06-06T03:33:34.8707672Z 181 |     """
2025-06-06T03:33:34.8707952Z 182 |     Create and return a pair of agents, optionally using memory enhancement.
2025-06-06T03:33:34.8708020Z     |
2025-06-06T03:33:34.8708174Z     = help: Add `from __future__ import annotations`
2025-06-06T03:33:34.8708181Z 
2025-06-06T03:33:34.8708384Z main_agents.py:197:21: G004 Logging statement uses f-string
2025-06-06T03:33:34.8708455Z     |
2025-06-06T03:33:34.8708697Z 195 |             logger.warning("No user_id provided, using 'default_user'")
2025-06-06T03:33:34.8708769Z 196 |
2025-06-06T03:33:34.8709048Z 197 |         logger.info(f"Creating memory-enhanced agents with user_id: {user_id}")
2025-06-06T03:33:34.8709202Z     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T03:33:34.8709409Z 198 |         data_gatherer = MemoryEnhancedDataGathererAgent(
2025-06-06T03:33:34.8709579Z 199 |             name="data_gatherer", user_id=user_id
2025-06-06T03:33:34.8709650Z     |
2025-06-06T03:33:34.8709664Z 
2025-06-06T03:33:34.8710043Z main_crewai_agents.py:49:40: FA100 Add `from __future__ import annotations` to simplify `typing.Optional`
2025-06-06T03:33:34.8710111Z    |
2025-06-06T03:33:34.8710213Z 48 | def create_team(
2025-06-06T03:33:34.8710423Z 49 |     use_memory: bool = False, user_id: Optional[str] = None
2025-06-06T03:33:34.8710558Z    |                                        ^^^^^^^^ FA100
2025-06-06T03:33:34.8710653Z 50 | ) -> TeamProtocol:
2025-06-06T03:33:34.8710730Z 51 |     """
2025-06-06T03:33:34.8710797Z    |
2025-06-06T03:33:34.8710805Z 
2025-06-06T03:33:34.8711042Z main_crewai_agents.py:67:21: G004 Logging statement uses f-string
2025-06-06T03:33:34.8711110Z    |
2025-06-06T03:33:34.8711354Z 65 |             logger.warning("No user_id provided, using 'default_user'")
2025-06-06T03:33:34.8711421Z 66 |
2025-06-06T03:33:34.8711696Z 67 |         logger.info(f"Creating memory-enhanced team with user_id: {user_id}")
2025-06-06T03:33:34.8711845Z    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T03:33:34.8712192Z 68 |         team = MemoryEnhancedCrewAIAgentTeam(user_id=user_id)
2025-06-06T03:33:34.8712263Z    |
2025-06-06T03:33:34.8712273Z 
2025-06-06T03:33:34.8712757Z main_crewai_agents.py:143:12: RET504 Unnecessary assignment to `reporting_team` before `return` statement
2025-06-06T03:33:34.8712833Z     |
2025-06-06T03:33:34.8713031Z 141 |         tasks=[task_collect, task_analyze, task_report],
2025-06-06T03:33:34.8713114Z 142 |     )
2025-06-06T03:33:34.8713255Z 143 |     return reporting_team
2025-06-06T03:33:34.8713361Z     |            ^^^^^^^^^^^^^^ RET504
2025-06-06T03:33:34.8713429Z     |
2025-06-06T03:33:34.8713557Z     = help: Remove unnecessary assignment
2025-06-06T03:33:34.8713565Z 
2025-06-06T03:33:34.8713819Z main_crewai_agents.py:155:9: PLR1722 Use `sys.exit()` instead of `exit`
2025-06-06T03:33:34.8713890Z     |
2025-06-06T03:33:34.8714016Z 153 |     if not CREWAI_AVAILABLE:
2025-06-06T03:33:34.8714330Z 154 |         logger.error("CrewAI is not installed. Install with: pip install '.[agents]'")
2025-06-06T03:33:34.8714422Z 155 |         exit(1)
2025-06-06T03:33:34.8714510Z     |         ^^^^ PLR1722
2025-06-06T03:33:34.8714577Z 156 |
2025-06-06T03:33:34.8714706Z 157 |     if not MEM0_AVAILABLE:
2025-06-06T03:33:34.8714775Z     |
2025-06-06T03:33:34.8714907Z     = help: Replace `exit` with `sys.exit()`
2025-06-06T03:33:34.8714915Z 
2025-06-06T03:33:34.8715151Z main_crewai_agents.py:170:21: G004 Logging statement uses f-string
2025-06-06T03:33:34.8715225Z     |
2025-06-06T03:33:34.8715346Z 168 |         result = team.run()
2025-06-06T03:33:34.8715568Z 169 |         logger.info("CrewAI workflow completed successfully")
2025-06-06T03:33:34.8715719Z 170 |         logger.info(f"Result: {result}")
2025-06-06T03:33:34.8715842Z     |                     ^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T03:33:34.8715962Z 171 |     except Exception as e:
2025-06-06T03:33:34.8716174Z 172 |         logger.error(f"Error running CrewAI workflow: {e}")
2025-06-06T03:33:34.8716246Z     |
2025-06-06T03:33:34.8716253Z 
2025-06-06T03:33:34.8716536Z main_crewai_agents.py:171:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T03:33:34.8716603Z     |
2025-06-06T03:33:34.8716820Z 169 |         logger.info("CrewAI workflow completed successfully")
2025-06-06T03:33:34.8716966Z 170 |         logger.info(f"Result: {result}")
2025-06-06T03:33:34.8717090Z 171 |     except Exception as e:
2025-06-06T03:33:34.8717187Z     |            ^^^^^^^^^ BLE001
2025-06-06T03:33:34.8717513Z 172 |         logger.error(f"Error running CrewAI workflow: {e}")
2025-06-06T03:33:34.8717583Z     |
2025-06-06T03:33:34.8717590Z 
2025-06-06T03:33:34.8717902Z main_crewai_agents.py:172:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T03:33:34.8717969Z     |
2025-06-06T03:33:34.8718121Z 170 |         logger.info(f"Result: {result}")
2025-06-06T03:33:34.8718239Z 171 |     except Exception as e:
2025-06-06T03:33:34.8718444Z 172 |         logger.error(f"Error running CrewAI workflow: {e}")
2025-06-06T03:33:34.8718585Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T03:33:34.8718657Z 173 |
2025-06-06T03:33:34.8718745Z 174 | # Next steps:
2025-06-06T03:33:34.8718823Z     |
2025-06-06T03:33:34.8718937Z     = help: Replace with `exception`
2025-06-06T03:33:34.8718950Z 
2025-06-06T03:33:34.8719180Z main_crewai_agents.py:172:22: G004 Logging statement uses f-string
2025-06-06T03:33:34.8719253Z     |
2025-06-06T03:33:34.8719399Z 170 |         logger.info(f"Result: {result}")
2025-06-06T03:33:34.8719521Z 171 |     except Exception as e:
2025-06-06T03:33:34.8719716Z 172 |         logger.error(f"Error running CrewAI workflow: {e}")
2025-06-06T03:33:34.8719850Z     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T03:33:34.8719917Z 173 |
2025-06-06T03:33:34.8720008Z 174 | # Next steps:
2025-06-06T03:33:34.8720075Z     |
2025-06-06T03:33:34.8720082Z 
2025-06-06T03:33:34.8720353Z main_health_check.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8720546Z   |
2025-06-06T03:33:34.8720649Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8720746Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8720917Z 2 | """
2025-06-06T03:33:34.8721014Z 3 | health_check.py.
2025-06-06T03:33:34.8721084Z   |
2025-06-06T03:33:34.8721092Z 
2025-06-06T03:33:34.8721319Z manage.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8721390Z   |
2025-06-06T03:33:34.8721486Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8721589Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8721658Z 2 | """
2025-06-06T03:33:34.8721849Z 3 | Unified project management script for developers.
2025-06-06T03:33:34.8721916Z   |
2025-06-06T03:33:34.8721923Z 
2025-06-06T03:33:34.8722307Z mock_adk/adk/agent.py:14:28: FA100 Add `from __future__ import annotations` to simplify `typing.Optional`
2025-06-06T03:33:34.8722374Z    |
2025-06-06T03:33:34.8722512Z 12 |         """Initialize an agent."""
2025-06-06T03:33:34.8722614Z 13 |         self.name = name
2025-06-06T03:33:34.8722829Z 14 |         self.communicator: Optional[AgentCommunicator] = None
2025-06-06T03:33:34.8722941Z    |                            ^^^^^^^^ FA100
2025-06-06T03:33:34.8723018Z 15 |
2025-06-06T03:33:34.8723285Z 16 |     def set_communicator(self, communicator: AgentCommunicator) -> None:
2025-06-06T03:33:34.8723357Z    |
2025-06-06T03:33:34.8723364Z 
2025-06-06T03:33:34.8723608Z mock_adk/adk/agent.py:23:30: ARG002 Unused method argument: `message`
2025-06-06T03:33:34.8723682Z    |
2025-06-06T03:33:34.8723862Z 21 |         """Start the agent. Override in subclasses."""
2025-06-06T03:33:34.8723938Z 22 |
2025-06-06T03:33:34.8724178Z 23 |     def handle_message(self, message: Message) -> Optional[Message]:
2025-06-06T03:33:34.8724299Z    |                              ^^^^^^^ ARG002
2025-06-06T03:33:34.8724507Z 24 |         """Handle a received message. Override in subclasses."""
2025-06-06T03:33:34.8724605Z 25 |         return None
2025-06-06T03:33:34.8724677Z    |
2025-06-06T03:33:34.8724684Z 
2025-06-06T03:33:34.8725059Z mock_adk/adk/agent.py:23:51: FA100 Add `from __future__ import annotations` to simplify `typing.Optional`
2025-06-06T03:33:34.8725130Z    |
2025-06-06T03:33:34.8725314Z 21 |         """Start the agent. Override in subclasses."""
2025-06-06T03:33:34.8725380Z 22 |
2025-06-06T03:33:34.8725624Z 23 |     def handle_message(self, message: Message) -> Optional[Message]:
2025-06-06T03:33:34.8725752Z    |                                                   ^^^^^^^^ FA100
2025-06-06T03:33:34.8725957Z 24 |         """Handle a received message. Override in subclasses."""
2025-06-06T03:33:34.8726049Z 25 |         return None
2025-06-06T03:33:34.8726114Z    |
2025-06-06T03:33:34.8726121Z 
2025-06-06T03:33:34.8726523Z mock_adk/adk/communication.py:12:14: FA100 Add `from __future__ import annotations` to simplify `typing.Dict`
2025-06-06T03:33:34.8726591Z    |
2025-06-06T03:33:34.8726682Z 11 |     type: str
2025-06-06T03:33:34.8726808Z 12 |     payload: Dict[str, Any]
2025-06-06T03:33:34.8726892Z    |              ^^^^ FA100
2025-06-06T03:33:34.8726979Z 13 |     sender: str
2025-06-06T03:33:34.8727051Z    |
2025-06-06T03:33:34.8727059Z 
2025-06-06T03:33:34.8727550Z mock_adk/adk/communication.py:21:24: FA100 Add `from __future__ import annotations` to simplify `typing.List`
2025-06-06T03:33:34.8727624Z    |
2025-06-06T03:33:34.8727750Z 19 |     def __init__(self) -> None:
2025-06-06T03:33:34.8727897Z 20 |         """Initialize communicator."""
2025-06-06T03:33:34.8728044Z 21 |         self.messages: List[Message] = []
2025-06-06T03:33:34.8728153Z    |                        ^^^^ FA100
2025-06-06T03:33:34.8728220Z 22 |
2025-06-06T03:33:34.8728411Z 23 |     def send_message(self, message: Message) -> None:
2025-06-06T03:33:34.8728476Z    |
2025-06-06T03:33:34.8728483Z 
2025-06-06T03:33:34.8728896Z mock_adk/adk/communication.py:27:34: FA100 Add `from __future__ import annotations` to simplify `typing.Optional`
2025-06-06T03:33:34.8728964Z    |
2025-06-06T03:33:34.8729237Z 25 |         self.messages.append(message)
2025-06-06T03:33:34.8729304Z 26 |
2025-06-06T03:33:34.8729492Z 27 |     def receive_message(self) -> Optional[Message]:
2025-06-06T03:33:34.8729710Z    |                                  ^^^^^^^^ FA100
2025-06-06T03:33:34.8729882Z 28 |         """Receive a message (pop from list)."""
2025-06-06T03:33:34.8730098Z 29 |         return self.messages.pop(0) if self.messages else None
2025-06-06T03:33:34.8730170Z    |
2025-06-06T03:33:34.8730177Z 
2025-06-06T03:33:34.8730530Z mock_adk/adk/memory.py:11:23: FA100 Add `from __future__ import annotations` to simplify `typing.Dict`
2025-06-06T03:33:34.8730602Z    |
2025-06-06T03:33:34.8730711Z  9 |     def __init__(self) -> None:
2025-06-06T03:33:34.8730842Z 10 |         """Initialize memory."""
2025-06-06T03:33:34.8730999Z 11 |         self.storage: Dict[str, List[Any]] = {}
2025-06-06T03:33:34.8731107Z    |                       ^^^^ FA100
2025-06-06T03:33:34.8731174Z 12 |
2025-06-06T03:33:34.8731359Z 13 |     def store(self, key: str, value: Any) -> None:
2025-06-06T03:33:34.8731425Z    |
2025-06-06T03:33:34.8731432Z 
2025-06-06T03:33:34.8731792Z mock_adk/adk/memory.py:11:33: FA100 Add `from __future__ import annotations` to simplify `typing.List`
2025-06-06T03:33:34.8731861Z    |
2025-06-06T03:33:34.8731974Z  9 |     def __init__(self) -> None:
2025-06-06T03:33:34.8732099Z 10 |         """Initialize memory."""
2025-06-06T03:33:34.8732259Z 11 |         self.storage: Dict[str, List[Any]] = {}
2025-06-06T03:33:34.8732374Z    |                                 ^^^^ FA100
2025-06-06T03:33:34.8732447Z 12 |
2025-06-06T03:33:34.8732617Z 13 |     def store(self, key: str, value: Any) -> None:
2025-06-06T03:33:34.8732689Z    |
2025-06-06T03:33:34.8732696Z 
2025-06-06T03:33:34.8733085Z mock_adk/adk/memory.py:13:38: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `value`
2025-06-06T03:33:34.8733151Z    |
2025-06-06T03:33:34.8733310Z 11 |         self.storage: Dict[str, List[Any]] = {}
2025-06-06T03:33:34.8733381Z 12 |
2025-06-06T03:33:34.8733552Z 13 |     def store(self, key: str, value: Any) -> None:
2025-06-06T03:33:34.8733663Z    |                                      ^^^ ANN401
2025-06-06T03:33:34.8733792Z 14 |         """Store a value."""
2025-06-06T03:33:34.8733933Z 15 |         if key not in self.storage:
2025-06-06T03:33:34.8734006Z    |
2025-06-06T03:33:34.8734013Z 
2025-06-06T03:33:34.8734383Z mock_adk/adk/memory.py:19:37: FA100 Add `from __future__ import annotations` to simplify `typing.List`
2025-06-06T03:33:34.8734458Z    |
2025-06-06T03:33:34.8734608Z 17 |         self.storage[key].append(value)
2025-06-06T03:33:34.8734679Z 18 |
2025-06-06T03:33:34.8734847Z 19 |     def retrieve(self, key: str) -> List[Any]:
2025-06-06T03:33:34.8734970Z    |                                     ^^^^ FA100
2025-06-06T03:33:34.8735151Z 20 |         """Retrieve values for a key."""
2025-06-06T03:33:34.8735300Z 21 |         return self.storage.get(key, [])
2025-06-06T03:33:34.8735365Z    |
2025-06-06T03:33:34.8735376Z 
2025-06-06T03:33:34.8735765Z mock_adk/adk/skill.py:9:26: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`
2025-06-06T03:33:34.8735830Z    |
2025-06-06T03:33:34.8735948Z  7 |     """Base skill class."""
2025-06-06T03:33:34.8736015Z  8 |
2025-06-06T03:33:34.8736181Z  9 |     def run(self, *args: Any, **kwargs: Any) -> Any:
2025-06-06T03:33:34.8736284Z    |                          ^^^ ANN401
2025-06-06T03:33:34.8736476Z 10 |         """Execute the skill. Override in subclasses."""
2025-06-06T03:33:34.8736543Z    |
2025-06-06T03:33:34.8736550Z 
2025-06-06T03:33:34.8736940Z mock_adk/adk/skill.py:9:41: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`
2025-06-06T03:33:34.8737007Z    |
2025-06-06T03:33:34.8737119Z  7 |     """Base skill class."""
2025-06-06T03:33:34.8737186Z  8 |
2025-06-06T03:33:34.8737439Z  9 |     def run(self, *args: Any, **kwargs: Any) -> Any:
2025-06-06T03:33:34.8737560Z    |                                         ^^^ ANN401
2025-06-06T03:33:34.8737874Z 10 |         """Execute the skill. Override in subclasses."""
2025-06-06T03:33:34.8737941Z    |
2025-06-06T03:33:34.8737954Z 
2025-06-06T03:33:34.8738423Z mock_adk/adk/skill.py:9:49: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `run`
2025-06-06T03:33:34.8738501Z    |
2025-06-06T03:33:34.8738606Z  7 |     """Base skill class."""
2025-06-06T03:33:34.8738678Z  8 |
2025-06-06T03:33:34.8738839Z  9 |     def run(self, *args: Any, **kwargs: Any) -> Any:
2025-06-06T03:33:34.8738973Z    |                                                 ^^^ ANN401
2025-06-06T03:33:34.8739155Z 10 |         """Execute the skill. Override in subclasses."""
2025-06-06T03:33:34.8739227Z    |
2025-06-06T03:33:34.8739234Z 
2025-06-06T03:33:34.8739599Z mock_crewai/agent.py:33:34: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `task`
2025-06-06T03:33:34.8739670Z    |
2025-06-06T03:33:34.8739788Z 31 |         self.kwargs = kwargs
2025-06-06T03:33:34.8739859Z 32 |
2025-06-06T03:33:34.8740027Z 33 |     def execute_task(self, task: Any) -> str:
2025-06-06T03:33:34.8740145Z    |                                  ^^^ ANN401
2025-06-06T03:33:34.8740217Z 34 |         """
2025-06-06T03:33:34.8740371Z 35 |         Execute a task and return a result.
2025-06-06T03:33:34.8740439Z    |
2025-06-06T03:33:34.8740446Z 
2025-06-06T03:33:34.8740759Z mock_crewai/types.py:1:1: A005 Module `types` shadows a Python standard-library module
2025-06-06T03:33:34.8741028Z run_bandit_scan.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8741103Z   |
2025-06-06T03:33:34.8741202Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8741306Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8741375Z 2 | """
2025-06-06T03:33:34.8741588Z 3 | Run Bandit security scan with appropriate configuration.
2025-06-06T03:33:34.8741655Z   |
2025-06-06T03:33:34.8741662Z 
2025-06-06T03:33:34.8741970Z run_bandit_scan.py:71:14: PTH123 `open()` should be replaced by `Path.open()`
2025-06-06T03:33:34.8742105Z    |
2025-06-06T03:33:34.8742326Z 70 |         # Write to bandit-results.json
2025-06-06T03:33:34.8742579Z 71 |         with open("security-reports/bandit-results.json", "w") as f:
2025-06-06T03:33:34.8742724Z    |              ^^^^ PTH123
2025-06-06T03:33:34.8742900Z 72 |             json.dump(empty_json_data, f, indent=2)
2025-06-06T03:33:34.8743098Z 73 |         logger.info("Created empty bandit-results.json")
2025-06-06T03:33:34.8743165Z    |
2025-06-06T03:33:34.8743173Z 
2025-06-06T03:33:34.8743438Z run_bandit_scan.py:76:14: PTH123 `open()` should be replaced by `Path.open()`
2025-06-06T03:33:34.8743505Z    |
2025-06-06T03:33:34.8743668Z 75 |         # Write to bandit-results-ini.json
2025-06-06T03:33:34.8743911Z 76 |         with open("security-reports/bandit-results-ini.json", "w") as f:
2025-06-06T03:33:34.8743996Z    |              ^^^^ PTH123
2025-06-06T03:33:34.8744162Z 77 |             json.dump(empty_json_data, f, indent=2)
2025-06-06T03:33:34.8744378Z 78 |         logger.info("Created empty bandit-results-ini.json")
2025-06-06T03:33:34.8744450Z    |
2025-06-06T03:33:34.8744462Z 
2025-06-06T03:33:34.8744725Z run_bandit_scan.py:100:14: PTH123 `open()` should be replaced by `Path.open()`
2025-06-06T03:33:34.8744803Z     |
2025-06-06T03:33:34.8744932Z  99 |         # Write to bandit-results.sarif
2025-06-06T03:33:34.8745180Z 100 |         with open("security-reports/bandit-results.sarif", "w") as f:
2025-06-06T03:33:34.8745277Z     |              ^^^^ PTH123
2025-06-06T03:33:34.8745442Z 101 |             json.dump(empty_sarif, f, indent=2)
2025-06-06T03:33:34.8745645Z 102 |         logger.info("Created empty bandit-results.sarif")
2025-06-06T03:33:34.8745718Z     |
2025-06-06T03:33:34.8745725Z 
2025-06-06T03:33:34.8745983Z run_bandit_scan.py:105:14: PTH123 `open()` should be replaced by `Path.open()`
2025-06-06T03:33:34.8746053Z     |
2025-06-06T03:33:34.8746210Z 104 |         # Write to bandit-results-ini.sarif
2025-06-06T03:33:34.8746473Z 105 |         with open("security-reports/bandit-results-ini.sarif", "w") as f:
2025-06-06T03:33:34.8746679Z     |              ^^^^ PTH123
2025-06-06T03:33:34.8746843Z 106 |             json.dump(empty_sarif, f, indent=2)
2025-06-06T03:33:34.8747129Z 107 |         logger.info("Created empty bandit-results-ini.sarif")
2025-06-06T03:33:34.8747205Z     |
2025-06-06T03:33:34.8747353Z 
2025-06-06T03:33:34.8747647Z run_bandit_scan.py:109:9: TRY300 Consider moving this statement to an `else` block
2025-06-06T03:33:34.8747725Z     |
2025-06-06T03:33:34.8747935Z 107 |         logger.info("Created empty bandit-results-ini.sarif")
2025-06-06T03:33:34.8748007Z 108 |
2025-06-06T03:33:34.8748100Z 109 |         return True
2025-06-06T03:33:34.8748202Z     |         ^^^^^^^^^^^ TRY300
2025-06-06T03:33:34.8748321Z 110 |     except Exception as e:
2025-06-06T03:33:34.8748529Z 111 |         logger.error("Failed to create empty files: %s", e)
2025-06-06T03:33:34.8748597Z     |
2025-06-06T03:33:34.8748605Z 
2025-06-06T03:33:34.8748866Z run_bandit_scan.py:110:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T03:33:34.8748938Z     |
2025-06-06T03:33:34.8749037Z 109 |         return True
2025-06-06T03:33:34.8749155Z 110 |     except Exception as e:
2025-06-06T03:33:34.8749260Z     |            ^^^^^^^^^ BLE001
2025-06-06T03:33:34.8749454Z 111 |         logger.error("Failed to create empty files: %s", e)
2025-06-06T03:33:34.8749554Z 112 |         return False
2025-06-06T03:33:34.8749622Z     |
2025-06-06T03:33:34.8749629Z 
2025-06-06T03:33:34.8749923Z run_bandit_scan.py:111:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T03:33:34.8749990Z     |
2025-06-06T03:33:34.8750100Z 109 |         return True
2025-06-06T03:33:34.8750219Z 110 |     except Exception as e:
2025-06-06T03:33:34.8750419Z 111 |         logger.error("Failed to create empty files: %s", e)
2025-06-06T03:33:34.8750557Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T03:33:34.8750656Z 112 |         return False
2025-06-06T03:33:34.8750724Z     |
2025-06-06T03:33:34.8750846Z     = help: Replace with `exception`
2025-06-06T03:33:34.8750854Z 
2025-06-06T03:33:34.8751077Z run_bandit_scan.py:137:5: C901 `main` is too complex (11 > 10)
2025-06-06T03:33:34.8751145Z     |
2025-06-06T03:33:34.8751249Z 137 | def main() -> int:
2025-06-06T03:33:34.8751326Z     |     ^^^^ C901
2025-06-06T03:33:34.8751401Z 138 |     """
2025-06-06T03:33:34.8751625Z 139 |     Run Bandit security scan with appropriate configuration.
2025-06-06T03:33:34.8751701Z     |
2025-06-06T03:33:34.8751709Z 
2025-06-06T03:33:34.8751966Z run_bandit_scan.py:180:16: BLE001 Do not catch blind exception: `Exception`
2025-06-06T03:33:34.8752040Z     |
2025-06-06T03:33:34.8752215Z 178 |             # Update bandit path after installation
2025-06-06T03:33:34.8752391Z 179 |             bandit_path = find_bandit_executable()
2025-06-06T03:33:34.8752519Z 180 |         except Exception as e:
2025-06-06T03:33:34.8752627Z     |                ^^^^^^^^^ BLE001
2025-06-06T03:33:34.8752837Z 181 |             logger.warning("Failed to install bandit: %s", e)
2025-06-06T03:33:34.8752915Z     |
2025-06-06T03:33:34.8752923Z 
2025-06-06T03:33:34.8753175Z run_bandit_scan.py:212:20: BLE001 Do not catch blind exception: `Exception`
2025-06-06T03:33:34.8753252Z     |
2025-06-06T03:33:34.8753338Z 210 |                 )
2025-06-06T03:33:34.8753593Z 211 |                 logger.info("Bandit scan completed with configuration file")
2025-06-06T03:33:34.8753729Z 212 |             except Exception as e:
2025-06-06T03:33:34.8753848Z     |                    ^^^^^^^^^ BLE001
2025-06-06T03:33:34.8754123Z 213 |                 logger.warning("Bandit scan with configuration file failed: %s", e)
2025-06-06T03:33:34.8754212Z 214 |         else:
2025-06-06T03:33:34.8754279Z     |
2025-06-06T03:33:34.8754285Z 
2025-06-06T03:33:34.8754538Z run_bandit_scan.py:239:20: BLE001 Do not catch blind exception: `Exception`
2025-06-06T03:33:34.8754606Z     |
2025-06-06T03:33:34.8754696Z 237 |                 )
2025-06-06T03:33:34.8754949Z 238 |                 logger.info("Bandit scan completed with default configuration")
2025-06-06T03:33:34.8755219Z 239 |             except Exception as e:
2025-06-06T03:33:34.8755327Z     |                    ^^^^^^^^^ BLE001
2025-06-06T03:33:34.8755715Z 240 |                 logger.warning("Bandit scan with default configuration failed: %s", e)
2025-06-06T03:33:34.8755842Z 241 |     except Exception as e:
2025-06-06T03:33:34.8755917Z     |
2025-06-06T03:33:34.8755924Z 
2025-06-06T03:33:34.8756175Z run_bandit_scan.py:241:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T03:33:34.8756249Z     |
2025-06-06T03:33:34.8756382Z 239 |             except Exception as e:
2025-06-06T03:33:34.8756670Z 240 |                 logger.warning("Bandit scan with default configuration failed: %s", e)
2025-06-06T03:33:34.8756786Z 241 |     except Exception as e:
2025-06-06T03:33:34.8756894Z     |            ^^^^^^^^^ BLE001
2025-06-06T03:33:34.8757073Z 242 |         logger.error("Error running bandit: %s", e)
2025-06-06T03:33:34.8757153Z     |
2025-06-06T03:33:34.8757162Z 
2025-06-06T03:33:34.8757565Z run_bandit_scan.py:242:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T03:33:34.8757636Z     |
2025-06-06T03:33:34.8757924Z 240 |                 logger.warning("Bandit scan with default configuration failed: %s", e)
2025-06-06T03:33:34.8758042Z 241 |     except Exception as e:
2025-06-06T03:33:34.8758221Z 242 |         logger.error("Error running bandit: %s", e)
2025-06-06T03:33:34.8758351Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T03:33:34.8758424Z 243 |
2025-06-06T03:33:34.8758566Z 244 |     # Convert JSON to SARIF format
2025-06-06T03:33:34.8758639Z     |
2025-06-06T03:33:34.8758750Z     = help: Replace with `exception`
2025-06-06T03:33:34.8758758Z 
2025-06-06T03:33:34.8759015Z run_bandit_scan.py:258:20: BLE001 Do not catch blind exception: `Exception`
2025-06-06T03:33:34.8759085Z     |
2025-06-06T03:33:34.8759178Z 256 |                 )
2025-06-06T03:33:34.8759409Z 257 |                 logger.info("Converted Bandit results to SARIF format")
2025-06-06T03:33:34.8759542Z 258 |             except Exception as e:
2025-06-06T03:33:34.8759646Z     |                    ^^^^^^^^^ BLE001
2025-06-06T03:33:34.8759778Z 259 |                 logger.warning(
2025-06-06T03:33:34.8760010Z 260 |                     "Failed to convert Bandit results to SARIF format: %s", e
2025-06-06T03:33:34.8760086Z     |
2025-06-06T03:33:34.8760094Z 
2025-06-06T03:33:34.8760342Z run_bandit_scan.py:262:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T03:33:34.8760415Z     |
2025-06-06T03:33:34.8760642Z 260 |                     "Failed to convert Bandit results to SARIF format: %s", e
2025-06-06T03:33:34.8760731Z 261 |                 )
2025-06-06T03:33:34.8760848Z 262 |     except Exception as e:
2025-06-06T03:33:34.8760950Z     |            ^^^^^^^^^ BLE001
2025-06-06T03:33:34.8761147Z 263 |         logger.error("Error converting to SARIF: %s", e)
2025-06-06T03:33:34.8761219Z     |
2025-06-06T03:33:34.8761230Z 
2025-06-06T03:33:34.8761511Z run_bandit_scan.py:263:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T03:33:34.8761585Z     |
2025-06-06T03:33:34.8761674Z 261 |                 )
2025-06-06T03:33:34.8761801Z 262 |     except Exception as e:
2025-06-06T03:33:34.8761993Z 263 |         logger.error("Error converting to SARIF: %s", e)
2025-06-06T03:33:34.8762135Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T03:33:34.8762203Z 264 |
2025-06-06T03:33:34.8762403Z 265 |     logger.info("Bandit scan completed successfully")
2025-06-06T03:33:34.8762471Z     |
2025-06-06T03:33:34.8762588Z     = help: Replace with `exception`
2025-06-06T03:33:34.8762595Z 
2025-06-06T03:33:34.8762865Z run_crewai_tests.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8762934Z   |
2025-06-06T03:33:34.8763039Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8763135Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8763331Z 2 | """
2025-06-06T03:33:34.8763458Z 3 | Run CrewAI-specific tests.
2025-06-06T03:33:34.8763528Z   |
2025-06-06T03:33:34.8763535Z 
2025-06-06T03:33:34.8763883Z run_mcp_tests.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8763960Z   |
2025-06-06T03:33:34.8764060Z 1 | #!/usr/bin/env python
2025-06-06T03:33:34.8764161Z   | ^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8764231Z 2 | """
2025-06-06T03:33:34.8764391Z 3 | Wrapper script to run MCP adapter tests.
2025-06-06T03:33:34.8764458Z   |
2025-06-06T03:33:34.8764465Z 
2025-06-06T03:33:34.8764722Z run_pre_commit.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8764789Z   |
2025-06-06T03:33:34.8764895Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8764991Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8765064Z 2 |
2025-06-06T03:33:34.8765133Z 3 | """
2025-06-06T03:33:34.8765203Z   |
2025-06-06T03:33:34.8765210Z 
2025-06-06T03:33:34.8765506Z run_pre_commit_on_all_files.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8765583Z   |
2025-06-06T03:33:34.8765680Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8765777Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8765844Z 2 |
2025-06-06T03:33:34.8765919Z 3 | """
2025-06-06T03:33:34.8765987Z   |
2025-06-06T03:33:34.8765994Z 
2025-06-06T03:33:34.8766235Z run_tests.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8766302Z   |
2025-06-06T03:33:34.8766401Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8766494Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8766571Z 2 | """
2025-06-06T03:33:34.8766916Z 3 | Optimized test runner script that adjusts the number of pytest workers based on test count.
2025-06-06T03:33:34.8766987Z   |
2025-06-06T03:33:34.8766994Z 
2025-06-06T03:33:34.8767192Z run_tests.py:15:8: F401 [*] `platform` imported but unused
2025-06-06T03:33:34.8767368Z    |
2025-06-06T03:33:34.8767446Z 13 | import os
2025-06-06T03:33:34.8767653Z 14 | import os.path  # Used for os.path.normpath and os.sep
2025-06-06T03:33:34.8767749Z 15 | import platform
2025-06-06T03:33:34.8767834Z    |        ^^^^^^^^ F401
2025-06-06T03:33:34.8767921Z 16 | import shutil
2025-06-06T03:33:34.8768230Z 17 | import subprocess  # nosec B404 - subprocess is used with proper security controls
2025-06-06T03:33:34.8768297Z    |
2025-06-06T03:33:34.8768431Z    = help: Remove unused import: `platform`
2025-06-06T03:33:34.8768439Z 
2025-06-06T03:33:34.8768654Z run_tests.py:117:5: C901 `count_tests` is too complex (14 > 10)
2025-06-06T03:33:34.8768727Z     |
2025-06-06T03:33:34.8768920Z 117 | def count_tests(validated_args: list[str]) -> int:
2025-06-06T03:33:34.8769003Z     |     ^^^^^^^^^^^ C901
2025-06-06T03:33:34.8769074Z 118 |     """
2025-06-06T03:33:34.8769247Z 119 |     Count the number of tests that will be run.
2025-06-06T03:33:34.8769315Z     |
2025-06-06T03:33:34.8769322Z 
2025-06-06T03:33:34.8769512Z run_tests.py:117:5: PLR0912 Too many branches (13 > 12)
2025-06-06T03:33:34.8769581Z     |
2025-06-06T03:33:34.8769776Z 117 | def count_tests(validated_args: list[str]) -> int:
2025-06-06T03:33:34.8769862Z     |     ^^^^^^^^^^^ PLR0912
2025-06-06T03:33:34.8769936Z 118 |     """
2025-06-06T03:33:34.8770102Z 119 |     Count the number of tests that will be run.
2025-06-06T03:33:34.8770175Z     |
2025-06-06T03:33:34.8770182Z 
2025-06-06T03:33:34.8770463Z run_tests.py:140:18: S603 `subprocess` call: check for execution of untrusted input
2025-06-06T03:33:34.8770536Z     |
2025-06-06T03:33:34.8770846Z 138 |         # nosec B603 - subprocess call is used with shell=False and validated arguments
2025-06-06T03:33:34.8771102Z 139 |         # nosec B607 - subprocess call is used with a fixed executable path
2025-06-06T03:33:34.8771307Z 140 |         result = subprocess.run(  # nosec B603 # nosec B607
2025-06-06T03:33:34.8771415Z     |                  ^^^^^^^^^^^^^^ S603
2025-06-06T03:33:34.8771681Z 141 |             [sys.executable, "-m", "pytest", "--collect-only", *validated_args],
2025-06-06T03:33:34.8771960Z 142 |             check=False,
2025-06-06T03:33:34.8772033Z     |
2025-06-06T03:33:34.8772040Z 
2025-06-06T03:33:34.8772303Z run_tests.py:201:9: TRY300 Consider moving this statement to an `else` block
2025-06-06T03:33:34.8772474Z     |
2025-06-06T03:33:34.8772662Z 200 |         logger.info("Collected %d tests", test_count)
2025-06-06T03:33:34.8772783Z 201 |         return test_count
2025-06-06T03:33:34.8772886Z     |         ^^^^^^^^^^^^^^^^^ TRY300
2025-06-06T03:33:34.8772960Z 202 |
2025-06-06T03:33:34.8773124Z 203 |     except subprocess.TimeoutExpired as e:
2025-06-06T03:33:34.8773197Z     |
2025-06-06T03:33:34.8773205Z 
2025-06-06T03:33:34.8773563Z run_tests.py:214:13: B025 try-except block with duplicate exception `subprocess.CalledProcessError`
2025-06-06T03:33:34.8773636Z     |
2025-06-06T03:33:34.8773834Z 212 |         return default_test_count if has_test_files else 0
2025-06-06T03:33:34.8773907Z 213 |
2025-06-06T03:33:34.8774164Z 214 |     except (subprocess.CalledProcessError, FileNotFoundError) as e:
2025-06-06T03:33:34.8774294Z     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ B025
2025-06-06T03:33:34.8774394Z 215 |         logger.warning(
2025-06-06T03:33:34.8774698Z 216 |             "Unexpected error collecting tests: %s. Falling back to single worker.", e
2025-06-06T03:33:34.8774767Z     |
2025-06-06T03:33:34.8774774Z 
2025-06-06T03:33:34.8775057Z run_tests.py:269:16: PTH112 `os.path.isdir()` should be replaced by `Path.is_dir()`
2025-06-06T03:33:34.8775125Z     |
2025-06-06T03:33:34.8775361Z 267 |         # Method 4: Check for common virtual environment directories
2025-06-06T03:33:34.8775551Z 268 |         for venv_dir in [".venv", "venv", "env", ".env"]:
2025-06-06T03:33:34.8775748Z 269 |             if os.path.isdir(venv_dir) and os.path.isfile(
2025-06-06T03:33:34.8775858Z     |                ^^^^^^^^^^^^^ PTH112
2025-06-06T03:33:34.8776037Z 270 |                 os.path.join(venv_dir, "pyvenv.cfg")
2025-06-06T03:33:34.8776123Z 271 |             ):
2025-06-06T03:33:34.8776195Z     |
2025-06-06T03:33:34.8776206Z 
2025-06-06T03:33:34.8776498Z run_tests.py:269:44: PTH113 `os.path.isfile()` should be replaced by `Path.is_file()`
2025-06-06T03:33:34.8776566Z     |
2025-06-06T03:33:34.8776796Z 267 |         # Method 4: Check for common virtual environment directories
2025-06-06T03:33:34.8776981Z 268 |         for venv_dir in [".venv", "venv", "env", ".env"]:
2025-06-06T03:33:34.8777174Z 269 |             if os.path.isdir(venv_dir) and os.path.isfile(
2025-06-06T03:33:34.8777419Z     |                                            ^^^^^^^^^^^^^^ PTH113
2025-06-06T03:33:34.8777598Z 270 |                 os.path.join(venv_dir, "pyvenv.cfg")
2025-06-06T03:33:34.8777682Z 271 |             ):
2025-06-06T03:33:34.8777758Z     |
2025-06-06T03:33:34.8777765Z 
2025-06-06T03:33:34.8778068Z run_tests.py:270:17: PTH118 `os.path.join()` should be replaced by `Path` with `/` operator
2025-06-06T03:33:34.8778141Z     |
2025-06-06T03:33:34.8778325Z 268 |         for venv_dir in [".venv", "venv", "env", ".env"]:
2025-06-06T03:33:34.8778521Z 269 |             if os.path.isdir(venv_dir) and os.path.isfile(
2025-06-06T03:33:34.8778689Z 270 |                 os.path.join(venv_dir, "pyvenv.cfg")
2025-06-06T03:33:34.8778803Z     |                 ^^^^^^^^^^^^ PTH118
2025-06-06T03:33:34.8778886Z 271 |             ):
2025-06-06T03:33:34.8779008Z 272 |                 return True
2025-06-06T03:33:34.8779075Z     |
2025-06-06T03:33:34.8779082Z 
2025-06-06T03:33:34.8779346Z run_tests.py:275:9: TRY300 Consider moving this statement to an `else` block
2025-06-06T03:33:34.8779414Z     |
2025-06-06T03:33:34.8779563Z 274 |         # Not in a virtual environment
2025-06-06T03:33:34.8779656Z 275 |         return False
2025-06-06T03:33:34.8779761Z     |         ^^^^^^^^^^^^ TRY300
2025-06-06T03:33:34.8779881Z 276 |     except Exception as e:
2025-06-06T03:33:34.8780160Z 277 |         # If any error occurs, log it but assume we're not in a virtual environment
2025-06-06T03:33:34.8780228Z     |
2025-06-06T03:33:34.8780235Z 
2025-06-06T03:33:34.8780600Z run_tests.py:276:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T03:33:34.8780669Z     |
2025-06-06T03:33:34.8780817Z 274 |         # Not in a virtual environment
2025-06-06T03:33:34.8781004Z 275 |         return False
2025-06-06T03:33:34.8781133Z 276 |     except Exception as e:
2025-06-06T03:33:34.8781229Z     |            ^^^^^^^^^ BLE001
2025-06-06T03:33:34.8781505Z 277 |         # If any error occurs, log it but assume we're not in a virtual environment
2025-06-06T03:33:34.8781757Z 278 |         logger.warning("Error checking for virtual environment: %s", e)
2025-06-06T03:33:34.8781842Z     |
2025-06-06T03:33:34.8781849Z 
2025-06-06T03:33:34.8782039Z run_tests.py:282:5: C901 `main` is too complex (22 > 10)
2025-06-06T03:33:34.8782112Z     |
2025-06-06T03:33:34.8782208Z 282 | def main() -> None:
2025-06-06T03:33:34.8782286Z     |     ^^^^ C901
2025-06-06T03:33:34.8782355Z 283 |     """
2025-06-06T03:33:34.8782541Z 284 |     Run the test suite with optimized worker count.
2025-06-06T03:33:34.8782614Z     |
2025-06-06T03:33:34.8782626Z 
2025-06-06T03:33:34.8782812Z run_tests.py:282:5: PLR0912 Too many branches (27 > 12)
2025-06-06T03:33:34.8782884Z     |
2025-06-06T03:33:34.8782981Z 282 | def main() -> None:
2025-06-06T03:33:34.8783065Z     |     ^^^^ PLR0912
2025-06-06T03:33:34.8783136Z 283 |     """
2025-06-06T03:33:34.8783317Z 284 |     Run the test suite with optimized worker count.
2025-06-06T03:33:34.8783384Z     |
2025-06-06T03:33:34.8783391Z 
2025-06-06T03:33:34.8783584Z run_tests.py:282:5: PLR0915 Too many statements (90 > 50)
2025-06-06T03:33:34.8783651Z     |
2025-06-06T03:33:34.8783749Z 282 | def main() -> None:
2025-06-06T03:33:34.8783826Z     |     ^^^^ PLR0915
2025-06-06T03:33:34.8783900Z 283 |     """
2025-06-06T03:33:34.8784075Z 284 |     Run the test suite with optimized worker count.
2025-06-06T03:33:34.8784147Z     |
2025-06-06T03:33:34.8784155Z 
2025-06-06T03:33:34.8784435Z run_tests.py:316:28: S603 `subprocess` call: check for execution of untrusted input
2025-06-06T03:33:34.8784511Z     |
2025-06-06T03:33:34.8784823Z 314 |             # nosec B603 - subprocess call is used with shell=False and validated arguments
2025-06-06T03:33:34.8785086Z 315 |             # nosec B607 - subprocess call is used with a fixed executable path
2025-06-06T03:33:34.8785313Z 316 |             check_result = subprocess.run(  # nosec B603 # nosec B607
2025-06-06T03:33:34.8785438Z     |                            ^^^^^^^^^^^^^^ S603
2025-06-06T03:33:34.8785637Z 317 |                 [sys.executable, "-c", "import pytest_xdist"],
2025-06-06T03:33:34.8785760Z 318 |                 check=False,
2025-06-06T03:33:34.8785828Z     |
2025-06-06T03:33:34.8785835Z 
2025-06-06T03:33:34.8786116Z run_tests.py:339:32: S603 `subprocess` call: check for execution of untrusted input
2025-06-06T03:33:34.8786183Z     |
2025-06-06T03:33:34.8786504Z 337 |                     # nosec B603 - subprocess call is used with shell=False and validated arguments
2025-06-06T03:33:34.8786741Z 338 |                     # nosec B607 - We're using shutil.which to get the full path
2025-06-06T03:33:34.8786964Z 339 |                     uv_check = subprocess.run(  # nosec B603 # nosec B607
2025-06-06T03:33:34.8787090Z     |                                ^^^^^^^^^^^^^^ S603
2025-06-06T03:33:34.8787346Z 340 |                         [uv_path, "--version"],
2025-06-06T03:33:34.8787483Z 341 |                         check=False,
2025-06-06T03:33:34.8787555Z     |
2025-06-06T03:33:34.8787562Z 
2025-06-06T03:33:34.8787837Z run_tests.py:367:34: S603 `subprocess` call: check for execution of untrusted input
2025-06-06T03:33:34.8787912Z     |
2025-06-06T03:33:34.8788221Z 365 |                 # nosec B603 - subprocess call is used with shell=False and validated arguments
2025-06-06T03:33:34.8788479Z 366 |                 # nosec B607 - subprocess call is used with a fixed executable path
2025-06-06T03:33:34.8788718Z 367 |                 install_result = subprocess.run(  # nosec B603 # nosec B607
2025-06-06T03:33:34.8788842Z     |                                  ^^^^^^^^^^^^^^ S603
2025-06-06T03:33:34.8789092Z 368 |                     install_cmd,
2025-06-06T03:33:34.8789216Z 369 |                     check=False,
2025-06-06T03:33:34.8789287Z     |
2025-06-06T03:33:34.8789391Z 
2025-06-06T03:33:34.8789631Z run_tests.py:392:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T03:33:34.8789705Z     |
2025-06-06T03:33:34.8789794Z 390 |                 e,
2025-06-06T03:33:34.8789880Z 391 |             )
2025-06-06T03:33:34.8790002Z 392 |     except Exception as e:
2025-06-06T03:33:34.8790102Z     |            ^^^^^^^^^ BLE001
2025-06-06T03:33:34.8790202Z 393 |         logger.warning(
2025-06-06T03:33:34.8790567Z 394 |             "Unexpected error installing pytest-xdist: %s. Will run tests without parallelization.",
2025-06-06T03:33:34.8790635Z     |
2025-06-06T03:33:34.8790642Z 
2025-06-06T03:33:34.8790922Z run_tests.py:424:27: S603 `subprocess` call: check for execution of untrusted input
2025-06-06T03:33:34.8790991Z     |
2025-06-06T03:33:34.8791301Z 422 |             # nosec B603 - subprocess call is used with shell=False and validated arguments
2025-06-06T03:33:34.8791555Z 423 |             # nosec B607 - subprocess call is used with a fixed executable path
2025-06-06T03:33:34.8791779Z 424 |             xdist_check = subprocess.run(  # nosec B603 # nosec B607
2025-06-06T03:33:34.8791899Z     |                           ^^^^^^^^^^^^^^ S603
2025-06-06T03:33:34.8792098Z 425 |                 [sys.executable, "-c", "import pytest_xdist"],
2025-06-06T03:33:34.8792214Z 426 |                 check=False,
2025-06-06T03:33:34.8792288Z     |
2025-06-06T03:33:34.8792295Z 
2025-06-06T03:33:34.8792523Z run_tests.py:444:16: BLE001 Do not catch blind exception: `Exception`
2025-06-06T03:33:34.8792597Z     |
2025-06-06T03:33:34.8792687Z 442 |                 e,
2025-06-06T03:33:34.8792773Z 443 |             )
2025-06-06T03:33:34.8792899Z 444 |         except Exception as e:
2025-06-06T03:33:34.8793005Z     |                ^^^^^^^^^ BLE001
2025-06-06T03:33:34.8793126Z 445 |             logger.warning(
2025-06-06T03:33:34.8793498Z 446 |                 "Unexpected error checking for pytest-xdist: %s. Will run tests without parallelization.",
2025-06-06T03:33:34.8793571Z     |
2025-06-06T03:33:34.8793583Z 
2025-06-06T03:33:34.8793857Z run_tests.py:476:18: S603 `subprocess` call: check for execution of untrusted input
2025-06-06T03:33:34.8793929Z     |
2025-06-06T03:33:34.8794227Z 474 |         # nosec B603 - subprocess call is used with shell=False and validated arguments
2025-06-06T03:33:34.8794482Z 475 |         # nosec B607 - subprocess call is used with a fixed executable path
2025-06-06T03:33:34.8794683Z 476 |         result = subprocess.run(  # nosec B603 # nosec B607
2025-06-06T03:33:34.8794798Z     |                  ^^^^^^^^^^^^^^ S603
2025-06-06T03:33:34.8794895Z 477 |             pytest_cmd,
2025-06-06T03:33:34.8795010Z 478 |             check=False,
2025-06-06T03:33:34.8795078Z     |
2025-06-06T03:33:34.8795085Z 
2025-06-06T03:33:34.8795359Z run_tests.py:494:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T03:33:34.8795426Z     |
2025-06-06T03:33:34.8795639Z 492 |                 logger.error("Pytest stderr: %s", result.stderr)
2025-06-06T03:33:34.8795846Z 493 |     except subprocess.TimeoutExpired as timeout_error:
2025-06-06T03:33:34.8796154Z 494 |         logger.error("Pytest execution timed out after 1 hour: %s", timeout_error)
2025-06-06T03:33:34.8796310Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T03:33:34.8796410Z 495 |         sys.exit(2)
2025-06-06T03:33:34.8796628Z 496 |     except subprocess.SubprocessError as subprocess_error:
2025-06-06T03:33:34.8796701Z     |
2025-06-06T03:33:34.8796815Z     = help: Replace with `exception`
2025-06-06T03:33:34.8796823Z 
2025-06-06T03:33:34.8797090Z run_tests.py:497:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T03:33:34.8797158Z     |
2025-06-06T03:33:34.8797351Z 495 |         sys.exit(2)
2025-06-06T03:33:34.8797693Z 496 |     except subprocess.SubprocessError as subprocess_error:
2025-06-06T03:33:34.8797930Z 497 |         logger.error("Error running pytest: %s", subprocess_error)
2025-06-06T03:33:34.8798172Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T03:33:34.8798278Z 498 |         sys.exit(1)
2025-06-06T03:33:34.8798398Z 499 |     except Exception as e:
2025-06-06T03:33:34.8798471Z     |
2025-06-06T03:33:34.8798582Z     = help: Replace with `exception`
2025-06-06T03:33:34.8798595Z 
2025-06-06T03:33:34.8798830Z run_tests.py:499:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T03:33:34.8798903Z     |
2025-06-06T03:33:34.8799128Z 497 |         logger.error("Error running pytest: %s", subprocess_error)
2025-06-06T03:33:34.8799224Z 498 |         sys.exit(1)
2025-06-06T03:33:34.8799342Z 499 |     except Exception as e:
2025-06-06T03:33:34.8799443Z     |            ^^^^^^^^^ BLE001
2025-06-06T03:33:34.8799653Z 500 |         logger.error("Unexpected error running pytest: %s", e)
2025-06-06T03:33:34.8799753Z 501 |         sys.exit(1)
2025-06-06T03:33:34.8799821Z     |
2025-06-06T03:33:34.8799828Z 
2025-06-06T03:33:34.8800100Z run_tests.py:500:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T03:33:34.8800171Z     |
2025-06-06T03:33:34.8800267Z 498 |         sys.exit(1)
2025-06-06T03:33:34.8800387Z 499 |     except Exception as e:
2025-06-06T03:33:34.8800602Z 500 |         logger.error("Unexpected error running pytest: %s", e)
2025-06-06T03:33:34.8800742Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T03:33:34.8800839Z 501 |         sys.exit(1)
2025-06-06T03:33:34.8800907Z     |
2025-06-06T03:33:34.8801024Z     = help: Replace with `exception`
2025-06-06T03:33:34.8801032Z 
2025-06-06T03:33:34.8801301Z run_tests_wrapper.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8801374Z   |
2025-06-06T03:33:34.8801474Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8801579Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8801652Z 2 | """
2025-06-06T03:33:34.8801809Z 3 | Simple wrapper script for running tests.
2025-06-06T03:33:34.8801876Z   |
2025-06-06T03:33:34.8801884Z 
2025-06-06T03:33:34.8802240Z run_tests_wrapper.py:13:1: PTH103 `os.makedirs()` should be replaced by `Path.mkdir(parents=True)`
2025-06-06T03:33:34.8802309Z    |
2025-06-06T03:33:34.8802457Z 12 | # Create security-reports directory
2025-06-06T03:33:34.8802632Z 13 | os.makedirs("security-reports", exist_ok=True)
2025-06-06T03:33:34.8802718Z    | ^^^^^^^^^^^ PTH103
2025-06-06T03:33:34.8802881Z 14 | print("Created security-reports directory")
2025-06-06T03:33:34.8802953Z    |
2025-06-06T03:33:34.8802960Z 
2025-06-06T03:33:34.8803119Z run_tests_wrapper.py:14:1: T201 `print` found
2025-06-06T03:33:34.8803207Z    |
2025-06-06T03:33:34.8803352Z 12 | # Create security-reports directory
2025-06-06T03:33:34.8803523Z 13 | os.makedirs("security-reports", exist_ok=True)
2025-06-06T03:33:34.8803683Z 14 | print("Created security-reports directory")
2025-06-06T03:33:34.8803764Z    | ^^^^^ T201
2025-06-06T03:33:34.8803831Z 15 |
2025-06-06T03:33:34.8804074Z 16 | # Set environment variables to bypass virtual environment checks
2025-06-06T03:33:34.8804144Z    |
2025-06-06T03:33:34.8804236Z    = help: Remove `print`
2025-06-06T03:33:34.8804244Z 
2025-06-06T03:33:34.8804398Z run_tests_wrapper.py:23:5: T201 `print` found
2025-06-06T03:33:34.8804471Z    |
2025-06-06T03:33:34.8804614Z 21 | if os.environ.get("GITHUB_ACTIONS"):
2025-06-06T03:33:34.8804734Z 22 |     os.environ["CI"] = "1"
2025-06-06T03:33:34.8804905Z 23 |     print("GitHub Actions environment detected")
2025-06-06T03:33:34.8804986Z    |     ^^^^^ T201
2025-06-06T03:33:34.8805052Z 24 |
2025-06-06T03:33:34.8805177Z 25 | # Get command line arguments
2025-06-06T03:33:34.8805244Z    |
2025-06-06T03:33:34.8805333Z    = help: Remove `print`
2025-06-06T03:33:34.8805340Z 
2025-06-06T03:33:34.8805651Z run_tests_wrapper.py:34:14: S603 `subprocess` call: check for execution of untrusted input
2025-06-06T03:33:34.8805811Z    |
2025-06-06T03:33:34.8805911Z 32 | # Run pytest directly
2025-06-06T03:33:34.8805987Z 33 | try:
2025-06-06T03:33:34.8806113Z 34 |     result = subprocess.run(
2025-06-06T03:33:34.8806293Z    |              ^^^^^^^^^^^^^^ S603
2025-06-06T03:33:34.8806459Z 35 |         [sys.executable, "-m", "pytest", *args],
2025-06-06T03:33:34.8806560Z 36 |         check=False,
2025-06-06T03:33:34.8806628Z    |
2025-06-06T03:33:34.8806641Z 
2025-06-06T03:33:34.8806904Z run_tests_wrapper.py:41:8: BLE001 Do not catch blind exception: `Exception`
2025-06-06T03:33:34.8806976Z    |
2025-06-06T03:33:34.8807046Z 39 |     )
2025-06-06T03:33:34.8807177Z 40 |     sys.exit(result.returncode)
2025-06-06T03:33:34.8807374Z 41 | except Exception as e:
2025-06-06T03:33:34.8807461Z    |        ^^^^^^^^^ BLE001
2025-06-06T03:33:34.8807611Z 42 |     print(f"Error running pytest: {e}")
2025-06-06T03:33:34.8807703Z 43 |     sys.exit(1)
2025-06-06T03:33:34.8807771Z    |
2025-06-06T03:33:34.8807782Z 
2025-06-06T03:33:34.8807945Z run_tests_wrapper.py:42:5: T201 `print` found
2025-06-06T03:33:34.8808012Z    |
2025-06-06T03:33:34.8808145Z 40 |     sys.exit(result.returncode)
2025-06-06T03:33:34.8808249Z 41 | except Exception as e:
2025-06-06T03:33:34.8808397Z 42 |     print(f"Error running pytest: {e}")
2025-06-06T03:33:34.8808470Z    |     ^^^^^ T201
2025-06-06T03:33:34.8808561Z 43 |     sys.exit(1)
2025-06-06T03:33:34.8808627Z    |
2025-06-06T03:33:34.8808718Z    = help: Remove `print`
2025-06-06T03:33:34.8808725Z 
2025-06-06T03:33:34.8808952Z run_ui.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8809024Z   |
2025-06-06T03:33:34.8809119Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8809218Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8809427Z 2 | """run_ui.py - Entry point for the Flask web application."""
2025-06-06T03:33:34.8809501Z   |
2025-06-06T03:33:34.8809508Z 
2025-06-06T03:33:34.8809831Z run_ui.py:38:31: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`
2025-06-06T03:33:34.8809908Z    |
2025-06-06T03:33:34.8810102Z 36 |     """Extended handler that compresses rotated logs."""
2025-06-06T03:33:34.8810173Z 37 |
2025-06-06T03:33:34.8810375Z 38 |     def __init__(self, *args: Any, **kwargs: Any) -> None:
2025-06-06T03:33:34.8810489Z    |                               ^^^ ANN401
2025-06-06T03:33:34.8810648Z 39 |         """Initialize with compression delay."""
2025-06-06T03:33:34.8810882Z 40 |         self.compress_delay = int(kwargs.pop("compress_delay", 60))
2025-06-06T03:33:34.8810950Z    |
2025-06-06T03:33:34.8810957Z 
2025-06-06T03:33:34.8811290Z run_ui.py:38:46: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`
2025-06-06T03:33:34.8811359Z    |
2025-06-06T03:33:34.8811555Z 36 |     """Extended handler that compresses rotated logs."""
2025-06-06T03:33:34.8811621Z 37 |
2025-06-06T03:33:34.8811817Z 38 |     def __init__(self, *args: Any, **kwargs: Any) -> None:
2025-06-06T03:33:34.8811947Z    |                                              ^^^ ANN401
2025-06-06T03:33:34.8812107Z 39 |         """Initialize with compression delay."""
2025-06-06T03:33:34.8812334Z 40 |         self.compress_delay = int(kwargs.pop("compress_delay", 60))
2025-06-06T03:33:34.8812407Z    |
2025-06-06T03:33:34.8812414Z 
2025-06-06T03:33:34.8812668Z scripts/artist_demo.py:20:1: E402 Module level import not at top of file
2025-06-06T03:33:34.8812742Z    |
2025-06-06T03:33:34.8812901Z 18 |     sys.path.insert(0, str(project_root))
2025-06-06T03:33:34.8812974Z 19 |
2025-06-06T03:33:34.8813145Z 20 | from ai_models.artist_agent import ArtistAgent
2025-06-06T03:33:34.8813281Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
2025-06-06T03:33:34.8813348Z    |
2025-06-06T03:33:34.8813361Z 
2025-06-06T03:33:34.8813692Z scripts/artist_demo.py:23:5: ANN201 Missing return type annotation for public function `main`
2025-06-06T03:33:34.8813762Z    |
2025-06-06T03:33:34.8813836Z 23 | def main():
2025-06-06T03:33:34.8813916Z    |     ^^^^ ANN201
2025-06-06T03:33:34.8814186Z 24 |     parser = argparse.ArgumentParser(
2025-06-06T03:33:34.8814546Z 25 |         description="Demo for ArtistAgent: agentic tool use (calculator, text analyzer, fallback)."
2025-06-06T03:33:34.8814713Z    |
2025-06-06T03:33:34.8814853Z    = help: Add return type annotation: `None`
2025-06-06T03:33:34.8814860Z 
2025-06-06T03:33:34.8815118Z scripts/artist_demo.py:23:5: D103 Missing docstring in public function
2025-06-06T03:33:34.8815218Z    |
2025-06-06T03:33:34.8815291Z 23 | def main():
2025-06-06T03:33:34.8815367Z    |     ^^^^ D103
2025-06-06T03:33:34.8815514Z 24 |     parser = argparse.ArgumentParser(
2025-06-06T03:33:34.8815863Z 25 |         description="Demo for ArtistAgent: agentic tool use (calculator, text analyzer, fallback)."
2025-06-06T03:33:34.8815931Z    |
2025-06-06T03:33:34.8815938Z 
2025-06-06T03:33:34.8816233Z scripts/artist_demo.py:40:9: SIM118 Use `key in dict` instead of `key in dict.keys()`
2025-06-06T03:33:34.8816300Z    |
2025-06-06T03:33:34.8816429Z 38 |     # Print available tools
2025-06-06T03:33:34.8816554Z 39 |     print("\nAvailable tools:")
2025-06-06T03:33:34.8816705Z 40 |     for tool_name in agent.tools.keys():
2025-06-06T03:33:34.8816821Z    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SIM118
2025-06-06T03:33:34.8816954Z 41 |         print(f"  - {tool_name}")
2025-06-06T03:33:34.8817022Z    |
2025-06-06T03:33:34.8817110Z    = help: Remove `.keys()`
2025-06-06T03:33:34.8817118Z 
2025-06-06T03:33:34.8817573Z scripts/check_logger_initialization.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8817647Z   |
2025-06-06T03:33:34.8817745Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8817846Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8817915Z 2 | """
2025-06-06T03:33:34.8818133Z 3 | Logger initialization checker script.
2025-06-06T03:33:34.8818262Z   |
2025-06-06T03:33:34.8818276Z 
2025-06-06T03:33:34.8818634Z scripts/fix/fix_all_files.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8818708Z   |
2025-06-06T03:33:34.8818808Z 1 | #!/usr/bin/env python
2025-06-06T03:33:34.8818903Z   | ^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8819217Z 2 | """Script to fix all Python files by replacing them with minimal valid Python files."""
2025-06-06T03:33:34.8819284Z   |
2025-06-06T03:33:34.8819291Z 
2025-06-06T03:33:34.8819645Z scripts/fix/fix_bandit_security_scan.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8819712Z   |
2025-06-06T03:33:34.8819812Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8819909Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8819982Z 2 | """
2025-06-06T03:33:34.8820166Z 3 | Fix Bandit Security Scan Issues for GitHub Actions.
2025-06-06T03:33:34.8820239Z   |
2025-06-06T03:33:34.8820246Z 
2025-06-06T03:33:34.8820569Z scripts/fix/fix_codeql_issues.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8820638Z   |
2025-06-06T03:33:34.8820737Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8820836Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8820909Z 2 | """
2025-06-06T03:33:34.8821071Z 3 | Script to fix CodeQL issues in the codebase.
2025-06-06T03:33:34.8821140Z   |
2025-06-06T03:33:34.8821147Z 
2025-06-06T03:33:34.8821500Z scripts/fix/fix_github_actions_bandit.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8821570Z   |
2025-06-06T03:33:34.8821664Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8821772Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8821851Z 2 | """
2025-06-06T03:33:34.8822022Z 3 | Fix GitHub Actions Bandit Configuration Issues.
2025-06-06T03:33:34.8822088Z   |
2025-06-06T03:33:34.8822095Z 
2025-06-06T03:33:34.8822416Z scripts/fix/fix_linting_issues.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8822485Z   |
2025-06-06T03:33:34.8822582Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8822675Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8822746Z 2 |
2025-06-06T03:33:34.8822813Z 3 | """
2025-06-06T03:33:34.8823011Z   |
2025-06-06T03:33:34.8823018Z 
2025-06-06T03:33:34.8823354Z scripts/fix/fix_potential_secrets.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8823425Z   |
2025-06-06T03:33:34.8823616Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8823717Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8823783Z 2 |
2025-06-06T03:33:34.8823858Z 3 | """
2025-06-06T03:33:34.8823924Z   |
2025-06-06T03:33:34.8823931Z 
2025-06-06T03:33:34.8824257Z scripts/fix/fix_security_issues.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8824323Z   |
2025-06-06T03:33:34.8824422Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8824519Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8824592Z 2 | """
2025-06-06T03:33:34.8824750Z 3 | Security issues scanner and fixer for CI/CD.
2025-06-06T03:33:34.8824820Z   |
2025-06-06T03:33:34.8824827Z 
2025-06-06T03:33:34.8825132Z scripts/fix/fix_security_issues.py:62:9: ARG001 Unused function argument: `patterns`
2025-06-06T03:33:34.8825207Z    |
2025-06-06T03:33:34.8825308Z 60 |     def scan_directory(
2025-06-06T03:33:34.8825551Z 61 |         directory: str,  # Match the signature of the imported function
2025-06-06T03:33:34.8825775Z 62 |         patterns: dict[str, Any],  # Match the expected signature
2025-06-06T03:33:34.8825860Z    |         ^^^^^^^^ ARG001
2025-06-06T03:33:34.8825983Z 63 |         exclude_dirs: set[str]
2025-06-06T03:33:34.8826208Z 64 |         | None = None,  # Match the signature of the imported function
2025-06-06T03:33:34.8826276Z    |
2025-06-06T03:33:34.8826284Z 
2025-06-06T03:33:34.8826602Z scripts/fix/fix_security_issues.py:63:9: ARG001 Unused function argument: `exclude_dirs`
2025-06-06T03:33:34.8826670Z    |
2025-06-06T03:33:34.8826907Z 61 |         directory: str,  # Match the signature of the imported function
2025-06-06T03:33:34.8827121Z 62 |         patterns: dict[str, Any],  # Match the expected signature
2025-06-06T03:33:34.8827360Z 63 |         exclude_dirs: set[str]
2025-06-06T03:33:34.8827464Z    |         ^^^^^^^^^^^^ ARG001
2025-06-06T03:33:34.8827685Z 64 |         | None = None,  # Match the signature of the imported function
2025-06-06T03:33:34.8827851Z 65 |     ) -> dict[str, list[tuple[str, int, int]]]:
2025-06-06T03:33:34.8827924Z    |
2025-06-06T03:33:34.8827931Z 
2025-06-06T03:33:34.8828289Z scripts/fix/run_pre_commit_on_all_files.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8828356Z   |
2025-06-06T03:33:34.8828456Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8828550Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8828621Z 2 |
2025-06-06T03:33:34.8828975Z 3 | """Script to run pre-commit on all Python files in the repository, excluding the .venv directory."""
2025-06-06T03:33:34.8829046Z   |
2025-06-06T03:33:34.8829055Z 
2025-06-06T03:33:34.8829350Z scripts/manage_quality.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8829421Z   |
2025-06-06T03:33:34.8829516Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8829620Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8829686Z 2 |
2025-06-06T03:33:34.8829758Z 3 | """
2025-06-06T03:33:34.8829825Z   |
2025-06-06T03:33:34.8829832Z 
2025-06-06T03:33:34.8830130Z scripts/run/run_linters.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8830197Z   |
2025-06-06T03:33:34.8830298Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8830393Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8830466Z 2 | """
2025-06-06T03:33:34.8830686Z 3 | Run linters on all Python files except those in node_modules.
2025-06-06T03:33:34.8830757Z   |
2025-06-06T03:33:34.8830765Z 
2025-06-06T03:33:34.8831058Z scripts/run/run_mcp_tests.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8831129Z   |
2025-06-06T03:33:34.8831225Z 1 | #!/usr/bin/env python
2025-06-06T03:33:34.8831322Z   | ^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8831389Z 2 | """
2025-06-06T03:33:34.8831636Z 3 | Script to run MCP adapter tests without loading the main conftest.py.
2025-06-06T03:33:34.8831828Z   |
2025-06-06T03:33:34.8831836Z 
2025-06-06T03:33:34.8832332Z scripts/setup/enhanced_setup_dev_environment.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8832403Z   |
2025-06-06T03:33:34.8832506Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8832602Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8832675Z 2 | """
2025-06-06T03:33:34.8832845Z 3 | Enhanced Setup Development Environment Script.
2025-06-06T03:33:34.8832917Z   |
2025-06-06T03:33:34.8832924Z 
2025-06-06T03:33:34.8833246Z scripts/setup/install_mcp_sdk.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8833328Z   |
2025-06-06T03:33:34.8833429Z 1 | #!/usr/bin/env python
2025-06-06T03:33:34.8833529Z   | ^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8833597Z 2 | """
2025-06-06T03:33:34.8833755Z 3 | Script to install the MCP SDK from GitHub.
2025-06-06T03:33:34.8833820Z   |
2025-06-06T03:33:34.8833832Z 
2025-06-06T03:33:34.8834171Z scripts/setup/install_pre_commit.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8834239Z   |
2025-06-06T03:33:34.8834340Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8834437Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8834508Z 2 |
2025-06-06T03:33:34.8834575Z 3 | """
2025-06-06T03:33:34.8834646Z   |
2025-06-06T03:33:34.8834654Z 
2025-06-06T03:33:34.8834976Z scripts/utils/cleanup_egg_info.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8835077Z   |
2025-06-06T03:33:34.8835172Z 1 | #!/usr/bin/env python
2025-06-06T03:33:34.8835271Z   | ^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8835525Z 2 | """Script to clean up .egg-info directories before building packages."""
2025-06-06T03:33:34.8835592Z   |
2025-06-06T03:33:34.8835599Z 
2025-06-06T03:33:34.8835933Z scripts/utils/create_sarif_files.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8836000Z   |
2025-06-06T03:33:34.8836103Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8836199Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8836393Z 2 | """Create SARIF files for GitHub Advanced Security."""
2025-06-06T03:33:34.8836460Z   |
2025-06-06T03:33:34.8836470Z 
2025-06-06T03:33:34.8836778Z scripts/utils/sarif_utils.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8836845Z   |
2025-06-06T03:33:34.8836944Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8837040Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8837114Z 2 | """
2025-06-06T03:33:34.8837385Z 3 | SARIF utilities for security scanning workflows.
2025-06-06T03:33:34.8837460Z   |
2025-06-06T03:33:34.8837467Z 
2025-06-06T03:33:34.8837810Z scripts/utils/verify_tracked_files.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8837884Z   |
2025-06-06T03:33:34.8837976Z 1 | #!/usr/bin/env python
2025-06-06T03:33:34.8838074Z   | ^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8838140Z 2 | """
2025-06-06T03:33:34.8838250Z 3 | verify_tracked_files.py.
2025-06-06T03:33:34.8838316Z   |
2025-06-06T03:33:34.8838322Z 
2025-06-06T03:33:34.8838597Z simple_bandit_scan.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8838668Z   |
2025-06-06T03:33:34.8838768Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8838864Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8838936Z 2 | """
2025-06-06T03:33:34.8839072Z 3 | Simple Bandit security scan script.
2025-06-06T03:33:34.8839144Z   |
2025-06-06T03:33:34.8839151Z 
2025-06-06T03:33:34.8839421Z test_bandit_config.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8839494Z   |
2025-06-06T03:33:34.8839590Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8839689Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8839860Z 2 | """Test script to verify Bandit configuration."""
2025-06-06T03:33:34.8839930Z   |
2025-06-06T03:33:34.8839937Z 
2025-06-06T03:33:34.8840248Z test_bandit_config.py:77:21: S603 `subprocess` call: check for execution of untrusted input
2025-06-06T03:33:34.8840492Z    |
2025-06-06T03:33:34.8840707Z 75 |                     # Use full path to cmd.exe to avoid security warning
2025-06-06T03:33:34.8840996Z 76 |                     cmd_path = shutil.which("cmd.exe") or "cmd"
2025-06-06T03:33:34.8841166Z 77 |                     subprocess.run(  # nosec B603
2025-06-06T03:33:34.8841285Z    |                     ^^^^^^^^^^^^^^ S603
2025-06-06T03:33:34.8841393Z 78 |                         [
2025-06-06T03:33:34.8841526Z 79 |                             cmd_path,
2025-06-06T03:33:34.8841593Z    |
2025-06-06T03:33:34.8841604Z 
2025-06-06T03:33:34.8841843Z test_bandit_config.py:100:5: PLR0915 Too many statements (51 > 50)
2025-06-06T03:33:34.8841917Z     |
2025-06-06T03:33:34.8842068Z 100 | def create_empty_json_files() -> bool:
2025-06-06T03:33:34.8842179Z     |     ^^^^^^^^^^^^^^^^^^^^^^^ PLR0915
2025-06-06T03:33:34.8842251Z 101 |     """
2025-06-06T03:33:34.8842409Z 102 |     Create empty JSON files as a fallback.
2025-06-06T03:33:34.8842481Z     |
2025-06-06T03:33:34.8842488Z 
2025-06-06T03:33:34.8842789Z test_bandit_config.py:165:9: TRY300 Consider moving this statement to an `else` block
2025-06-06T03:33:34.8842856Z     |
2025-06-06T03:33:34.8843017Z 163 |                 json.dump(simple_json, f)
2025-06-06T03:33:34.8848045Z 164 |
2025-06-06T03:33:34.8848190Z 165 |         return True
2025-06-06T03:33:34.8848299Z     |         ^^^^^^^^^^^ TRY300
2025-06-06T03:33:34.8848475Z 166 |     except (PermissionError, OSError):
2025-06-06T03:33:34.8848707Z 167 |         logger.exception("Failed to create empty JSON files")
2025-06-06T03:33:34.8848783Z     |
2025-06-06T03:33:34.8848792Z 
2025-06-06T03:33:34.8849115Z test_bandit_config.py:202:17: TRY300 Consider moving this statement to an `else` block
2025-06-06T03:33:34.8849189Z     |
2025-06-06T03:33:34.8849279Z 200 |                 )
2025-06-06T03:33:34.8849562Z 201 |                 logger.info("Successfully copied JSON files from temp directory")
2025-06-06T03:33:34.8849690Z 202 |                 return True
2025-06-06T03:33:34.8849801Z     |                 ^^^^^^^^^^^ TRY300
2025-06-06T03:33:34.8850021Z 203 |             except (PermissionError, OSError, FileExistsError):
2025-06-06T03:33:34.8850154Z 204 |                 logger.warning(
2025-06-06T03:33:34.8850222Z     |
2025-06-06T03:33:34.8850229Z 
2025-06-06T03:33:34.8850565Z test_bandit_config.py:237:16: PTH112 `os.path.isdir()` should be replaced by `Path.is_dir()`
2025-06-06T03:33:34.8850632Z     |
2025-06-06T03:33:34.8850870Z 235 |         # Method 4: Check for common virtual environment directories
2025-06-06T03:33:34.8851062Z 236 |         for venv_dir in [".venv", "venv", "env", ".env"]:
2025-06-06T03:33:34.8851258Z 237 |             if os.path.isdir(venv_dir) and os.path.isfile(
2025-06-06T03:33:34.8851366Z     |                ^^^^^^^^^^^^^ PTH112
2025-06-06T03:33:34.8851547Z 238 |                 os.path.join(venv_dir, "pyvenv.cfg")
2025-06-06T03:33:34.8851634Z 239 |             ):
2025-06-06T03:33:34.8851709Z     |
2025-06-06T03:33:34.8851716Z 
2025-06-06T03:33:34.8852049Z test_bandit_config.py:237:44: PTH113 `os.path.isfile()` should be replaced by `Path.is_file()`
2025-06-06T03:33:34.8852117Z     |
2025-06-06T03:33:34.8852349Z 235 |         # Method 4: Check for common virtual environment directories
2025-06-06T03:33:34.8852536Z 236 |         for venv_dir in [".venv", "venv", "env", ".env"]:
2025-06-06T03:33:34.8852725Z 237 |             if os.path.isdir(venv_dir) and os.path.isfile(
2025-06-06T03:33:34.8852864Z     |                                            ^^^^^^^^^^^^^^ PTH113
2025-06-06T03:33:34.8853032Z 238 |                 os.path.join(venv_dir, "pyvenv.cfg")
2025-06-06T03:33:34.8853118Z 239 |             ):
2025-06-06T03:33:34.8853183Z     |
2025-06-06T03:33:34.8853193Z 
2025-06-06T03:33:34.8853546Z test_bandit_config.py:238:17: PTH118 `os.path.join()` should be replaced by `Path` with `/` operator
2025-06-06T03:33:34.8853613Z     |
2025-06-06T03:33:34.8853799Z 236 |         for venv_dir in [".venv", "venv", "env", ".env"]:
2025-06-06T03:33:34.8854156Z 237 |             if os.path.isdir(venv_dir) and os.path.isfile(
2025-06-06T03:33:34.8854328Z 238 |                 os.path.join(venv_dir, "pyvenv.cfg")
2025-06-06T03:33:34.8854540Z     |                 ^^^^^^^^^^^^ PTH118
2025-06-06T03:33:34.8854628Z 239 |             ):
2025-06-06T03:33:34.8854746Z 240 |                 return True
2025-06-06T03:33:34.8854818Z     |
2025-06-06T03:33:34.8854825Z 
2025-06-06T03:33:34.8855132Z test_bandit_config.py:243:9: TRY300 Consider moving this statement to an `else` block
2025-06-06T03:33:34.8855198Z     |
2025-06-06T03:33:34.8855344Z 242 |         # Not in a virtual environment
2025-06-06T03:33:34.8855437Z 243 |         return False
2025-06-06T03:33:34.8855536Z     |         ^^^^^^^^^^^^ TRY300
2025-06-06T03:33:34.8855655Z 244 |     except Exception as e:
2025-06-06T03:33:34.8855948Z 245 |         # If any error occurs, log it but assume we're not in a virtual environment
2025-06-06T03:33:34.8856015Z     |
2025-06-06T03:33:34.8856026Z 
2025-06-06T03:33:34.8856305Z test_bandit_config.py:244:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T03:33:34.8856382Z     |
2025-06-06T03:33:34.8856532Z 242 |         # Not in a virtual environment
2025-06-06T03:33:34.8856623Z 243 |         return False
2025-06-06T03:33:34.8856744Z 244 |     except Exception as e:
2025-06-06T03:33:34.8856839Z     |            ^^^^^^^^^ BLE001
2025-06-06T03:33:34.8857107Z 245 |         # If any error occurs, log it but assume we're not in a virtual environment
2025-06-06T03:33:34.8857474Z 246 |         logger.warning("Error checking for virtual environment: %s", e)
2025-06-06T03:33:34.8857547Z     |
2025-06-06T03:33:34.8857555Z 
2025-06-06T03:33:34.8857810Z test_mem0.py:45:9: TRY300 Consider moving this statement to an `else` block
2025-06-06T03:33:34.8857877Z    |
2025-06-06T03:33:34.8857969Z 43 |             return True
2025-06-06T03:33:34.8858180Z 44 |         logger.warning("Memory search returned no results.")
2025-06-06T03:33:34.8858274Z 45 |         return False
2025-06-06T03:33:34.8858370Z    |         ^^^^^^^^^^^^ TRY300
2025-06-06T03:33:34.8858436Z 46 |
2025-06-06T03:33:34.8858636Z 47 |     except (ImportError, ConnectionError, ValueError):
2025-06-06T03:33:34.8858704Z    |
2025-06-06T03:33:34.8858711Z 
2025-06-06T03:33:34.8859109Z test_mem0_integration.py:14:5: ANN201 Missing return type annotation for public function `test_mem0_import`
2025-06-06T03:33:34.8859176Z    |
2025-06-06T03:33:34.8859279Z 14 | def test_mem0_import():
2025-06-06T03:33:34.8859372Z    |     ^^^^^^^^^^^^^^^^ ANN201
2025-06-06T03:33:34.8859524Z 15 |     """Test that mem0 can be imported."""
2025-06-06T03:33:34.8859595Z 16 |     try:
2025-06-06T03:33:34.8859665Z    |
2025-06-06T03:33:34.8859825Z    = help: Add return type annotation: `Optional[bool]`
2025-06-06T03:33:34.8859837Z 
2025-06-06T03:33:34.8860081Z test_mem0_integration.py:19:21: G004 Logging statement uses f-string
2025-06-06T03:33:34.8860150Z    |
2025-06-06T03:33:34.8860281Z 17 |         import mem0  # nosec B404
2025-06-06T03:33:34.8860351Z 18 |
2025-06-06T03:33:34.8860625Z 19 |         logger.info(f"Successfully imported mem0 version {mem0.__version__}")
2025-06-06T03:33:34.8860782Z    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T03:33:34.8860873Z 20 |         return True
2025-06-06T03:33:34.8861000Z 21 |     except ImportError as e:
2025-06-06T03:33:34.8861069Z    |
2025-06-06T03:33:34.8861076Z 
2025-06-06T03:33:34.8861381Z test_mem0_integration.py:20:9: TRY300 Consider moving this statement to an `else` block
2025-06-06T03:33:34.8861448Z    |
2025-06-06T03:33:34.8861711Z 19 |         logger.info(f"Successfully imported mem0 version {mem0.__version__}")
2025-06-06T03:33:34.8861800Z 20 |         return True
2025-06-06T03:33:34.8861899Z    |         ^^^^^^^^^^^ TRY300
2025-06-06T03:33:34.8862018Z 21 |     except ImportError as e:
2025-06-06T03:33:34.8862195Z 22 |         logger.error(f"Failed to import mem0: {e}")
2025-06-06T03:33:34.8862383Z    |
2025-06-06T03:33:34.8862390Z 
2025-06-06T03:33:34.8862708Z test_mem0_integration.py:22:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T03:33:34.8862775Z    |
2025-06-06T03:33:34.8862970Z 20 |         return True
2025-06-06T03:33:34.8863092Z 21 |     except ImportError as e:
2025-06-06T03:33:34.8863266Z 22 |         logger.error(f"Failed to import mem0: {e}")
2025-06-06T03:33:34.8863397Z    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T03:33:34.8863494Z 23 |         return False
2025-06-06T03:33:34.8863561Z    |
2025-06-06T03:33:34.8863679Z    = help: Replace with `exception`
2025-06-06T03:33:34.8863687Z 
2025-06-06T03:33:34.8863928Z test_mem0_integration.py:22:22: G004 Logging statement uses f-string
2025-06-06T03:33:34.8864000Z    |
2025-06-06T03:33:34.8864088Z 20 |         return True
2025-06-06T03:33:34.8864213Z 21 |     except ImportError as e:
2025-06-06T03:33:34.8864377Z 22 |         logger.error(f"Failed to import mem0: {e}")
2025-06-06T03:33:34.8864511Z    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T03:33:34.8864601Z 23 |         return False
2025-06-06T03:33:34.8864672Z    |
2025-06-06T03:33:34.8864680Z 
2025-06-06T03:33:34.8865098Z test_mem0_integration.py:26:5: ANN201 Missing return type annotation for public function `test_mem0_dependencies`
2025-06-06T03:33:34.8865173Z    |
2025-06-06T03:33:34.8865301Z 26 | def test_mem0_dependencies():
2025-06-06T03:33:34.8865409Z    |     ^^^^^^^^^^^^^^^^^^^^^^ ANN201
2025-06-06T03:33:34.8865585Z 27 |     """Test that mem0 dependencies are installed."""
2025-06-06T03:33:34.8865781Z 28 |     dependencies = ["qdrant_client", "openai", "pytz"]
2025-06-06T03:33:34.8865848Z    |
2025-06-06T03:33:34.8865968Z    = help: Add return type annotation
2025-06-06T03:33:34.8865976Z 
2025-06-06T03:33:34.8866219Z test_mem0_integration.py:37:25: G004 Logging statement uses f-string
2025-06-06T03:33:34.8866286Z    |
2025-06-06T03:33:34.8866463Z 36 |             importlib.import_module(dep)  # nosec B403
2025-06-06T03:33:34.8866645Z 37 |             logger.info(f"Successfully imported {dep}")
2025-06-06T03:33:34.8866780Z    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T03:33:34.8866904Z 38 |         except ImportError as e:
2025-06-06T03:33:34.8867092Z 39 |             logger.error(f"Failed to import {dep}: {e}")
2025-06-06T03:33:34.8867157Z    |
2025-06-06T03:33:34.8867164Z 
2025-06-06T03:33:34.8867702Z test_mem0_integration.py:38:9: PERF203 `try`-`except` within a loop incurs performance overhead
2025-06-06T03:33:34.8867772Z    |
2025-06-06T03:33:34.8867954Z 36 |               importlib.import_module(dep)  # nosec B403
2025-06-06T03:33:34.8868136Z 37 |               logger.info(f"Successfully imported {dep}")
2025-06-06T03:33:34.8868273Z 38 | /         except ImportError as e:
2025-06-06T03:33:34.8868453Z 39 | |             logger.error(f"Failed to import {dep}: {e}")
2025-06-06T03:33:34.8868589Z 40 | |             all_installed = False
2025-06-06T03:33:34.8868712Z    | |_________________________________^ PERF203
2025-06-06T03:33:34.8868788Z 41 |
2025-06-06T03:33:34.8868905Z 42 |       if not all_installed:
2025-06-06T03:33:34.8868976Z    |
2025-06-06T03:33:34.8868983Z 
2025-06-06T03:33:34.8869298Z test_mem0_integration.py:39:13: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T03:33:34.8869370Z    |
2025-06-06T03:33:34.8869545Z 37 |             logger.info(f"Successfully imported {dep}")
2025-06-06T03:33:34.8869674Z 38 |         except ImportError as e:
2025-06-06T03:33:34.8869851Z 39 |             logger.error(f"Failed to import {dep}: {e}")
2025-06-06T03:33:34.8869986Z    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T03:33:34.8870108Z 40 |             all_installed = False
2025-06-06T03:33:34.8870180Z    |
2025-06-06T03:33:34.8870290Z    = help: Replace with `exception`
2025-06-06T03:33:34.8870298Z 
2025-06-06T03:33:34.8870533Z test_mem0_integration.py:39:26: G004 Logging statement uses f-string
2025-06-06T03:33:34.8870599Z    |
2025-06-06T03:33:34.8870916Z 37 |             logger.info(f"Successfully imported {dep}")
2025-06-06T03:33:34.8871041Z 38 |         except ImportError as e:
2025-06-06T03:33:34.8871325Z 39 |             logger.error(f"Failed to import {dep}: {e}")
2025-06-06T03:33:34.8871462Z    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T03:33:34.8871595Z 40 |             all_installed = False
2025-06-06T03:33:34.8871661Z    |
2025-06-06T03:33:34.8871673Z 
2025-06-06T03:33:34.8872114Z test_mem0_integration.py:47:5: ANN201 Missing return type annotation for public function `test_mem0_basic_functionality`
2025-06-06T03:33:34.8872184Z    |
2025-06-06T03:33:34.8872324Z 47 | def test_mem0_basic_functionality():
2025-06-06T03:33:34.8872437Z    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ANN201
2025-06-06T03:33:34.8872580Z 48 |     """Test basic mem0 functionality."""
2025-06-06T03:33:34.8872656Z 49 |     try:
2025-06-06T03:33:34.8872722Z    |
2025-06-06T03:33:34.8872881Z    = help: Add return type annotation: `Optional[bool]`
2025-06-06T03:33:34.8872892Z 
2025-06-06T03:33:34.8873198Z test_mem0_integration.py:56:9: TRY300 Consider moving this statement to an `else` block
2025-06-06T03:33:34.8873269Z    |
2025-06-06T03:33:34.8873472Z 55 |         logger.info("Successfully created Memory instance")
2025-06-06T03:33:34.8873570Z 56 |         return True
2025-06-06T03:33:34.8873665Z    |         ^^^^^^^^^^^ TRY300
2025-06-06T03:33:34.8873785Z 57 |     except Exception as e:
2025-06-06T03:33:34.8874026Z 58 |         logger.error(f"Failed to test basic mem0 functionality: {e}")
2025-06-06T03:33:34.8874094Z    |
2025-06-06T03:33:34.8874102Z 
2025-06-06T03:33:34.8874379Z test_mem0_integration.py:57:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T03:33:34.8874453Z    |
2025-06-06T03:33:34.8874647Z 55 |         logger.info("Successfully created Memory instance")
2025-06-06T03:33:34.8874742Z 56 |         return True
2025-06-06T03:33:34.8874860Z 57 |     except Exception as e:
2025-06-06T03:33:34.8874960Z    |            ^^^^^^^^^ BLE001
2025-06-06T03:33:34.8875193Z 58 |         logger.error(f"Failed to test basic mem0 functionality: {e}")
2025-06-06T03:33:34.8875285Z 59 |         return False
2025-06-06T03:33:34.8875352Z    |
2025-06-06T03:33:34.8875362Z 
2025-06-06T03:33:34.8875677Z test_mem0_integration.py:58:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T03:33:34.8875744Z    |
2025-06-06T03:33:34.8875838Z 56 |         return True
2025-06-06T03:33:34.8875957Z 57 |     except Exception as e:
2025-06-06T03:33:34.8876190Z 58 |         logger.error(f"Failed to test basic mem0 functionality: {e}")
2025-06-06T03:33:34.8876331Z    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T03:33:34.8876426Z 59 |         return False
2025-06-06T03:33:34.8876491Z    |
2025-06-06T03:33:34.8876605Z    = help: Replace with `exception`
2025-06-06T03:33:34.8876613Z 
2025-06-06T03:33:34.8876848Z test_mem0_integration.py:58:22: G004 Logging statement uses f-string
2025-06-06T03:33:34.8876928Z    |
2025-06-06T03:33:34.8877017Z 56 |         return True
2025-06-06T03:33:34.8877138Z 57 |     except Exception as e:
2025-06-06T03:33:34.8877473Z 58 |         logger.error(f"Failed to test basic mem0 functionality: {e}")
2025-06-06T03:33:34.8877620Z    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T03:33:34.8877709Z 59 |         return False
2025-06-06T03:33:34.8877782Z    |
2025-06-06T03:33:34.8877790Z 
2025-06-06T03:33:34.8878041Z test_python.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8878109Z   |
2025-06-06T03:33:34.8878212Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8878310Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8878468Z 2 | """Test if Python is working correctly."""
2025-06-06T03:33:34.8878534Z   |
2025-06-06T03:33:34.8878542Z 
2025-06-06T03:33:34.8878840Z test_python.py:8:5: ANN201 Missing return type annotation for public function `main`
2025-06-06T03:33:34.8878908Z    |
2025-06-06T03:33:34.8879107Z  8 | def main():
2025-06-06T03:33:34.8879183Z    |     ^^^^ ANN201
2025-06-06T03:33:34.8879334Z  9 |     """Print Python environment information."""
2025-06-06T03:33:34.8879608Z 10 |     print(f"Python executable: {sys.executable}")
2025-06-06T03:33:34.8879684Z    |
2025-06-06T03:33:34.8879816Z    = help: Add return type annotation: `None`
2025-06-06T03:33:34.8879824Z 
2025-06-06T03:33:34.8879969Z test_python.py:10:5: T201 `print` found
2025-06-06T03:33:34.8880035Z    |
2025-06-06T03:33:34.8880116Z  8 | def main():
2025-06-06T03:33:34.8880255Z  9 |     """Print Python environment information."""
2025-06-06T03:33:34.8880430Z 10 |     print(f"Python executable: {sys.executable}")
2025-06-06T03:33:34.8880505Z    |     ^^^^^ T201
2025-06-06T03:33:34.8880665Z 11 |     print(f"Python version: {sys.version}")
2025-06-06T03:33:34.8880853Z 12 |     print(f"Current working directory: {os.getcwd()}")
2025-06-06T03:33:34.8880924Z    |
2025-06-06T03:33:34.8881009Z    = help: Remove `print`
2025-06-06T03:33:34.8881021Z 
2025-06-06T03:33:34.8881161Z test_python.py:11:5: T201 `print` found
2025-06-06T03:33:34.8881226Z    |
2025-06-06T03:33:34.8881365Z  9 |     """Print Python environment information."""
2025-06-06T03:33:34.8881534Z 10 |     print(f"Python executable: {sys.executable}")
2025-06-06T03:33:34.8881685Z 11 |     print(f"Python version: {sys.version}")
2025-06-06T03:33:34.8881758Z    |     ^^^^^ T201
2025-06-06T03:33:34.8881944Z 12 |     print(f"Current working directory: {os.getcwd()}")
2025-06-06T03:33:34.8882018Z 13 |     print(
2025-06-06T03:33:34.8882090Z    |
2025-06-06T03:33:34.8882173Z    = help: Remove `print`
2025-06-06T03:33:34.8882180Z 
2025-06-06T03:33:34.8882319Z test_python.py:12:5: T201 `print` found
2025-06-06T03:33:34.8882386Z    |
2025-06-06T03:33:34.8882560Z 10 |     print(f"Python executable: {sys.executable}")
2025-06-06T03:33:34.8882709Z 11 |     print(f"Python version: {sys.version}")
2025-06-06T03:33:34.8882891Z 12 |     print(f"Current working directory: {os.getcwd()}")
2025-06-06T03:33:34.8882969Z    |     ^^^^^ T201
2025-06-06T03:33:34.8883047Z 13 |     print(
2025-06-06T03:33:34.8883505Z 14 |         f"Is virtual environment: {hasattr(sys, 'real_prefix') or (hasattr(sys, 'base_prefix') and sys.base_prefix != sys.prefix)}"
2025-06-06T03:33:34.8883578Z    |
2025-06-06T03:33:34.8883661Z    = help: Remove `print`
2025-06-06T03:33:34.8883673Z 
2025-06-06T03:33:34.8883940Z test_python.py:12:41: PTH109 `os.getcwd()` should be replaced by `Path.cwd()`
2025-06-06T03:33:34.8884010Z    |
2025-06-06T03:33:34.8884180Z 10 |     print(f"Python executable: {sys.executable}")
2025-06-06T03:33:34.8884333Z 11 |     print(f"Python version: {sys.version}")
2025-06-06T03:33:34.8884508Z 12 |     print(f"Current working directory: {os.getcwd()}")
2025-06-06T03:33:34.8884638Z    |                                         ^^^^^^^^^ PTH109
2025-06-06T03:33:34.8884711Z 13 |     print(
2025-06-06T03:33:34.8885156Z 14 |         f"Is virtual environment: {hasattr(sys, 'real_prefix') or (hasattr(sys, 'base_prefix') and sys.base_prefix != sys.prefix)}"
2025-06-06T03:33:34.8885227Z    |
2025-06-06T03:33:34.8885234Z 
2025-06-06T03:33:34.8885376Z test_python.py:13:5: T201 `print` found
2025-06-06T03:33:34.8885442Z    |
2025-06-06T03:33:34.8885599Z 11 |     print(f"Python version: {sys.version}")
2025-06-06T03:33:34.8885778Z 12 |     print(f"Current working directory: {os.getcwd()}")
2025-06-06T03:33:34.8885856Z 13 |     print(
2025-06-06T03:33:34.8885930Z    |     ^^^^^ T201
2025-06-06T03:33:34.8886371Z 14 |         f"Is virtual environment: {hasattr(sys, 'real_prefix') or (hasattr(sys, 'base_prefix') and sys.base_prefix != sys.prefix)}"
2025-06-06T03:33:34.8886441Z 15 |     )
2025-06-06T03:33:34.8886514Z    |
2025-06-06T03:33:34.8886598Z    = help: Remove `print`
2025-06-06T03:33:34.8886606Z 
2025-06-06T03:33:34.8886744Z test_python.py:16:5: T201 `print` found
2025-06-06T03:33:34.8886809Z    |
2025-06-06T03:33:34.8887340Z 14 |         f"Is virtual environment: {hasattr(sys, 'real_prefix') or (hasattr(sys, 'base_prefix') and sys.base_prefix != sys.prefix)}"
2025-06-06T03:33:34.8887531Z 15 |     )
2025-06-06T03:33:34.8887682Z 16 |     print(f"sys.prefix: {sys.prefix}")
2025-06-06T03:33:34.8887753Z    |     ^^^^^ T201
2025-06-06T03:33:34.8887989Z 17 |     if hasattr(sys, "base_prefix"):
2025-06-06T03:33:34.8888172Z 18 |         print(f"sys.base_prefix: {sys.base_prefix}")
2025-06-06T03:33:34.8888246Z    |
2025-06-06T03:33:34.8888330Z    = help: Remove `print`
2025-06-06T03:33:34.8888337Z 
2025-06-06T03:33:34.8888477Z test_python.py:18:9: T201 `print` found
2025-06-06T03:33:34.8888544Z    |
2025-06-06T03:33:34.8888690Z 16 |     print(f"sys.prefix: {sys.prefix}")
2025-06-06T03:33:34.8888825Z 17 |     if hasattr(sys, "base_prefix"):
2025-06-06T03:33:34.8889003Z 18 |         print(f"sys.base_prefix: {sys.base_prefix}")
2025-06-06T03:33:34.8889079Z    |         ^^^^^ T201
2025-06-06T03:33:34.8889150Z    |
2025-06-06T03:33:34.8889232Z    = help: Remove `print`
2025-06-06T03:33:34.8889239Z 
2025-06-06T03:33:34.8889536Z test_security_reports.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8889608Z   |
2025-06-06T03:33:34.8889715Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8889812Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8889889Z 2 | """
2025-06-06T03:33:34.8890130Z 3 | Test script to verify that security reports are properly created.
2025-06-06T03:33:34.8890199Z   |
2025-06-06T03:33:34.8890206Z 
2025-06-06T03:33:34.8890497Z test_security_reports.py:78:14: PTH123 `open()` should be replaced by `Path.open()`
2025-06-06T03:33:34.8890567Z    |
2025-06-06T03:33:34.8890636Z 77 |     try:
2025-06-06T03:33:34.8890786Z 78 |         with open(bandit_results) as f:
2025-06-06T03:33:34.8890867Z    |              ^^^^ PTH123
2025-06-06T03:33:34.8890967Z 79 |             json.load(f)
2025-06-06T03:33:34.8891160Z 80 |         logger.info("bandit-results.json is valid JSON")
2025-06-06T03:33:34.8891231Z    |
2025-06-06T03:33:34.8891238Z 
2025-06-06T03:33:34.8891555Z test_security_reports.py:82:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T03:33:34.8891625Z    |
2025-06-06T03:33:34.8891817Z 80 |         logger.info("bandit-results.json is valid JSON")
2025-06-06T03:33:34.8891999Z 81 |     except (json.JSONDecodeError, Exception) as e:
2025-06-06T03:33:34.8892242Z 82 |         logger.error("bandit-results.json is not valid JSON: %s", e)
2025-06-06T03:33:34.8892387Z    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T03:33:34.8892483Z 83 |         return False
2025-06-06T03:33:34.8892550Z    |
2025-06-06T03:33:34.8892668Z    = help: Replace with `exception`
2025-06-06T03:33:34.8892675Z 
2025-06-06T03:33:34.8892958Z test_security_reports.py:86:14: PTH123 `open()` should be replaced by `Path.open()`
2025-06-06T03:33:34.8893030Z    |
2025-06-06T03:33:34.8893101Z 85 |     try:
2025-06-06T03:33:34.8893259Z 86 |         with open(bandit_results_ini) as f:
2025-06-06T03:33:34.8893337Z    |              ^^^^ PTH123
2025-06-06T03:33:34.8893436Z 87 |             json.load(f)
2025-06-06T03:33:34.8893645Z 88 |         logger.info("bandit-results-ini.json is valid JSON")
2025-06-06T03:33:34.8893716Z    |
2025-06-06T03:33:34.8893723Z 
2025-06-06T03:33:34.8894035Z test_security_reports.py:90:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T03:33:34.8894107Z    |
2025-06-06T03:33:34.8894306Z 88 |         logger.info("bandit-results-ini.json is valid JSON")
2025-06-06T03:33:34.8894485Z 89 |     except (json.JSONDecodeError, Exception) as e:
2025-06-06T03:33:34.8894734Z 90 |         logger.error("bandit-results-ini.json is not valid JSON: %s", e)
2025-06-06T03:33:34.8894881Z    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T03:33:34.8894971Z 91 |         return False
2025-06-06T03:33:34.8895042Z    |
2025-06-06T03:33:34.8895154Z    = help: Replace with `exception`
2025-06-06T03:33:34.8895161Z 
2025-06-06T03:33:34.8895613Z test_security_reports.py:97:5: D401 First line of docstring should be in imperative mood: "Main entry point for the script."
2025-06-06T03:33:34.8895768Z     |
2025-06-06T03:33:34.8895866Z  96 |   def main() -> int:
2025-06-06T03:33:34.8895941Z  97 | /     """
2025-06-06T03:33:34.8896146Z  98 | |     Main entry point for the script.
2025-06-06T03:33:34.8896219Z  99 | |
2025-06-06T03:33:34.8896312Z 100 | |     Returns:
2025-06-06T03:33:34.8896485Z 101 | |         int: 0 if all checks pass, 1 otherwise
2025-06-06T03:33:34.8896560Z 102 | |
2025-06-06T03:33:34.8896630Z 103 | |     """
2025-06-06T03:33:34.8896711Z     | |_______^ D401
2025-06-06T03:33:34.8896905Z 104 |       # Check if the security-reports directory exists
2025-06-06T03:33:34.8897066Z 105 |       if not check_security_reports_dir():
2025-06-06T03:33:34.8897132Z     |
2025-06-06T03:33:34.8897144Z 
2025-06-06T03:33:34.8897622Z test_security_reports.py:108:13: PTH103 `os.makedirs()` should be replaced by `Path.mkdir(parents=True)`
2025-06-06T03:33:34.8897698Z     |
2025-06-06T03:33:34.8897840Z 106 |         # Try to create the directory
2025-06-06T03:33:34.8897932Z 107 |         try:
2025-06-06T03:33:34.8898129Z 108 |             os.makedirs("security-reports", exist_ok=True)
2025-06-06T03:33:34.8898241Z     |             ^^^^^^^^^^^ PTH103
2025-06-06T03:33:34.8898454Z 109 |             logger.info("Created security-reports directory")
2025-06-06T03:33:34.8898582Z 110 |         except Exception as e:
2025-06-06T03:33:34.8898651Z     |
2025-06-06T03:33:34.8898659Z 
2025-06-06T03:33:34.8898947Z test_security_reports.py:110:16: BLE001 Do not catch blind exception: `Exception`
2025-06-06T03:33:34.8899015Z     |
2025-06-06T03:33:34.8899211Z 108 |             os.makedirs("security-reports", exist_ok=True)
2025-06-06T03:33:34.8899412Z 109 |             logger.info("Created security-reports directory")
2025-06-06T03:33:34.8899541Z 110 |         except Exception as e:
2025-06-06T03:33:34.8899646Z     |                ^^^^^^^^^ BLE001
2025-06-06T03:33:34.8899917Z 111 |             logger.error("Failed to create security-reports directory: %s", e)
2025-06-06T03:33:34.8900012Z 112 |             return 1
2025-06-06T03:33:34.8900085Z     |
2025-06-06T03:33:34.8900091Z 
2025-06-06T03:33:34.8900414Z test_security_reports.py:111:13: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T03:33:34.8900487Z     |
2025-06-06T03:33:34.8900687Z 109 |             logger.info("Created security-reports directory")
2025-06-06T03:33:34.8900815Z 110 |         except Exception as e:
2025-06-06T03:33:34.8901073Z 111 |             logger.error("Failed to create security-reports directory: %s", e)
2025-06-06T03:33:34.8901232Z     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T03:33:34.8901324Z 112 |             return 1
2025-06-06T03:33:34.8901398Z     |
2025-06-06T03:33:34.8901514Z     = help: Replace with `exception`
2025-06-06T03:33:34.8901527Z 
2025-06-06T03:33:34.8901861Z test_security_reports.py:120:13: S603 `subprocess` call: check for execution of untrusted input
2025-06-06T03:33:34.8901937Z     |
2025-06-06T03:33:34.8902063Z 118 |             import subprocess
2025-06-06T03:33:34.8902180Z 119 |
2025-06-06T03:33:34.8902416Z 120 |             subprocess.run(
2025-06-06T03:33:34.8902630Z     |             ^^^^^^^^^^^^^^ S603
2025-06-06T03:33:34.8902965Z 121 |                 [sys.executable, "test_bandit_config.py"],
2025-06-06T03:33:34.8903185Z 122 |                 check=False,
2025-06-06T03:33:34.8903312Z     |
2025-06-06T03:33:34.8903326Z 
2025-06-06T03:33:34.8903860Z test_security_reports.py:127:16: BLE001 Do not catch blind exception: `Exception`
2025-06-06T03:33:34.8903983Z     |
2025-06-06T03:33:34.8904127Z 125 |             )
2025-06-06T03:33:34.8904454Z 126 |             logger.info("Ran test_bandit_config.py")
2025-06-06T03:33:34.8904669Z 127 |         except Exception as e:
2025-06-06T03:33:34.8904849Z     |                ^^^^^^^^^ BLE001
2025-06-06T03:33:34.8905249Z 128 |             logger.error("Failed to run test_bandit_config.py: %s", e)
2025-06-06T03:33:34.8905416Z 129 |             return 1
2025-06-06T03:33:34.8905723Z     |
2025-06-06T03:33:34.8905735Z 
2025-06-06T03:33:34.8906314Z test_security_reports.py:128:13: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T03:33:34.8906713Z     |
2025-06-06T03:33:34.8907060Z 126 |             logger.info("Ran test_bandit_config.py")
2025-06-06T03:33:34.8907471Z 127 |         except Exception as e:
2025-06-06T03:33:34.8907909Z 128 |             logger.error("Failed to run test_bandit_config.py: %s", e)
2025-06-06T03:33:34.8908169Z     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T03:33:34.8908327Z 129 |             return 1
2025-06-06T03:33:34.8908402Z     |
2025-06-06T03:33:34.8908525Z     = help: Replace with `exception`
2025-06-06T03:33:34.8908533Z 
2025-06-06T03:33:34.8909205Z tests/adk_demo/test_mem0_enhanced_adk_agents.py:1:1: INP001 File `tests/adk_demo/test_mem0_enhanced_adk_agents.py` is part of an implicit namespace package. Add an `__init__.py`.
2025-06-06T03:33:34.8909648Z tests/adk_demo/test_mem0_enhanced_adk_agents.py:159:17: SLF001 Private member accessed: `_extract_query_from_message`
2025-06-06T03:33:34.8909726Z     |
2025-06-06T03:33:34.8909916Z 157 |         """Test extracting a query from a message."""
2025-06-06T03:33:34.8910082Z 158 |         # Extract query from gather message
2025-06-06T03:33:34.8910352Z 159 |         query = self.gatherer._extract_query_from_message(self.message_mock)
2025-06-06T03:33:34.8910495Z     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T03:33:34.8910633Z 160 |         assert query == "Test query"
2025-06-06T03:33:34.8910708Z     |
2025-06-06T03:33:34.8910715Z 
2025-06-06T03:33:34.8911144Z tests/adk_demo/test_mem0_enhanced_adk_agents.py:166:17: SLF001 Private member accessed: `_extract_query_from_message`
2025-06-06T03:33:34.8911221Z     |
2025-06-06T03:33:34.8911384Z 164 |         summarize_message.type = "summarize"
2025-06-06T03:33:34.8911592Z 165 |         summarize_message.payload = {"data": "Test data"}
2025-06-06T03:33:34.8911858Z 166 |         query = self.gatherer._extract_query_from_message(summarize_message)
2025-06-06T03:33:34.8912001Z     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T03:33:34.8912145Z 167 |         assert query == "Test data"
2025-06-06T03:33:34.8912218Z     |
2025-06-06T03:33:34.8912226Z 
2025-06-06T03:33:34.8912647Z tests/adk_demo/test_mem0_enhanced_adk_agents.py:173:17: SLF001 Private member accessed: `_extract_query_from_message`
2025-06-06T03:33:34.8912723Z     |
2025-06-06T03:33:34.8912878Z 171 |         unknown_message.type = "unknown"
2025-06-06T03:33:34.8913051Z 172 |         unknown_message.sender = "test-sender"
2025-06-06T03:33:34.8913308Z 173 |         query = self.gatherer._extract_query_from_message(unknown_message)
2025-06-06T03:33:34.8913446Z     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T03:33:34.8913580Z 174 |         assert "unknown" in query
2025-06-06T03:33:34.8913719Z 175 |         assert "test-sender" in query
2025-06-06T03:33:34.8913813Z     |
2025-06-06T03:33:34.8913821Z 
2025-06-06T03:33:34.8914198Z tests/adk_demo/test_mem0_enhanced_adk_agents.py:180:9: SLF001 Private member accessed: `_store_memory`
2025-06-06T03:33:34.8914276Z     |
2025-06-06T03:33:34.8914414Z 178 |         """Test storing a memory."""
2025-06-06T03:33:34.8914537Z 179 |         # Store a memory
2025-06-06T03:33:34.8914678Z 180 |         self.gatherer._store_memory(
2025-06-06T03:33:34.8914799Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T03:33:34.8914934Z 181 |             "Test memory content",
2025-06-06T03:33:34.8915103Z 182 |             metadata={"test_key": "test_value"},
2025-06-06T03:33:34.8915172Z     |
2025-06-06T03:33:34.8915179Z 
2025-06-06T03:33:34.8915604Z tests/adk_demo/test_mem0_enhanced_adk_agents.py:195:20: SLF001 Private member accessed: `_retrieve_relevant_memories`
2025-06-06T03:33:34.8915674Z     |
2025-06-06T03:33:34.8915845Z 193 |         """Test retrieving relevant memories."""
2025-06-06T03:33:34.8916109Z 194 |         # Retrieve memories
2025-06-06T03:33:34.8916333Z 195 |         memories = self.gatherer._retrieve_relevant_memories(
2025-06-06T03:33:34.8916571Z     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T03:33:34.8916706Z 196 |             query="Test query",
2025-06-06T03:33:34.8916799Z 197 |             limit=5,
2025-06-06T03:33:34.8916873Z     |
2025-06-06T03:33:34.8916880Z 
2025-06-06T03:33:34.8917466Z tests/adk_demo/test_mem0_enhanced_adk_agents.py:213:9: SLF001 Private member accessed: `_store_interaction`
2025-06-06T03:33:34.8917550Z     |
2025-06-06T03:33:34.8917709Z 211 |         """Test storing an interaction."""
2025-06-06T03:33:34.8917847Z 212 |         # Store an interaction
2025-06-06T03:33:34.8918132Z 213 |         self.gatherer._store_interaction(self.message_mock, self.response_mock)
2025-06-06T03:33:34.8918261Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T03:33:34.8918333Z 214 |
2025-06-06T03:33:34.8918506Z 215 |         # Check that the interaction was stored
2025-06-06T03:33:34.8918576Z     |
2025-06-06T03:33:34.8918588Z 
2025-06-06T03:33:34.8918989Z tests/agent_team/test_mem0_enhanced_agents.py:158:9: F841 Local variable `task` is assigned to but never used
2025-06-06T03:33:34.8919063Z     |
2025-06-06T03:33:34.8919216Z 156 |             backstory="Expert researcher",
2025-06-06T03:33:34.8919295Z 157 |         )
2025-06-06T03:33:34.8919431Z 158 |         task = self.team.add_task(
2025-06-06T03:33:34.8919515Z     |         ^^^^ F841
2025-06-06T03:33:34.8919695Z 159 |             description="Research AI memory systems",
2025-06-06T03:33:34.8919813Z 160 |             agent=agent,
2025-06-06T03:33:34.8919882Z     |
2025-06-06T03:33:34.8920043Z     = help: Remove assignment to unused variable `task`
2025-06-06T03:33:34.8920050Z 
2025-06-06T03:33:34.8920415Z tests/agent_team/test_mem0_enhanced_agents.py:177:9: SLF001 Private member accessed: `_store_memory`
2025-06-06T03:33:34.8920490Z     |
2025-06-06T03:33:34.8920631Z 175 |         """Test storing a memory."""
2025-06-06T03:33:34.8920748Z 176 |         # Store a memory
2025-06-06T03:33:34.8920878Z 177 |         self.team._store_memory(
2025-06-06T03:33:34.8921001Z     |         ^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T03:33:34.8921133Z 178 |             "Test memory content",
2025-06-06T03:33:34.8921301Z 179 |             metadata={"test_key": "test_value"},
2025-06-06T03:33:34.8921370Z     |
2025-06-06T03:33:34.8921378Z 
2025-06-06T03:33:34.8921805Z tests/agent_team/test_mem0_enhanced_agents.py:192:20: SLF001 Private member accessed: `_retrieve_relevant_memories`
2025-06-06T03:33:34.8921875Z     |
2025-06-06T03:33:34.8922044Z 190 |         """Test retrieving relevant memories."""
2025-06-06T03:33:34.8922164Z 191 |         # Retrieve memories
2025-06-06T03:33:34.8922364Z 192 |         memories = self.team._retrieve_relevant_memories(
2025-06-06T03:33:34.8922503Z     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T03:33:34.8922637Z 193 |             query="Test query",
2025-06-06T03:33:34.8922731Z 194 |             limit=5,
2025-06-06T03:33:34.8922806Z     |
2025-06-06T03:33:34.8922813Z 
2025-06-06T03:33:34.8923233Z tests/agent_team/test_mem0_enhanced_agents.py:216:9: SLF001 Private member accessed: `_retrieve_relevant_memories`
2025-06-06T03:33:34.8923310Z     |
2025-06-06T03:33:34.8923501Z 215 |         # Mock the _retrieve_relevant_memories method
2025-06-06T03:33:34.8923796Z 216 |         self.team._retrieve_relevant_memories = MagicMock(return_value=memories)
2025-06-06T03:33:34.8923924Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T03:33:34.8924001Z 217 |
2025-06-06T03:33:34.8924132Z 218 |         # Test enhancing context
2025-06-06T03:33:34.8924206Z     |
2025-06-06T03:33:34.8924213Z 
2025-06-06T03:33:34.8924658Z tests/agent_team/test_mem0_enhanced_agents.py:220:28: SLF001 Private member accessed: `_enhance_context_with_memories`
2025-06-06T03:33:34.8924734Z     |
2025-06-06T03:33:34.8924868Z 218 |         # Test enhancing context
2025-06-06T03:33:34.8925203Z 219 |         original_context = "What should I eat for dinner?"
2025-06-06T03:33:34.8925610Z 220 |         enhanced_context = self.team._enhance_context_with_memories(original_context)
2025-06-06T03:33:34.8925762Z     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T03:33:34.8925839Z 221 |
2025-06-06T03:33:34.8926039Z 222 |         # Check that the context was enhanced with memories
2025-06-06T03:33:34.8926113Z     |
2025-06-06T03:33:34.8926121Z 
2025-06-06T03:33:34.8926544Z tests/agent_team/test_mem0_enhanced_agents.py:228:9: SLF001 Private member accessed: `_retrieve_relevant_memories`
2025-06-06T03:33:34.8926618Z     |
2025-06-06T03:33:34.8926779Z 227 |         # Check that memories were retrieved
2025-06-06T03:33:34.8927016Z 228 |         self.team._retrieve_relevant_memories.assert_called_once()
2025-06-06T03:33:34.8927142Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T03:33:34.8927366Z 229 |
2025-06-06T03:33:34.8927551Z 230 |     def test_memory_persistence(self):
2025-06-06T03:33:34.8927623Z     |
2025-06-06T03:33:34.8927631Z 
2025-06-06T03:33:34.8928060Z tests/agent_team/test_mem0_enhanced_agents.py:241:9: SLF001 Private member accessed: `_retrieve_relevant_memories`
2025-06-06T03:33:34.8928134Z     |
2025-06-06T03:33:34.8928295Z 239 |         # Retrieve memories with the new team
2025-06-06T03:33:34.8928454Z 240 |         query = "What are my preferences?"
2025-06-06T03:33:34.8928651Z 241 |         new_team._retrieve_relevant_memories(query=query)
2025-06-06T03:33:34.8928783Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T03:33:34.8928851Z 242 |
2025-06-06T03:33:34.8929085Z 243 |         # Check that memories were retrieved using the same user_id
2025-06-06T03:33:34.8929155Z     |
2025-06-06T03:33:34.8929163Z 
2025-06-06T03:33:34.8929635Z tests/api/test_tool_router.py:63:5: PT006 Wrong type passed to first argument of `pytest.mark.parametrize`; expected `tuple`
2025-06-06T03:33:34.8929708Z    |
2025-06-06T03:33:34.8929847Z 62 | @pytest.mark.parametrize(
2025-06-06T03:33:34.8929955Z 63 |     "endpoint,payload",
2025-06-06T03:33:34.8930062Z    |     ^^^^^^^^^^^^^^^^^^ PT006
2025-06-06T03:33:34.8930138Z 64 |     [
2025-06-06T03:33:34.8930297Z 65 |         ("/tools/add", {"a": 2}),  # missing b
2025-06-06T03:33:34.8930366Z    |
2025-06-06T03:33:34.8930507Z    = help: Use a `tuple` for the first argument
2025-06-06T03:33:34.8930514Z 
2025-06-06T03:33:34.8930879Z tests/common_utils/test_sarif_format.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8930953Z   |
2025-06-06T03:33:34.8931058Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8931159Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8931233Z 2 | """
2025-06-06T03:33:34.8931389Z 3 | Test script to validate SARIF file format.
2025-06-06T03:33:34.8931462Z   |
2025-06-06T03:33:34.8931469Z 
2025-06-06T03:33:34.8931818Z tests/common_utils/test_sarif_utils.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8931893Z   |
2025-06-06T03:33:34.8931991Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8932092Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8932162Z 2 | """
2025-06-06T03:33:34.8932299Z 3 | Test script for sarif_utils.py.
2025-06-06T03:33:34.8932368Z   |
2025-06-06T03:33:34.8932375Z 
2025-06-06T03:33:34.8932707Z tests/common_utils/test_tooling.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8932776Z   |
2025-06-06T03:33:34.8932877Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8932971Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8933043Z 2 | """
2025-06-06T03:33:34.8933193Z 3 | Test script for common_utils/tooling.py.
2025-06-06T03:33:34.8933264Z   |
2025-06-06T03:33:34.8933271Z 
2025-06-06T03:33:34.8933628Z tests/performance/test_artist_agent_benchmark.py:1:1: D400 First line should end with a period
2025-06-06T03:33:34.8933700Z    |
2025-06-06T03:33:34.8933772Z  1 | / """
2025-06-06T03:33:34.8934031Z  2 | | Benchmark: ArtistAgent vs DataGathererAgent (ADK) on Reasoning and Tool Use
2025-06-06T03:33:34.8934224Z  3 | |
2025-06-06T03:33:34.8934472Z  4 | | Runs both agents on a suite of prompts, measuring accuracy and response time.
2025-06-06T03:33:34.8934822Z  5 | | Writes a Markdown summary table to tests/performance/artist_agent_benchmark.md.
2025-06-06T03:33:34.8934900Z  6 | |
2025-06-06T03:33:34.8935242Z  7 | | Extend this script by adding new agents/prompts as new tools or reasoning abilities are added.
2025-06-06T03:33:34.8935318Z  8 | | """
2025-06-06T03:33:34.8935395Z    | |___^ D400
2025-06-06T03:33:34.8935469Z  9 |
2025-06-06T03:33:34.8935545Z 10 |   import os
2025-06-06T03:33:34.8935617Z    |
2025-06-06T03:33:34.8935705Z    = help: Add period
2025-06-06T03:33:34.8935712Z 
2025-06-06T03:33:34.8936216Z tests/performance/test_artist_agent_benchmark.py:1:1: D415 First line should end with a period, question mark, or exclamation point
2025-06-06T03:33:34.8936285Z    |
2025-06-06T03:33:34.8936360Z  1 | / """
2025-06-06T03:33:34.8936608Z  2 | | Benchmark: ArtistAgent vs DataGathererAgent (ADK) on Reasoning and Tool Use
2025-06-06T03:33:34.8936682Z  3 | |
2025-06-06T03:33:34.8936925Z  4 | | Runs both agents on a suite of prompts, measuring accuracy and response time.
2025-06-06T03:33:34.8937175Z  5 | | Writes a Markdown summary table to tests/performance/artist_agent_benchmark.md.
2025-06-06T03:33:34.8937407Z  6 | |
2025-06-06T03:33:34.8937722Z  7 | | Extend this script by adding new agents/prompts as new tools or reasoning abilities are added.
2025-06-06T03:33:34.8937796Z  8 | | """
2025-06-06T03:33:34.8937870Z    | |___^ D415
2025-06-06T03:33:34.8937941Z  9 |
2025-06-06T03:33:34.8938017Z 10 |   import os
2025-06-06T03:33:34.8938089Z    |
2025-06-06T03:33:34.8938206Z    = help: Add closing punctuation
2025-06-06T03:33:34.8938213Z 
2025-06-06T03:33:34.8938599Z tests/performance/test_artist_agent_benchmark.py:68:5: D200 One-line docstring should fit on one line
2025-06-06T03:33:34.8938668Z    |
2025-06-06T03:33:34.8938836Z 67 |   def is_correct(output, expected, kind):
2025-06-06T03:33:34.8938908Z 68 | /     """
2025-06-06T03:33:34.8939172Z 69 | |     Returns True if output matches expected answer for the prompt type.
2025-06-06T03:33:34.8939248Z 70 | |     """
2025-06-06T03:33:34.8939327Z    | |_______^ D200
2025-06-06T03:33:34.8939456Z 71 |       if kind == "arithmetic":
2025-06-06T03:33:34.8939733Z 72 |           # Accept if expected number is in output (handles calc output variants)
2025-06-06T03:33:34.8939803Z    |
2025-06-06T03:33:34.8939915Z    = help: Reformat to one line
2025-06-06T03:33:34.8939923Z 
2025-06-06T03:33:34.8940609Z tests/performance/test_artist_agent_benchmark.py:68:5: D401 First line of docstring should be in imperative mood: "Returns True if output matches expected answer for the prompt type."
2025-06-06T03:33:34.8940682Z    |
2025-06-06T03:33:34.8940838Z 67 |   def is_correct(output, expected, kind):
2025-06-06T03:33:34.8940913Z 68 | /     """
2025-06-06T03:33:34.8941165Z 69 | |     Returns True if output matches expected answer for the prompt type.
2025-06-06T03:33:34.8941246Z 70 | |     """
2025-06-06T03:33:34.8941321Z    | |_______^ D401
2025-06-06T03:33:34.8941449Z 71 |       if kind == "arithmetic":
2025-06-06T03:33:34.8941718Z 72 |           # Accept if expected number is in output (handles calc output variants)
2025-06-06T03:33:34.8941791Z    |
2025-06-06T03:33:34.8941799Z 
2025-06-06T03:33:34.8942192Z tests/performance/test_artist_agent_benchmark.py:94:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T03:33:34.8942266Z    |
2025-06-06T03:33:34.8942338Z 92 |     try:
2025-06-06T03:33:34.8942478Z 93 |         output = agent.run(prompt)
2025-06-06T03:33:34.8942599Z 94 |     except Exception as e:
2025-06-06T03:33:34.8942703Z    |            ^^^^^^^^^ BLE001
2025-06-06T03:33:34.8942837Z 95 |         output = f"Exception: {e}"
2025-06-06T03:33:34.8943045Z 96 |     elapsed = (time.perf_counter() - start) * 1000  # ms
2025-06-06T03:33:34.8943115Z    |
2025-06-06T03:33:34.8943250Z 
2025-06-06T03:33:34.8943652Z tests/performance/test_artist_agent_benchmark.py:111:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T03:33:34.8943728Z     |
2025-06-06T03:33:34.8943802Z 109 |     try:
2025-06-06T03:33:34.8944085Z 110 |         output = agent.skills["gather"].run(query)
2025-06-06T03:33:34.8944216Z 111 |     except Exception as e:
2025-06-06T03:33:34.8944321Z     |            ^^^^^^^^^ BLE001
2025-06-06T03:33:34.8944458Z 112 |         output = f"Exception: {e}"
2025-06-06T03:33:34.8944660Z 113 |     elapsed = (time.perf_counter() - start) * 1000  # ms
2025-06-06T03:33:34.8944730Z     |
2025-06-06T03:33:34.8944737Z 
2025-06-06T03:33:34.8945132Z tests/performance/test_artist_agent_benchmark.py:126:16: BLE001 Do not catch blind exception: `Exception`
2025-06-06T03:33:34.8945203Z     |
2025-06-06T03:33:34.8945294Z 124 |         try:
2025-06-06T03:33:34.8945592Z 125 |             artist_out, artist_time = run_artist_agent(p["prompt"], agent=artist_agent)
2025-06-06T03:33:34.8945726Z 126 |         except Exception as e:
2025-06-06T03:33:34.8945830Z     |                ^^^^^^^^^ BLE001
2025-06-06T03:33:34.8946039Z 127 |             artist_out, artist_time = f"Exception: {e}", 0.0
2025-06-06T03:33:34.8946295Z 128 |         artist_correct = is_correct(artist_out, p["expected"], p["type"])
2025-06-06T03:33:34.8946369Z     |
2025-06-06T03:33:34.8946376Z 
2025-06-06T03:33:34.8946771Z tests/performance/test_artist_agent_benchmark.py:132:16: BLE001 Do not catch blind exception: `Exception`
2025-06-06T03:33:34.8946846Z     |
2025-06-06T03:33:34.8946930Z 130 |         try:
2025-06-06T03:33:34.8947450Z 131 |             data_out, data_time = run_data_gatherer_agent(p["prompt"], agent=data_agent)
2025-06-06T03:33:34.8947591Z 132 |         except Exception as e:
2025-06-06T03:33:34.8947700Z     |                ^^^^^^^^^ BLE001
2025-06-06T03:33:34.8947893Z 133 |             data_out, data_time = f"Exception: {e}", 0.0
2025-06-06T03:33:34.8948134Z 134 |         data_correct = is_correct(data_out, p["expected"], p["type"])
2025-06-06T03:33:34.8948210Z     |
2025-06-06T03:33:34.8948217Z 
2025-06-06T03:33:34.8948505Z tests/performance/test_artist_agent_benchmark.py:174:5: T201 `print` found
2025-06-06T03:33:34.8948574Z     |
2025-06-06T03:33:34.8948654Z 172 |         )
2025-06-06T03:33:34.8948724Z 173 |
2025-06-06T03:33:34.8948956Z 174 |     print(f"Benchmark complete. Results written to {md_path}")
2025-06-06T03:33:34.8949034Z     |     ^^^^^ T201
2025-06-06T03:33:34.8949107Z     |
2025-06-06T03:33:34.8949198Z     = help: Remove `print`
2025-06-06T03:33:34.8949206Z 
2025-06-06T03:33:34.8949557Z tests/security/test_security_scan.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8949627Z   |
2025-06-06T03:33:34.8949734Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8949834Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8949910Z 2 | """
2025-06-06T03:33:34.8950072Z 3 | Test script for security scanning workflow.
2025-06-06T03:33:34.8950146Z   |
2025-06-06T03:33:34.8950157Z 
2025-06-06T03:33:34.8950408Z tests/test_mem0_integration.py:40:5: ERA001 Found commented-out code
2025-06-06T03:33:34.8950482Z    |
2025-06-06T03:33:34.8950610Z 38 |     from adk.agent import Agent
2025-06-06T03:33:34.8950802Z 39 |     # SimpleMemory is not used, so we don't import it
2025-06-06T03:33:34.8950960Z 40 |     # from adk.memory import SimpleMemory
2025-06-06T03:33:34.8951085Z    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ERA001
2025-06-06T03:33:34.8951197Z 41 | except ImportError as e:
2025-06-06T03:33:34.8951319Z 42 |     # Mock ADK if not available
2025-06-06T03:33:34.8951391Z    |
2025-06-06T03:33:34.8951503Z    = help: Remove commented-out code
2025-06-06T03:33:34.8951510Z 
2025-06-06T03:33:34.8951862Z tests/test_mem0_integration.py:110:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T03:33:34.8951931Z     |
2025-06-06T03:33:34.8952028Z 108 |         assert True
2025-06-06T03:33:34.8952155Z 109 |     except ImportError as e:
2025-06-06T03:33:34.8952349Z 110 |         logger.error(f"Failed to import mem0ai: {e}")
2025-06-06T03:33:34.8952615Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T03:33:34.8952714Z 111 |         assert False
2025-06-06T03:33:34.8952879Z     |
2025-06-06T03:33:34.8952998Z     = help: Replace with `exception`
2025-06-06T03:33:34.8953006Z 
2025-06-06T03:33:34.8953357Z tests/test_mem0_integration.py:111:9: PT015 Assertion always fails, replace with `pytest.fail()`
2025-06-06T03:33:34.8953430Z     |
2025-06-06T03:33:34.8953560Z 109 |     except ImportError as e:
2025-06-06T03:33:34.8953751Z 110 |         logger.error(f"Failed to import mem0ai: {e}")
2025-06-06T03:33:34.8953843Z 111 |         assert False
2025-06-06T03:33:34.8953948Z     |         ^^^^^^^^^^^^ PT015
2025-06-06T03:33:34.8954017Z     |
2025-06-06T03:33:34.8954024Z 
2025-06-06T03:33:34.8954485Z tests/test_mem0_integration.py:111:16: B011 Do not `assert False` (`python -O` removes these calls), raise `AssertionError()`
2025-06-06T03:33:34.8954555Z     |
2025-06-06T03:33:34.8954687Z 109 |     except ImportError as e:
2025-06-06T03:33:34.8954869Z 110 |         logger.error(f"Failed to import mem0ai: {e}")
2025-06-06T03:33:34.8954965Z 111 |         assert False
2025-06-06T03:33:34.8955064Z     |                ^^^^^ B011
2025-06-06T03:33:34.8955137Z     |
2025-06-06T03:33:34.8955248Z     = help: Replace `assert False`
2025-06-06T03:33:34.8955256Z 
2025-06-06T03:33:34.8955628Z tests/test_mem0_integration.py:125:9: PERF203 `try`-`except` within a loop incurs performance overhead
2025-06-06T03:33:34.8955698Z     |
2025-06-06T03:33:34.8955863Z 123 |               importlib.import_module(dep)
2025-06-06T03:33:34.8956056Z 124 |               logger.info(f"Successfully imported {dep}")
2025-06-06T03:33:34.8956206Z 125 | /         except ImportError as e:
2025-06-06T03:33:34.8956399Z 126 | |             logger.error(f"Failed to import {dep}: {e}")
2025-06-06T03:33:34.8956537Z 127 | |             all_installed = False
2025-06-06T03:33:34.8956661Z     | |_________________________________^ PERF203
2025-06-06T03:33:34.8956740Z 128 |
2025-06-06T03:33:34.8957004Z 129 |       assert all_installed, "Not all required dependencies are installed"
2025-06-06T03:33:34.8957078Z     |
2025-06-06T03:33:34.8957085Z 
2025-06-06T03:33:34.8957623Z tests/test_mem0_integration.py:126:13: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T03:33:34.8957699Z     |
2025-06-06T03:33:34.8957897Z 124 |             logger.info(f"Successfully imported {dep}")
2025-06-06T03:33:34.8958028Z 125 |         except ImportError as e:
2025-06-06T03:33:34.8958220Z 126 |             logger.error(f"Failed to import {dep}: {e}")
2025-06-06T03:33:34.8958357Z     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T03:33:34.8958491Z 127 |             all_installed = False
2025-06-06T03:33:34.8958561Z     |
2025-06-06T03:33:34.8958678Z     = help: Replace with `exception`
2025-06-06T03:33:34.8958685Z 
2025-06-06T03:33:34.8958990Z tests/test_mem0_integration.py:155:9: SLF001 Private member accessed: `_store_memory`
2025-06-06T03:33:34.8959068Z     |
2025-06-06T03:33:34.8959200Z 154 |         # Store some test memories
2025-06-06T03:33:34.8959411Z 155 |         self.agent._store_memory("User prefers light mode")
2025-06-06T03:33:34.8959529Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T03:33:34.8959763Z 156 |         self.agent._store_memory("User is allergic to peanuts")
2025-06-06T03:33:34.8959837Z     |
2025-06-06T03:33:34.8959844Z 
2025-06-06T03:33:34.8960162Z tests/test_mem0_integration.py:156:9: SLF001 Private member accessed: `_store_memory`
2025-06-06T03:33:34.8960232Z     |
2025-06-06T03:33:34.8960370Z 154 |         # Store some test memories
2025-06-06T03:33:34.8960575Z 155 |         self.agent._store_memory("User prefers light mode")
2025-06-06T03:33:34.8960791Z 156 |         self.agent._store_memory("User is allergic to peanuts")
2025-06-06T03:33:34.8960902Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T03:33:34.8960976Z 157 |
2025-06-06T03:33:34.8961207Z 158 |     def tearDown(self):
2025-06-06T03:33:34.8961281Z     |
2025-06-06T03:33:34.8961288Z 
2025-06-06T03:33:34.8961588Z tests/test_mem0_integration.py:166:9: SLF001 Private member accessed: `_store_memory`
2025-06-06T03:33:34.8961761Z     |
2025-06-06T03:33:34.8961887Z 164 |         # Store a new memory
2025-06-06T03:33:34.8962092Z 165 |         test_content = f"Test memory {os.urandom(4).hex()}"
2025-06-06T03:33:34.8962258Z 166 |         self.agent._store_memory(test_content)
2025-06-06T03:33:34.8962373Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T03:33:34.8962443Z 167 |
2025-06-06T03:33:34.8962573Z 168 |         # Retrieve the memory
2025-06-06T03:33:34.8962643Z     |
2025-06-06T03:33:34.8962656Z 
2025-06-06T03:33:34.8963019Z tests/test_mem0_integration.py:169:20: SLF001 Private member accessed: `_retrieve_relevant_memories`
2025-06-06T03:33:34.8963094Z     |
2025-06-06T03:33:34.8963214Z 168 |         # Retrieve the memory
2025-06-06T03:33:34.8963490Z 169 |         memories = self.agent._retrieve_relevant_memories(test_content[:10])
2025-06-06T03:33:34.8963634Z     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T03:33:34.8963712Z 170 |
2025-06-06T03:33:34.8963904Z 171 |         # Check that the memory was stored and retrieved
2025-06-06T03:33:34.8963978Z     |
2025-06-06T03:33:34.8963986Z 
2025-06-06T03:33:34.8964342Z tests/test_mem0_integration.py:178:20: SLF001 Private member accessed: `_retrieve_relevant_memories`
2025-06-06T03:33:34.8964420Z     |
2025-06-06T03:33:34.8964605Z 176 |         """Test that the agent can retrieve memories."""
2025-06-06T03:33:34.8964739Z 177 |         # Test memory retrieval
2025-06-06T03:33:34.8964986Z 178 |         memories = self.agent._retrieve_relevant_memories("allergies")
2025-06-06T03:33:34.8965126Z     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T03:33:34.8965196Z 179 |
2025-06-06T03:33:34.8965359Z 180 |         # Check that memories were retrieved
2025-06-06T03:33:34.8965428Z     |
2025-06-06T03:33:34.8965439Z 
2025-06-06T03:33:34.8965733Z verify_mock_crewai.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8965803Z   |
2025-06-06T03:33:34.8965910Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8966015Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8966091Z 2 | """
2025-06-06T03:33:34.8966399Z 3 | Verify that the mock_crewai package works correctly without circular import issues.
2025-06-06T03:33:34.8966473Z   |
2025-06-06T03:33:34.8966481Z 
2025-06-06T03:33:34.8966769Z verify_mock_crewai_fix.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T03:33:34.8966842Z   |
2025-06-06T03:33:34.8966942Z 1 | #!/usr/bin/env python3
2025-06-06T03:33:34.8967048Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T03:33:34.8967118Z 2 | """
2025-06-06T03:33:34.8967587Z 3 | Verify that the mock_crewai package works correctly without circular import issues.
2025-06-06T03:33:34.8967660Z   |
2025-06-06T03:33:34.8967667Z 
2025-06-06T03:33:34.8967757Z Found 414 errors.
2025-06-06T03:33:34.8968131Z [*] 1 fixable with the `--fix` option (109 hidden fixes can be enabled with the `--unsafe-fixes` option).
2025-06-06T03:33:34.8977631Z ##[error]Process completed with exit code 1.
2025-06-06T03:33:34.9087153Z ##[group]Run codecov/codecov-action@v3
2025-06-06T03:33:34.9087476Z with:
2025-06-06T03:33:34.9087584Z   file: ./coverage/lcov.info
2025-06-06T03:33:34.9087658Z   flags: javascript
2025-06-06T03:33:34.9087732Z env:
2025-06-06T03:33:34.9087861Z   TOOL_API_KEY: ci-test-api-key-for-github-actions
2025-06-06T03:33:34.9088017Z   pythonLocation: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:33:34.9088200Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib/pkgconfig
2025-06-06T03:33:34.9088341Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:33:34.9088490Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:33:34.9088620Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T03:33:34.9088763Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib
2025-06-06T03:33:34.9088987Z ##[endgroup]
2025-06-06T03:33:35.0167994Z ==> linux OS detected
2025-06-06T03:33:35.4931320Z https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
2025-06-06T03:33:35.5640807Z ==> SHASUM file signed by key id 806bb28aed779869
2025-06-06T03:33:35.6419604Z ==> Uploader SHASUM verified (b37359013b48fbc3b0790d59fc474a52a260fb96e28e1b2c2ae001dc9b9cc996  codecov)
2025-06-06T03:33:35.6420388Z ==> Running version latest
2025-06-06T03:33:35.7242685Z ==> Running version v0.8.0
2025-06-06T03:33:35.7260120Z [command]/home/runner/work/_actions/codecov/codecov-action/v3/dist/codecov -n  -Q github-action-3.1.6 -f ./coverage/lcov.info -F javascript -C d31d465bd32c55c6f71766a07347c79350e93bb8
2025-06-06T03:33:35.9294930Z [2025-06-06T03:33:35.927Z] ['info'] 
2025-06-06T03:33:35.9295417Z      _____          _
2025-06-06T03:33:35.9295769Z     / ____|        | |
2025-06-06T03:33:35.9296181Z    | |     ___   __| | ___  ___ _____   __
2025-06-06T03:33:35.9310782Z    | |    / _ \ / _` |/ _ \/ __/ _ \ \ / /
2025-06-06T03:33:35.9311449Z    | |___| (_) | (_| |  __/ (_| (_) \ V /
2025-06-06T03:33:35.9311945Z     \_____\___/ \__,_|\___|\___\___/ \_/
2025-06-06T03:33:35.9312219Z 
2025-06-06T03:33:35.9312406Z   Codecov report uploader 0.8.0
2025-06-06T03:33:35.9356402Z [2025-06-06T03:33:35.935Z] ['info'] => Project root located at: /home/runner/work/pAIssive_income/pAIssive_income
2025-06-06T03:33:35.9366380Z [2025-06-06T03:33:35.936Z] ['info'] -> No token specified or token is empty
2025-06-06T03:33:36.2742708Z [2025-06-06T03:33:36.273Z] ['info'] Searching for coverage files...
2025-06-06T03:33:36.3217505Z [2025-06-06T03:33:36.321Z] ['error'] None of the following appear to exist as files: ./coverage/lcov.info
2025-06-06T03:33:36.3219445Z [2025-06-06T03:33:36.321Z] ['error'] There was an error running the uploader: Error while cleaning paths. No paths matched existing files!
2025-06-06T03:33:36.3221147Z [2025-06-06T03:33:36.321Z] ['info'] Codecov will exit with status code 0. If you are expecting a non-zero exit code, please pass in the `-Z` flag
2025-06-06T03:33:36.3542340Z Post job cleanup.
2025-06-06T03:33:36.4487371Z [command]/usr/bin/git version
2025-06-06T03:33:36.4523343Z git version 2.49.0
2025-06-06T03:33:36.4573599Z Temporarily overriding HOME='/home/runner/work/_temp/5fbcdf48-e458-43bc-ac96-03b8bb00c632' before making global git config changes
2025-06-06T03:33:36.4575162Z Adding repository directory to the temporary git global config as a safe directory
2025-06-06T03:33:36.4580053Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/pAIssive_income/pAIssive_income
2025-06-06T03:33:36.4614153Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-06-06T03:33:36.4647016Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-06-06T03:33:36.4874081Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-06-06T03:33:36.4894890Z http.https://github.com/.extraheader
2025-06-06T03:33:36.4908336Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-06-06T03:33:36.4939167Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-06-06T03:33:36.5263192Z Cleaning up orphan processes
