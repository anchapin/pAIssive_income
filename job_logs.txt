2025-06-06T02:17:51.0209849Z Current runner version: '2.325.0'
2025-06-06T02:17:51.0244387Z ##[group]Runner Image Provisioner
2025-06-06T02:17:51.0245620Z Hosted Compute Agent
2025-06-06T02:17:51.0246645Z Version: 20250508.323
2025-06-06T02:17:51.0247574Z Commit: 81b259f29879f73b4213d199e42d8c3465dae986
2025-06-06T02:17:51.0248904Z Build Date: 2025-05-08T19:40:08Z
2025-06-06T02:17:51.0249876Z ##[endgroup]
2025-06-06T02:17:51.0250704Z ##[group]Operating System
2025-06-06T02:17:51.0251595Z Ubuntu
2025-06-06T02:17:51.0252453Z 24.04.2
2025-06-06T02:17:51.0253198Z LTS
2025-06-06T02:17:51.0253879Z ##[endgroup]
2025-06-06T02:17:51.0254798Z ##[group]Runner Image
2025-06-06T02:17:51.0255747Z Image: ubuntu-24.04
2025-06-06T02:17:51.0256596Z Version: 20250511.1.0
2025-06-06T02:17:51.0258716Z Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250511.1/images/ubuntu/Ubuntu2404-Readme.md
2025-06-06T02:17:51.0261388Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250511.1
2025-06-06T02:17:51.0263269Z ##[endgroup]
2025-06-06T02:17:51.0265049Z ##[group]GITHUB_TOKEN Permissions
2025-06-06T02:17:51.0267479Z Contents: read
2025-06-06T02:17:51.0268524Z Metadata: read
2025-06-06T02:17:51.0269419Z ##[endgroup]
2025-06-06T02:17:51.0272207Z Secret source: Actions
2025-06-06T02:17:51.0273240Z Prepare workflow directory
2025-06-06T02:17:51.0851750Z Prepare all required actions
2025-06-06T02:17:51.0908763Z Getting action download info
2025-06-06T02:17:51.3624786Z ##[group]Download immutable action package 'actions/checkout@v4'
2025-06-06T02:17:51.3625731Z Version: 4.2.2
2025-06-06T02:17:51.3626962Z Digest: sha256:ccb2698953eaebd21c7bf6268a94f9c26518a7e38e27e0b83c1fe1ad049819b1
2025-06-06T02:17:51.3628338Z Source commit SHA: 11bd71901bbe5b1630ceea73d27597364c9af683
2025-06-06T02:17:51.3629037Z ##[endgroup]
2025-06-06T02:17:51.4270608Z ##[group]Download immutable action package 'actions/setup-node@v4'
2025-06-06T02:17:51.4271375Z Version: 4.4.0
2025-06-06T02:17:51.4272179Z Digest: sha256:9427cefe82346e992fb5b949e3569b39d537ae41aa3086483b14eceebfc16bc1
2025-06-06T02:17:51.4273210Z Source commit SHA: 49933ea5288caeca8642d1e84afbd3f7d6820020
2025-06-06T02:17:51.4273865Z ##[endgroup]
2025-06-06T02:17:51.5243585Z ##[group]Download immutable action package 'actions/setup-python@v5'
2025-06-06T02:17:51.5244733Z Version: 5.6.0
2025-06-06T02:17:51.5245757Z Digest: sha256:0b35a0c11c97499e4e0576589036d450b9f5f9da74b7774225b3614b57324404
2025-06-06T02:17:51.5247126Z Source commit SHA: a26af69be951a213d495a4c3e4e4022e16d87065
2025-06-06T02:17:51.5248338Z ##[endgroup]
2025-06-06T02:17:51.7448392Z ##[group]Download immutable action package 'actions/cache@v4'
2025-06-06T02:17:51.7449055Z Version: 4.2.3
2025-06-06T02:17:51.7449697Z Digest: sha256:c8a3bb963e1f1826d8fcc8d1354f0dd29d8ac1db1d4f6f20247055ae11b81ed9
2025-06-06T02:17:51.7450562Z Source commit SHA: 5a3ec84eff668545956fd18022155c47e93e2684
2025-06-06T02:17:51.7451156Z ##[endgroup]
2025-06-06T02:17:51.8441689Z Download action repository 'codecov/codecov-action@v3' (SHA:ab904c41d6ece82784817410c45d8b8c02684457)
2025-06-06T02:17:52.1070620Z Complete job name: Lint, Type Check, and Test (ubuntu-latest)
2025-06-06T02:17:52.1867216Z ##[group]Run actions/checkout@v4
2025-06-06T02:17:52.1868359Z with:
2025-06-06T02:17:52.1868744Z   fetch-depth: 0
2025-06-06T02:17:52.1869172Z   repository: anchapin/pAIssive_income
2025-06-06T02:17:52.1869894Z   token: ***
2025-06-06T02:17:52.1870259Z   ssh-strict: true
2025-06-06T02:17:52.1870634Z   ssh-user: git
2025-06-06T02:17:52.1871028Z   persist-credentials: true
2025-06-06T02:17:52.1871462Z   clean: true
2025-06-06T02:17:52.1871844Z   sparse-checkout-cone-mode: true
2025-06-06T02:17:52.1872307Z   fetch-tags: false
2025-06-06T02:17:52.1872690Z   show-progress: true
2025-06-06T02:17:52.1873072Z   lfs: false
2025-06-06T02:17:52.1873430Z   submodules: false
2025-06-06T02:17:52.1873816Z   set-safe-directory: true
2025-06-06T02:17:52.1874466Z env:
2025-06-06T02:17:52.1874893Z   TOOL_API_KEY: ci-test-api-key-for-github-actions
2025-06-06T02:17:52.1875708Z ##[endgroup]
2025-06-06T02:17:52.2952365Z Syncing repository: anchapin/pAIssive_income
2025-06-06T02:17:52.2954175Z ##[group]Getting Git version info
2025-06-06T02:17:52.2954924Z Working directory is '/home/runner/work/pAIssive_income/pAIssive_income'
2025-06-06T02:17:52.2955910Z [command]/usr/bin/git version
2025-06-06T02:17:52.2993012Z git version 2.49.0
2025-06-06T02:17:52.3019248Z ##[endgroup]
2025-06-06T02:17:52.3033320Z Temporarily overriding HOME='/home/runner/work/_temp/90c19193-b267-4c0f-8f01-0a6b98b3cf48' before making global git config changes
2025-06-06T02:17:52.3034695Z Adding repository directory to the temporary git global config as a safe directory
2025-06-06T02:17:52.3038584Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/pAIssive_income/pAIssive_income
2025-06-06T02:17:52.3072230Z Deleting the contents of '/home/runner/work/pAIssive_income/pAIssive_income'
2025-06-06T02:17:52.3075717Z ##[group]Initializing the repository
2025-06-06T02:17:52.3079963Z [command]/usr/bin/git init /home/runner/work/pAIssive_income/pAIssive_income
2025-06-06T02:17:52.3132804Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-06-06T02:17:52.3133995Z hint: is subject to change. To configure the initial branch name to use in all
2025-06-06T02:17:52.3134903Z hint: of your new repositories, which will suppress this warning, call:
2025-06-06T02:17:52.3135732Z hint:
2025-06-06T02:17:52.3136442Z hint: 	git config --global init.defaultBranch <name>
2025-06-06T02:17:52.3137177Z hint:
2025-06-06T02:17:52.3137721Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-06-06T02:17:52.3138862Z hint: 'development'. The just-created branch can be renamed via this command:
2025-06-06T02:17:52.3139582Z hint:
2025-06-06T02:17:52.3139961Z hint: 	git branch -m <name>
2025-06-06T02:17:52.3140778Z Initialized empty Git repository in /home/runner/work/pAIssive_income/pAIssive_income/.git/
2025-06-06T02:17:52.3147304Z [command]/usr/bin/git remote add origin https://github.com/anchapin/pAIssive_income
2025-06-06T02:17:52.3177301Z ##[endgroup]
2025-06-06T02:17:52.3178219Z ##[group]Disabling automatic garbage collection
2025-06-06T02:17:52.3181688Z [command]/usr/bin/git config --local gc.auto 0
2025-06-06T02:17:52.3210131Z ##[endgroup]
2025-06-06T02:17:52.3211302Z ##[group]Setting up auth
2025-06-06T02:17:52.3217738Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-06-06T02:17:52.3249174Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-06-06T02:17:52.3506692Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-06-06T02:17:52.3539332Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-06-06T02:17:52.3759486Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-06-06T02:17:52.3804601Z ##[endgroup]
2025-06-06T02:17:52.3805857Z ##[group]Fetching the repository
2025-06-06T02:17:52.3815771Z [command]/usr/bin/git -c protocol.version=2 fetch --prune --no-recurse-submodules origin +refs/heads/*:refs/remotes/origin/* +refs/tags/*:refs/tags/* +8b9604fc8edb28f0ee7da1aff3e38966697b55ce:refs/remotes/pull/248/merge
2025-06-06T02:17:53.7709191Z From https://github.com/anchapin/pAIssive_income
2025-06-06T02:17:53.7712371Z  * [new branch]        AB_testing                               -> origin/AB_testing
2025-06-06T02:17:53.7714000Z  * [new branch]        cosine/check/tests-coverage-3aotp1       -> origin/cosine/check/tests-coverage-3aotp1
2025-06-06T02:17:53.7716215Z  * [new branch]        cosine/consolidate-documentation-y12ueo  -> origin/cosine/consolidate-documentation-y12ueo
2025-06-06T02:17:53.7718563Z  * [new branch]        cosine/document-artist-integration-cmw0d7 -> origin/cosine/document-artist-integration-cmw0d7
2025-06-06T02:17:53.7720498Z  * [new branch]        cosine/document-artist-integration-e9tul4 -> origin/cosine/document-artist-integration-e9tul4
2025-06-06T02:17:53.7722177Z  * [new branch]        cosine/document/mem0-rag-best-practices-u3n5ko -> origin/cosine/document/mem0-rag-best-practices-u3n5ko
2025-06-06T02:17:53.7724011Z  * [new branch]        cosine/exclude-gitignored-files-46g79q   -> origin/cosine/exclude-gitignored-files-46g79q
2025-06-06T02:17:53.7725818Z  * [new branch]        cosine/exclude-gitignored-files-pkh9am   -> origin/cosine/exclude-gitignored-files-pkh9am
2025-06-06T02:17:53.7727486Z  * [new branch]        cosine/exclude-gitignored-files-tyg0j1   -> origin/cosine/exclude-gitignored-files-tyg0j1
2025-06-06T02:17:53.7729722Z  * [new branch]        cosine/exclude-gitignored-files-tysnf6   -> origin/cosine/exclude-gitignored-files-tysnf6
2025-06-06T02:17:53.7732828Z  * [new branch]        cosine/feature/add-mcp-support-4p0w0i    -> origin/cosine/feature/add-mcp-support-4p0w0i
2025-06-06T02:17:53.7734548Z  * [new branch]        cosine/feature/check-docs-action-n743l5  -> origin/cosine/feature/check-docs-action-n743l5
2025-06-06T02:17:53.7736522Z  * [new branch]        cosine/feature/expose-tools-as-apis-ipx7ku -> origin/cosine/feature/expose-tools-as-apis-ipx7ku
2025-06-06T02:17:53.7739011Z  * [new branch]        cosine/feature/minimal-agent-tool-registry-demo-4rlasf -> origin/cosine/feature/minimal-agent-tool-registry-demo-4rlasf
2025-06-06T02:17:53.7740797Z  * [new branch]        cosine/feedback-artist-integration-rx12pn -> origin/cosine/feedback-artist-integration-rx12pn
2025-06-06T02:17:53.7743512Z  * [new branch]        cosine/fix-mock-api-server-imports       -> origin/cosine/fix-mock-api-server-imports
2025-06-06T02:17:53.7745950Z  * [new branch]        cosine/fix-setup-script-workflow-robustness -> origin/cosine/fix-setup-script-workflow-robustness
2025-06-06T02:17:53.7749055Z  * [new branch]        cosine/fix/merge-conflicts-security-enhancements-ex2qi5 -> origin/cosine/fix/merge-conflicts-security-enhancements-ex2qi5
2025-06-06T02:17:53.7750838Z  * [new branch]        cosine/implement-agentic-reasoning-logic-tfqnc8 -> origin/cosine/implement-agentic-reasoning-logic-tfqnc8
2025-06-06T02:17:53.7752855Z  * [new branch]        cosine/implement-agentic-reasoning-logic-xa4wq6 -> origin/cosine/implement-agentic-reasoning-logic-xa4wq6
2025-06-06T02:17:53.7755340Z  * [new branch]        cosine/implement-agentic-reasoning-logic-xa4wq6-review-fixes -> origin/cosine/implement-agentic-reasoning-logic-xa4wq6-review-fixes
2025-06-06T02:17:53.7757091Z  * [new branch]        cosine/implement-memory-rag-coordination-61bldz -> origin/cosine/implement-memory-rag-coordination-61bldz
2025-06-06T02:17:53.7759077Z  * [new branch]        cosine/implement-plan-ikybn0             -> origin/cosine/implement-plan-ikybn0
2025-06-06T02:17:53.7761324Z  * [new branch]        cosine/improve-frontend-tests-y4hwd5     -> origin/cosine/improve-frontend-tests-y4hwd5
2025-06-06T02:17:53.7763433Z  * [new branch]        cosine/improve-test-coverage-gzv2h2      -> origin/cosine/improve-test-coverage-gzv2h2
2025-06-06T02:17:53.7765163Z  * [new branch]        cosine/improve-test-coverage-yo5lbz      -> origin/cosine/improve-test-coverage-yo5lbz
2025-06-06T02:17:53.7767183Z  * [new branch]        cosine/initial-setup-olxflf              -> origin/cosine/initial-setup-olxflf
2025-06-06T02:17:53.7769230Z  * [new branch]        cosine/issue-15-improve-test-speed-7lcevh -> origin/cosine/issue-15-improve-test-speed-7lcevh
2025-06-06T02:17:53.7773655Z  * [new branch]        cosine/issue-226-consolidate-folders-fx42xy -> origin/cosine/issue-226-consolidate-folders-fx42xy
2025-06-06T02:17:53.7775361Z  * [new branch]        cosine/issue-50-security-enhancements-yoavn6 -> origin/cosine/issue-50-security-enhancements-yoavn6
2025-06-06T02:17:53.7777492Z  * [new branch]        cosine/issue-71-code-formatting-linting-1si7m3 -> origin/cosine/issue-71-code-formatting-linting-1si7m3
2025-06-06T02:17:53.7779767Z  * [new branch]        cosine/strengthen-dependency-management-2l9xuh -> origin/cosine/strengthen-dependency-management-2l9xuh
2025-06-06T02:17:53.7781755Z  * [new branch]        cosine/strengthen-dependency-management-hmku3y -> origin/cosine/strengthen-dependency-management-hmku3y
2025-06-06T02:17:53.7783688Z  * [new branch]        cosine/strengthen-dependency-management-mt4hkj -> origin/cosine/strengthen-dependency-management-mt4hkj
2025-06-06T02:17:53.7785687Z  * [new branch]        cosine/strengthen-dependency-management-rjzf3w -> origin/cosine/strengthen-dependency-management-rjzf3w
2025-06-06T02:17:53.7787547Z  * [new branch]        cosine/switch-to-ty-over-mypy-41zug5     -> origin/cosine/switch-to-ty-over-mypy-41zug5
2025-06-06T02:17:53.7789989Z  * [new branch]        cosine/yes-response-7pro8f               -> origin/cosine/yes-response-7pro8f
2025-06-06T02:17:53.7791592Z  * [new branch]        data_consistency_tests                   -> origin/data_consistency_tests
2025-06-06T02:17:53.7795750Z  * [new branch]        dependabot/npm_and_yarn/babel/core-7.27.4 -> origin/dependabot/npm_and_yarn/babel/core-7.27.4
2025-06-06T02:17:53.7798733Z  * [new branch]        dependabot/npm_and_yarn/mui/icons-material-7.1.1 -> origin/dependabot/npm_and_yarn/mui/icons-material-7.1.1
2025-06-06T02:17:53.7800648Z  * [new branch]        dependabot/npm_and_yarn/react-router-dom-7.6.1 -> origin/dependabot/npm_and_yarn/react-router-dom-7.6.1
2025-06-06T02:17:53.7802841Z  * [new branch]        dependabot/npm_and_yarn/tailwindcss-4.1.8 -> origin/dependabot/npm_and_yarn/tailwindcss-4.1.8
2025-06-06T02:17:53.7806429Z  * [new branch]        dependabot/npm_and_yarn/ui/react_frontend/npm_and_yarn-a1c60d67af -> origin/dependabot/npm_and_yarn/ui/react_frontend/npm_and_yarn-a1c60d67af
2025-06-06T02:17:53.7808165Z  * [new branch]        dependabot/npm_and_yarn/webpack-5.99.9   -> origin/dependabot/npm_and_yarn/webpack-5.99.9
2025-06-06T02:17:53.7810291Z  * [new branch]        docker-compose-optimization-docs         -> origin/docker-compose-optimization-docs
2025-06-06T02:17:53.7813279Z  * [new branch]        feat/initial-setup-scripts               -> origin/feat/initial-setup-scripts
2025-06-06T02:17:53.7815940Z  * [new branch]        feature/artist-experiment-environment    -> origin/feature/artist-experiment-environment
2025-06-06T02:17:53.7817558Z  * [new branch]        fix-codeql-pnpm-setup                    -> origin/fix-codeql-pnpm-setup
2025-06-06T02:17:53.7820087Z  * [new branch]        fix-frontend-e2e-tests                   -> origin/fix-frontend-e2e-tests
2025-06-06T02:17:53.7822512Z  * [new branch]        fix-frontend-tests-without-workflow-changes -> origin/fix-frontend-tests-without-workflow-changes
2025-06-06T02:17:53.7824102Z  * [new branch]        fix-security-logging-issues              -> origin/fix-security-logging-issues
2025-06-06T02:17:53.7826252Z  * [new branch]        fix-workflow-coverage-thresholds         -> origin/fix-workflow-coverage-thresholds
2025-06-06T02:17:53.7828863Z  * [new branch]        fix/add-uv-to-workflow                   -> origin/fix/add-uv-to-workflow
2025-06-06T02:17:53.7830780Z  * [new branch]        fix/ag-ui-workflow                       -> origin/fix/ag-ui-workflow
2025-06-06T02:17:53.7832511Z  * [new branch]        fix/bandit-config-14988964552            -> origin/fix/bandit-config-14988964552
2025-06-06T02:17:53.7835023Z  * [new branch]        fix/bandit-security-scan-windows         -> origin/fix/bandit-security-scan-windows
2025-06-06T02:17:53.7836815Z  * [new branch]        fix/docker-compose-ag-ui-workflow        -> origin/fix/docker-compose-ag-ui-workflow
2025-06-06T02:17:53.7839166Z  * [new branch]        fix/docker-compose-setup                 -> origin/fix/docker-compose-setup
2025-06-06T02:17:53.7841726Z  * [new branch]        fix/frontend-e2e-tests                   -> origin/fix/frontend-e2e-tests
2025-06-06T02:17:53.7843915Z  * [new branch]        fix/frontend-e2e-tests-workflow          -> origin/fix/frontend-e2e-tests-workflow
2025-06-06T02:17:53.7846202Z  * [new branch]        fix/frontend-e2e-venv-setup              -> origin/fix/frontend-e2e-venv-setup
2025-06-06T02:17:53.7848470Z  * [new branch]        fix/github-actions-dependencies          -> origin/fix/github-actions-dependencies
2025-06-06T02:17:53.7850525Z  * [new branch]        fix/node-cache-issue                     -> origin/fix/node-cache-issue
2025-06-06T02:17:53.7852713Z  * [new branch]        fix/nyc-upgrade-17.1.0                   -> origin/fix/nyc-upgrade-17.1.0
2025-06-06T02:17:53.7855178Z  * [new branch]        fix/optimize-docker-compose-workflow-191 -> origin/fix/optimize-docker-compose-workflow-191
2025-06-06T02:17:53.7857341Z  * [new branch]        fix/pr243-workflow-fixes                 -> origin/fix/pr243-workflow-fixes
2025-06-06T02:17:53.7860211Z  * [new branch]        fix/remove-docker-compose-version        -> origin/fix/remove-docker-compose-version
2025-06-06T02:17:53.7862390Z  * [new branch]        fix/security-scan-issues                 -> origin/fix/security-scan-issues
2025-06-06T02:17:53.7864626Z  * [new branch]        fix/tailwind-node24-compatibility        -> origin/fix/tailwind-node24-compatibility
2025-06-06T02:17:53.7866708Z  * [new branch]        fix/test-coverage-15-percent             -> origin/fix/test-coverage-15-percent
2025-06-06T02:17:53.7869034Z  * [new branch]        fix/tool-api-security-updates            -> origin/fix/tool-api-security-updates
2025-06-06T02:17:53.7871191Z  * [new branch]        fix_ci_workflow                          -> origin/fix_ci_workflow
2025-06-06T02:17:53.7873292Z  * [new branch]        main                                     -> origin/main
2025-06-06T02:17:53.7875566Z  * [new branch]        market_analysis_tests                    -> origin/market_analysis_tests
2025-06-06T02:17:53.7879151Z  * [new branch]        mergify/anchapin/config-update           -> origin/mergify/anchapin/config-update
2025-06-06T02:17:53.7881353Z  * [new branch]        nyc-17.1.0-with-main-changes             -> origin/nyc-17.1.0-with-main-changes
2025-06-06T02:17:53.7883602Z  * [new branch]        openhands-workspace-0agl8nnq             -> origin/openhands-workspace-0agl8nnq
2025-06-06T02:17:53.7885763Z  * [new branch]        performance_testing                      -> origin/performance_testing
2025-06-06T02:17:53.7888215Z  * [new branch]        security_enhancements_backup_20250506    -> origin/security_enhancements_backup_20250506
2025-06-06T02:17:53.7890472Z  * [new branch]        security_enhancements_merge_resolution   -> origin/security_enhancements_merge_resolution
2025-06-06T02:17:53.7892468Z  * [new branch]        test_cov                                 -> origin/test_cov
2025-06-06T02:17:53.7894772Z  * [new branch]        test_cov_api_service                     -> origin/test_cov_api_service
2025-06-06T02:17:53.7898203Z  * [new ref]           8b9604fc8edb28f0ee7da1aff3e38966697b55ce -> pull/248/merge
2025-06-06T02:17:53.7947467Z ##[endgroup]
2025-06-06T02:17:53.7948650Z ##[group]Determining the checkout info
2025-06-06T02:17:53.7949762Z ##[endgroup]
2025-06-06T02:17:53.7955219Z [command]/usr/bin/git sparse-checkout disable
2025-06-06T02:17:53.7993241Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-06-06T02:17:53.8020097Z ##[group]Checking out the ref
2025-06-06T02:17:53.8024385Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/248/merge
2025-06-06T02:17:54.0068319Z Note: switching to 'refs/remotes/pull/248/merge'.
2025-06-06T02:17:54.0070375Z 
2025-06-06T02:17:54.0070793Z You are in 'detached HEAD' state. You can look around, make experimental
2025-06-06T02:17:54.0071717Z changes and commit them, and you can discard any commits you make in this
2025-06-06T02:17:54.0072592Z state without impacting any branches by switching back to a branch.
2025-06-06T02:17:54.0073108Z 
2025-06-06T02:17:54.0073443Z If you want to create a new branch to retain commits you create, you may
2025-06-06T02:17:54.0074271Z do so (now or later) by using -c with the switch command. Example:
2025-06-06T02:17:54.0075120Z 
2025-06-06T02:17:54.0075310Z   git switch -c <new-branch-name>
2025-06-06T02:17:54.0075655Z 
2025-06-06T02:17:54.0075854Z Or undo this operation with:
2025-06-06T02:17:54.0076140Z 
2025-06-06T02:17:54.0076294Z   git switch -
2025-06-06T02:17:54.0076537Z 
2025-06-06T02:17:54.0076948Z Turn off this advice by setting config variable advice.detachedHead to false
2025-06-06T02:17:54.0077518Z 
2025-06-06T02:17:54.0078415Z HEAD is now at 8b9604fc Merge 58f675873acf8d730deab7d16fb02db3b645dc69 into 2c43a7493182407c5f3589a4673eed67f7d932b4
2025-06-06T02:17:54.0090266Z ##[endgroup]
2025-06-06T02:17:54.0133258Z [command]/usr/bin/git log -1 --format=%H
2025-06-06T02:17:54.0156808Z 8b9604fc8edb28f0ee7da1aff3e38966697b55ce
2025-06-06T02:17:54.0380642Z ##[group]Run actions/setup-node@v4
2025-06-06T02:17:54.0380919Z with:
2025-06-06T02:17:54.0381097Z   node-version: 20
2025-06-06T02:17:54.0381280Z   cache: npm
2025-06-06T02:17:54.0381457Z   always-auth: false
2025-06-06T02:17:54.0381668Z   check-latest: false
2025-06-06T02:17:54.0381990Z   token: ***
2025-06-06T02:17:54.0382161Z env:
2025-06-06T02:17:54.0382361Z   TOOL_API_KEY: ci-test-api-key-for-github-actions
2025-06-06T02:17:54.0382635Z ##[endgroup]
2025-06-06T02:17:54.2409831Z Found in cache @ /opt/hostedtoolcache/node/20.19.1/x64
2025-06-06T02:17:54.2416661Z ##[group]Environment details
2025-06-06T02:17:56.6380326Z node: v20.19.1
2025-06-06T02:17:56.6380906Z npm: 10.8.2
2025-06-06T02:17:56.6381118Z yarn: 1.22.22
2025-06-06T02:17:56.6381947Z ##[endgroup]
2025-06-06T02:17:56.6403148Z [command]/opt/hostedtoolcache/node/20.19.1/x64/bin/npm config get cache
2025-06-06T02:17:56.9638741Z /home/runner/.npm
2025-06-06T02:17:57.0559310Z Cache hit for: node-cache-Linux-x64-npm-0f60aa295b334d72c223755e50e932bfe478a81609d584d0814ea38db1195a91
2025-06-06T02:17:57.1431261Z Received 763 of 763 (100.0%), 0.1 MBs/sec
2025-06-06T02:17:57.1431973Z Cache Size: ~0 MB (763 B)
2025-06-06T02:17:57.1457325Z [command]/usr/bin/tar -xf /home/runner/work/_temp/602618a0-8e8a-4fad-a91a-1c810dd5d195/cache.tzst -P -C /home/runner/work/pAIssive_income/pAIssive_income --use-compress-program unzstd
2025-06-06T02:17:57.1511359Z Cache restored successfully
2025-06-06T02:17:57.1516717Z Cache restored from key: node-cache-Linux-x64-npm-0f60aa295b334d72c223755e50e932bfe478a81609d584d0814ea38db1195a91
2025-06-06T02:17:57.1652287Z ##[group]Run npm install -g pnpm@latest
2025-06-06T02:17:57.1652684Z [36;1mnpm install -g pnpm@latest[0m
2025-06-06T02:17:57.1857295Z shell: /usr/bin/bash -e {0}
2025-06-06T02:17:57.1857589Z env:
2025-06-06T02:17:57.1858033Z   TOOL_API_KEY: ci-test-api-key-for-github-actions
2025-06-06T02:17:57.1858391Z ##[endgroup]
2025-06-06T02:18:00.5151384Z 
2025-06-06T02:18:00.5158402Z added 1 package in 3s
2025-06-06T02:18:00.5158659Z 
2025-06-06T02:18:00.5158856Z 1 package is looking for funding
2025-06-06T02:18:00.5159148Z   run `npm fund` for details
2025-06-06T02:18:00.5283277Z ##[group]Run pnpm install
2025-06-06T02:18:00.5283622Z [36;1mpnpm install[0m
2025-06-06T02:18:00.5283901Z [36;1mpnpm tailwind:build[0m
2025-06-06T02:18:00.5337032Z shell: /usr/bin/bash -e {0}
2025-06-06T02:18:00.5337305Z env:
2025-06-06T02:18:00.5337562Z   TOOL_API_KEY: ci-test-api-key-for-github-actions
2025-06-06T02:18:00.5338101Z ##[endgroup]
2025-06-06T02:18:00.9871082Z Lockfile is up to date, resolution step is skipped
2025-06-06T02:18:01.0777118Z Progress: resolved 1, reused 0, downloaded 0, added 0
2025-06-06T02:18:01.1986776Z Packages: +874
2025-06-06T02:18:01.1987541Z ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
2025-06-06T02:18:02.0821431Z Progress: resolved 874, reused 0, downloaded 74, added 32
2025-06-06T02:18:03.0849513Z Progress: resolved 874, reused 0, downloaded 269, added 258
2025-06-06T02:18:04.0858623Z Progress: resolved 874, reused 0, downloaded 584, added 564
2025-06-06T02:18:05.0853445Z Progress: resolved 874, reused 0, downloaded 872, added 851
2025-06-06T02:18:06.0865572Z Progress: resolved 874, reused 0, downloaded 874, added 873
2025-06-06T02:18:06.6298540Z Progress: resolved 874, reused 0, downloaded 874, added 874, done
2025-06-06T02:18:07.2364502Z 
2025-06-06T02:18:07.2366349Z dependencies:
2025-06-06T02:18:07.2366811Z + @mui/icons-material 7.1.0
2025-06-06T02:18:07.2367207Z + @mui/material 7.1.0
2025-06-06T02:18:07.2367520Z + react 19.1.0
2025-06-06T02:18:07.2367806Z + react-dom 19.1.0
2025-06-06T02:18:07.2368397Z + react-router-dom 7.6.0
2025-06-06T02:18:07.2368768Z + recharts 2.15.3
2025-06-06T02:18:07.2368964Z 
2025-06-06T02:18:07.2369121Z devDependencies:
2025-06-06T02:18:07.2369455Z + @babel/core 7.27.1
2025-06-06T02:18:07.2369857Z + @babel/preset-env 7.27.2
2025-06-06T02:18:07.2370282Z + @babel/preset-react 7.27.1
2025-06-06T02:18:07.2370703Z + autoprefixer 10.4.21
2025-06-06T02:18:07.2371093Z + babel-loader 10.0.0
2025-06-06T02:18:07.2371515Z + css-loader 7.1.2
2025-06-06T02:18:07.2371860Z + cssnano 6.1.2
2025-06-06T02:18:07.2372224Z + eslint 9.28.0
2025-06-06T02:18:07.2372612Z + html-webpack-plugin 5.6.3
2025-06-06T02:18:07.2373027Z + mocha 11.3.0
2025-06-06T02:18:07.2373342Z + nyc 17.1.0
2025-06-06T02:18:07.2373726Z + postcss 8.5.3
2025-06-06T02:18:07.2374117Z + postcss-preset-env 9.6.0
2025-06-06T02:18:07.2374558Z + style-loader 4.0.0
2025-06-06T02:18:07.2374948Z + tailwindcss 3.4.17
2025-06-06T02:18:07.2375302Z + webpack 5.99.8
2025-06-06T02:18:07.2375681Z + webpack-cli 6.0.1
2025-06-06T02:18:07.2376081Z + webpack-dev-server 5.2.1
2025-06-06T02:18:07.2376334Z 
2025-06-06T02:18:07.3745212Z Done in 6.8s using pnpm v10.11.1
2025-06-06T02:18:07.7841107Z 
2025-06-06T02:18:07.7842142Z > paissive-income@1.0.0 tailwind:build /home/runner/work/pAIssive_income/pAIssive_income
2025-06-06T02:18:07.7843001Z > node ui/tailwind_utils.js
2025-06-06T02:18:07.7843266Z 
2025-06-06T02:18:07.8179489Z [2025-06-06T02:18:07.815Z] Loaded configuration from ./ui/tailwind.config.json
2025-06-06T02:18:07.8183401Z [2025-06-06T02:18:07.818Z] INFO: Building Tailwind CSS with options: {"files":1,"watch":false,"parallel":true,"postcss":true,"webpack":false,"vite":false}
2025-06-06T02:18:07.8185487Z [2025-06-06T02:18:07.818Z] INFO: Building multiple Tailwind CSS files {"fileCount":1,"watch":false,"parallel":true}
2025-06-06T02:18:07.8186892Z [2025-06-06T02:18:07.818Z] INFO: Building in parallel with max 2 concurrent builds
2025-06-06T02:18:07.8191186Z [2025-06-06T02:18:07.818Z] INFO: Building Tailwind CSS: ./ui/static/css/tailwind.css -> ./ui/static/css/tailwind.output.css {"minify":true,"configPath":"./tailwind.config.js"}
2025-06-06T02:18:08.7345624Z [2025-06-06T02:18:08.734Z] INFO: Successfully built Tailwind CSS: ./ui/static/css/tailwind.output.css
2025-06-06T02:18:08.7553640Z ##[group]Run actions/setup-python@v5
2025-06-06T02:18:08.7553925Z with:
2025-06-06T02:18:08.7554112Z   python-version: 3.12
2025-06-06T02:18:08.7554324Z   check-latest: false
2025-06-06T02:18:08.7554648Z   token: ***
2025-06-06T02:18:08.7554837Z   update-environment: true
2025-06-06T02:18:08.7555062Z   allow-prereleases: false
2025-06-06T02:18:08.7555291Z   freethreaded: false
2025-06-06T02:18:08.7555492Z env:
2025-06-06T02:18:08.7555700Z   TOOL_API_KEY: ci-test-api-key-for-github-actions
2025-06-06T02:18:08.7555973Z ##[endgroup]
2025-06-06T02:18:08.9217605Z ##[group]Installed versions
2025-06-06T02:18:08.9290294Z Successfully set up CPython (3.12.10)
2025-06-06T02:18:08.9291041Z ##[endgroup]
2025-06-06T02:18:08.9422953Z ##[group]Run actions/setup-node@v4
2025-06-06T02:18:08.9423214Z with:
2025-06-06T02:18:08.9423385Z   node-version: 20
2025-06-06T02:18:08.9423570Z   cache: npm
2025-06-06T02:18:08.9423756Z   always-auth: false
2025-06-06T02:18:08.9423962Z   check-latest: false
2025-06-06T02:18:08.9424266Z   token: ***
2025-06-06T02:18:08.9424445Z env:
2025-06-06T02:18:08.9424656Z   TOOL_API_KEY: ci-test-api-key-for-github-actions
2025-06-06T02:18:08.9425007Z   pythonLocation: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:18:08.9425416Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib/pkgconfig
2025-06-06T02:18:08.9425809Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:18:08.9426360Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:18:08.9426702Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:18:08.9427047Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib
2025-06-06T02:18:08.9427366Z ##[endgroup]
2025-06-06T02:18:09.1192929Z Found in cache @ /opt/hostedtoolcache/node/20.19.1/x64
2025-06-06T02:18:09.1200286Z ##[group]Environment details
2025-06-06T02:18:09.2729121Z node: v20.19.1
2025-06-06T02:18:09.2729535Z npm: 10.8.2
2025-06-06T02:18:09.2729851Z yarn: 1.22.22
2025-06-06T02:18:09.2730529Z ##[endgroup]
2025-06-06T02:18:09.2760496Z [command]/opt/hostedtoolcache/node/20.19.1/x64/bin/npm config get cache
2025-06-06T02:18:09.3856374Z /home/runner/.npm
2025-06-06T02:18:09.4764850Z Cache hit for: node-cache-Linux-x64-npm-0f60aa295b334d72c223755e50e932bfe478a81609d584d0814ea38db1195a91
2025-06-06T02:18:09.5454818Z Received 763 of 763 (100.0%), 0.0 MBs/sec
2025-06-06T02:18:09.5455460Z Cache Size: ~0 MB (763 B)
2025-06-06T02:18:09.5482079Z [command]/usr/bin/tar -xf /home/runner/work/_temp/0dbf5473-b1f5-4c6b-af81-e03c3ba44cfc/cache.tzst -P -C /home/runner/work/pAIssive_income/pAIssive_income --use-compress-program unzstd
2025-06-06T02:18:09.5527804Z Cache restored successfully
2025-06-06T02:18:09.5533551Z Cache restored from key: node-cache-Linux-x64-npm-0f60aa295b334d72c223755e50e932bfe478a81609d584d0814ea38db1195a91
2025-06-06T02:18:09.5633210Z ##[group]Run npm install -g pnpm@latest
2025-06-06T02:18:09.5633532Z [36;1mnpm install -g pnpm@latest[0m
2025-06-06T02:18:09.5686735Z shell: /usr/bin/bash -e {0}
2025-06-06T02:18:09.5686994Z env:
2025-06-06T02:18:09.5687246Z   TOOL_API_KEY: ci-test-api-key-for-github-actions
2025-06-06T02:18:09.5687657Z   pythonLocation: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:18:09.5688362Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib/pkgconfig
2025-06-06T02:18:09.5688824Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:18:09.5689245Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:18:09.5689654Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:18:09.5690056Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib
2025-06-06T02:18:09.5690391Z ##[endgroup]
2025-06-06T02:18:10.4475847Z 
2025-06-06T02:18:10.4476435Z changed 1 package in 812ms
2025-06-06T02:18:10.4477752Z 
2025-06-06T02:18:10.4479013Z 1 package is looking for funding
2025-06-06T02:18:10.4479545Z   run `npm fund` for details
2025-06-06T02:18:15.5775897Z ##[group]Run actions/cache@v4
2025-06-06T02:18:15.5776216Z with:
2025-06-06T02:18:15.5776449Z   path: ~/.cache/uv
~/.uv

2025-06-06T02:18:15.5776921Z   key: Linux-uv-fc2eba632c5d0bd56da71a848f61f4a5163601b0f207bee3713baa3b4e5f1f61
2025-06-06T02:18:15.5777435Z   restore-keys: Linux-uv-

2025-06-06T02:18:15.5777720Z   enableCrossOsArchive: false
2025-06-06T02:18:15.5778346Z   fail-on-cache-miss: false
2025-06-06T02:18:15.5778678Z   lookup-only: false
2025-06-06T02:18:15.5778985Z   save-always: false
2025-06-06T02:18:15.5779175Z env:
2025-06-06T02:18:15.5779396Z   TOOL_API_KEY: ci-test-api-key-for-github-actions
2025-06-06T02:18:15.5779754Z   pythonLocation: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:18:15.5780176Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib/pkgconfig
2025-06-06T02:18:15.5780585Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:18:15.5780951Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:18:15.5781372Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:18:15.5781745Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib
2025-06-06T02:18:15.5782060Z ##[endgroup]
2025-06-06T02:18:15.7718129Z Cache not found for input keys: Linux-uv-fc2eba632c5d0bd56da71a848f61f4a5163601b0f207bee3713baa3b4e5f1f61, Linux-uv-
2025-06-06T02:18:15.7798802Z ##[group]Run curl -LsSf https://astral.sh/uv/install.sh | sh
2025-06-06T02:18:15.7799640Z [36;1mcurl -LsSf https://astral.sh/uv/install.sh | sh[0m
2025-06-06T02:18:15.7799992Z [36;1mecho "$HOME/.cargo/bin" >> $GITHUB_PATH[0m
2025-06-06T02:18:15.7800306Z [36;1m# Verify uv is installed and in PATH[0m
2025-06-06T02:18:15.7800602Z [36;1mwhich uv || echo "uv not found in PATH"[0m
2025-06-06T02:18:15.7852863Z shell: /usr/bin/bash -e {0}
2025-06-06T02:18:15.7853095Z env:
2025-06-06T02:18:15.7853322Z   TOOL_API_KEY: ci-test-api-key-for-github-actions
2025-06-06T02:18:15.7853701Z   pythonLocation: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:18:15.7854140Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib/pkgconfig
2025-06-06T02:18:15.7854554Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:18:15.7854917Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:18:15.7855320Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:18:15.7855693Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib
2025-06-06T02:18:15.7856002Z ##[endgroup]
2025-06-06T02:18:16.0114380Z downloading uv 0.7.11 x86_64-unknown-linux-gnu
2025-06-06T02:18:16.2041687Z no checksums to verify
2025-06-06T02:18:16.5158130Z installing to /home/runner/.local/bin
2025-06-06T02:18:16.5200708Z   uv
2025-06-06T02:18:16.5227755Z   uvx
2025-06-06T02:18:16.5228373Z everything's installed!
2025-06-06T02:18:16.5309466Z /home/runner/.local/bin/uv
2025-06-06T02:18:16.5346282Z ##[group]Run # Ensure pip is up to date
2025-06-06T02:18:16.5346650Z [36;1m# Ensure pip is up to date[0m
2025-06-06T02:18:16.5346949Z [36;1mpython -m pip install --upgrade pip[0m
2025-06-06T02:18:16.5347221Z [36;1m[0m
2025-06-06T02:18:16.5347429Z [36;1m# Install uv if not already available[0m
2025-06-06T02:18:16.5347739Z [36;1mwhich uv || python -m pip install uv[0m
2025-06-06T02:18:16.5348284Z [36;1m[0m
2025-06-06T02:18:16.5348470Z [36;1m# Install testing tools[0m
2025-06-06T02:18:16.5348889Z [36;1mpython -m pip install ruff pyright pytest pytest-cov pytest-xdist pytest-asyncio[0m
2025-06-06T02:18:16.5349314Z [36;1m[0m
2025-06-06T02:18:16.5349496Z [36;1m# Install requirements[0m
2025-06-06T02:18:16.5349908Z [36;1mif [ -f requirements-dev.txt ]; then python -m pip install -r requirements-dev.txt; fi[0m
2025-06-06T02:18:16.5350464Z [36;1mif [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi[0m
2025-06-06T02:18:16.5350885Z [36;1m[0m
2025-06-06T02:18:16.5351112Z [36;1m# Install MCP SDK using the installation script[0m
2025-06-06T02:18:16.5351499Z [36;1mecho "Installing MCP SDK using installation script..."[0m
2025-06-06T02:18:16.5351847Z [36;1mpython install_mcp_sdk.py[0m
2025-06-06T02:18:16.5403623Z shell: /usr/bin/bash -e {0}
2025-06-06T02:18:16.5403870Z env:
2025-06-06T02:18:16.5404106Z   TOOL_API_KEY: ci-test-api-key-for-github-actions
2025-06-06T02:18:16.5404487Z   pythonLocation: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:18:16.5404930Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib/pkgconfig
2025-06-06T02:18:16.5405384Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:18:16.5405796Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:18:16.5406200Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:18:16.5406605Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib
2025-06-06T02:18:16.5406943Z ##[endgroup]
2025-06-06T02:18:17.0350143Z Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (25.1.1)
2025-06-06T02:18:17.2215090Z /home/runner/.local/bin/uv
2025-06-06T02:18:17.9877233Z Collecting ruff
2025-06-06T02:18:18.0294382Z   Downloading ruff-0.11.13-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (25 kB)
2025-06-06T02:18:18.0764441Z Collecting pyright
2025-06-06T02:18:18.0823674Z   Downloading pyright-1.1.401-py3-none-any.whl.metadata (6.6 kB)
2025-06-06T02:18:18.1269913Z Collecting pytest
2025-06-06T02:18:18.1307580Z   Downloading pytest-8.4.0-py3-none-any.whl.metadata (7.7 kB)
2025-06-06T02:18:18.1477334Z Collecting pytest-cov
2025-06-06T02:18:18.1511766Z   Downloading pytest_cov-6.1.1-py3-none-any.whl.metadata (28 kB)
2025-06-06T02:18:18.1712291Z Collecting pytest-xdist
2025-06-06T02:18:18.1795323Z   Downloading pytest_xdist-3.7.0-py3-none-any.whl.metadata (3.0 kB)
2025-06-06T02:18:18.1999121Z Collecting pytest-asyncio
2025-06-06T02:18:18.2030947Z   Downloading pytest_asyncio-1.0.0-py3-none-any.whl.metadata (4.0 kB)
2025-06-06T02:18:18.2201123Z Collecting nodeenv>=1.6.0 (from pyright)
2025-06-06T02:18:18.2235532Z   Downloading nodeenv-1.9.1-py2.py3-none-any.whl.metadata (21 kB)
2025-06-06T02:18:18.2424448Z Collecting typing-extensions>=4.1 (from pyright)
2025-06-06T02:18:18.2488126Z   Downloading typing_extensions-4.14.0-py3-none-any.whl.metadata (3.0 kB)
2025-06-06T02:18:18.2594456Z Collecting iniconfig>=1 (from pytest)
2025-06-06T02:18:18.2632040Z   Downloading iniconfig-2.1.0-py3-none-any.whl.metadata (2.7 kB)
2025-06-06T02:18:18.2802511Z Collecting packaging>=20 (from pytest)
2025-06-06T02:18:18.2866122Z   Downloading packaging-25.0-py3-none-any.whl.metadata (3.3 kB)
2025-06-06T02:18:18.3006843Z Collecting pluggy<2,>=1.5 (from pytest)
2025-06-06T02:18:18.3056834Z   Downloading pluggy-1.6.0-py3-none-any.whl.metadata (4.8 kB)
2025-06-06T02:18:18.3259753Z Collecting pygments>=2.7.2 (from pytest)
2025-06-06T02:18:18.3307755Z   Downloading pygments-2.19.1-py3-none-any.whl.metadata (2.5 kB)
2025-06-06T02:18:18.6221828Z Collecting coverage>=7.5 (from coverage[toml]>=7.5->pytest-cov)
2025-06-06T02:18:18.6269589Z   Downloading coverage-7.8.2-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (8.9 kB)
2025-06-06T02:18:18.6413847Z Collecting execnet>=2.1 (from pytest-xdist)
2025-06-06T02:18:18.6448679Z   Downloading execnet-2.1.1-py3-none-any.whl.metadata (2.9 kB)
2025-06-06T02:18:18.6896366Z Downloading ruff-0.11.13-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.6 MB)
2025-06-06T02:18:18.7946459Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 11.6/11.6 MB 121.5 MB/s eta 0:00:00
2025-06-06T02:18:18.8045273Z Downloading pyright-1.1.401-py3-none-any.whl (5.6 MB)
2025-06-06T02:18:18.8409085Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 5.6/5.6 MB 161.3 MB/s eta 0:00:00
2025-06-06T02:18:18.8448602Z Downloading pytest-8.4.0-py3-none-any.whl (363 kB)
2025-06-06T02:18:18.8514114Z Downloading pluggy-1.6.0-py3-none-any.whl (20 kB)
2025-06-06T02:18:18.8568463Z Downloading pytest_cov-6.1.1-py3-none-any.whl (23 kB)
2025-06-06T02:18:18.8720214Z Downloading pytest_xdist-3.7.0-py3-none-any.whl (46 kB)
2025-06-06T02:18:18.8772364Z Downloading pytest_asyncio-1.0.0-py3-none-any.whl (15 kB)
2025-06-06T02:18:18.8825000Z Downloading coverage-7.8.2-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (245 kB)
2025-06-06T02:18:18.8892335Z Downloading execnet-2.1.1-py3-none-any.whl (40 kB)
2025-06-06T02:18:18.8942534Z Downloading iniconfig-2.1.0-py3-none-any.whl (6.0 kB)
2025-06-06T02:18:18.8995690Z Downloading nodeenv-1.9.1-py2.py3-none-any.whl (22 kB)
2025-06-06T02:18:18.9050647Z Downloading packaging-25.0-py3-none-any.whl (66 kB)
2025-06-06T02:18:18.9101409Z Downloading pygments-2.19.1-py3-none-any.whl (1.2 MB)
2025-06-06T02:18:18.9183882Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.2/1.2 MB 171.2 MB/s eta 0:00:00
2025-06-06T02:18:18.9222080Z Downloading typing_extensions-4.14.0-py3-none-any.whl (43 kB)
2025-06-06T02:18:19.0406773Z Installing collected packages: typing-extensions, ruff, pygments, pluggy, packaging, nodeenv, iniconfig, execnet, coverage, pytest, pyright, pytest-xdist, pytest-cov, pytest-asyncio
2025-06-06T02:18:21.1657142Z 
2025-06-06T02:18:21.1679922Z Successfully installed coverage-7.8.2 execnet-2.1.1 iniconfig-2.1.0 nodeenv-1.9.1 packaging-25.0 pluggy-1.6.0 pygments-2.19.1 pyright-1.1.401 pytest-8.4.0 pytest-asyncio-1.0.0 pytest-cov-6.1.1 pytest-xdist-3.7.0 ruff-0.11.13 typing-extensions-4.14.0
2025-06-06T02:18:21.6961332Z Requirement already satisfied: ruff>=0.1.6 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements-dev.txt (line 2)) (0.11.13)
2025-06-06T02:18:21.6965657Z Requirement already satisfied: pyright>=1.1.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements-dev.txt (line 3)) (1.1.401)
2025-06-06T02:18:21.6970153Z Requirement already satisfied: pytest>=7.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements-dev.txt (line 4)) (8.4.0)
2025-06-06T02:18:21.6974440Z Requirement already satisfied: pytest-cov>=4.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements-dev.txt (line 5)) (6.1.1)
2025-06-06T02:18:21.7525840Z Collecting pytest-mock>=3.10.0 (from -r requirements-dev.txt (line 6))
2025-06-06T02:18:21.7871171Z   Downloading pytest_mock-3.14.1-py3-none-any.whl.metadata (3.9 kB)
2025-06-06T02:18:21.7917231Z Requirement already satisfied: pytest-xdist>=3.2.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements-dev.txt (line 7)) (3.7.0)
2025-06-06T02:18:21.7922511Z Requirement already satisfied: pytest-asyncio>=0.26.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements-dev.txt (line 8)) (1.0.0)
2025-06-06T02:18:21.8332615Z Collecting pre-commit>=3.0.0 (from -r requirements-dev.txt (line 10))
2025-06-06T02:18:21.8369360Z   Downloading pre_commit-4.2.0-py2.py3-none-any.whl.metadata (1.3 kB)
2025-06-06T02:18:22.0785186Z Collecting hypothesis>=6.76.0 (from -r requirements-dev.txt (line 11))
2025-06-06T02:18:22.0823826Z   Downloading hypothesis-6.135.1-py3-none-any.whl.metadata (5.6 kB)
2025-06-06T02:18:22.2615759Z Collecting numpy>=1.24.3 (from -r requirements-dev.txt (line 12))
2025-06-06T02:18:22.2657344Z   Downloading numpy-2.2.6-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (62 kB)
2025-06-06T02:18:22.3892193Z Collecting pydantic>=2.0.0 (from -r requirements-dev.txt (line 13))
2025-06-06T02:18:22.3935821Z   Downloading pydantic-2.11.5-py3-none-any.whl.metadata (67 kB)
2025-06-06T02:18:22.8849009Z Collecting aiohttp>=3.9.0 (from -r requirements-dev.txt (line 14))
2025-06-06T02:18:22.8908651Z   Downloading aiohttp-3.12.9-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (7.6 kB)
2025-06-06T02:18:22.9102964Z Collecting pyjwt>=2.0.0 (from -r requirements-dev.txt (line 15))
2025-06-06T02:18:22.9136699Z   Downloading PyJWT-2.10.1-py3-none-any.whl.metadata (4.0 kB)
2025-06-06T02:18:22.9284374Z Collecting pathspec>=0.12.1 (from -r requirements-dev.txt (line 16))
2025-06-06T02:18:22.9320895Z   Downloading pathspec-0.12.1-py3-none-any.whl.metadata (21 kB)
2025-06-06T02:18:22.9514160Z Collecting types-PyYAML (from -r requirements-dev.txt (line 17))
2025-06-06T02:18:22.9547588Z   Downloading types_pyyaml-6.0.12.20250516-py3-none-any.whl.metadata (1.8 kB)
2025-06-06T02:18:22.9892207Z Collecting pyyaml>=6.0.0 (from -r requirements-dev.txt (line 18))
2025-06-06T02:18:22.9934588Z   Downloading PyYAML-6.0.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.1 kB)
2025-06-06T02:18:23.0185650Z Collecting modelcontextprotocol>=0.1.0 (from -r requirements-dev.txt (line 19))
2025-06-06T02:18:23.0229396Z   Downloading modelcontextprotocol-0.1.0-py3-none-any.whl.metadata (6.3 kB)
2025-06-06T02:18:23.0413968Z Collecting flask>=2.3.0 (from -r requirements-dev.txt (line 22))
2025-06-06T02:18:23.0449000Z   Downloading flask-3.1.1-py3-none-any.whl.metadata (3.0 kB)
2025-06-06T02:18:23.0591574Z Collecting flask-sqlalchemy>=3.1.0 (from -r requirements-dev.txt (line 23))
2025-06-06T02:18:23.0628844Z   Downloading flask_sqlalchemy-3.1.1-py3-none-any.whl.metadata (3.4 kB)
2025-06-06T02:18:23.0781629Z Collecting flask-migrate>=4.0.0 (from -r requirements-dev.txt (line 24))
2025-06-06T02:18:23.0823390Z   Downloading Flask_Migrate-4.1.0-py3-none-any.whl.metadata (3.3 kB)
2025-06-06T02:18:23.1438495Z Collecting psycopg2-binary>=2.9.9 (from -r requirements-dev.txt (line 25))
2025-06-06T02:18:23.1499943Z   Downloading psycopg2_binary-2.9.10-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.9 kB)
2025-06-06T02:18:23.4123748Z Collecting sqlalchemy>=2.0.0 (from -r requirements-dev.txt (line 26))
2025-06-06T02:18:23.4165789Z   Downloading sqlalchemy-2.0.41-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.6 kB)
2025-06-06T02:18:23.5003219Z Collecting bcrypt>=4.0.1 (from -r requirements-dev.txt (line 27))
2025-06-06T02:18:23.5039246Z   Downloading bcrypt-4.3.0-cp39-abi3-manylinux_2_34_x86_64.whl.metadata (10 kB)
2025-06-06T02:18:23.5151021Z Collecting types-Flask (from -r requirements-dev.txt (line 28))
2025-06-06T02:18:23.5194709Z   Downloading types_Flask-1.1.6-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:18:23.5314014Z Collecting types-flask-sqlalchemy (from -r requirements-dev.txt (line 29))
2025-06-06T02:18:23.5354296Z   Downloading types_Flask_SQLAlchemy-2.5.9.4-py3-none-any.whl.metadata (1.6 kB)
2025-06-06T02:18:23.5403196Z Requirement already satisfied: nodeenv>=1.6.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from pyright>=1.1.0->-r requirements-dev.txt (line 3)) (1.9.1)
2025-06-06T02:18:23.5409677Z Requirement already satisfied: typing-extensions>=4.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from pyright>=1.1.0->-r requirements-dev.txt (line 3)) (4.14.0)
2025-06-06T02:18:23.5431194Z Requirement already satisfied: iniconfig>=1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from pytest>=7.0.0->-r requirements-dev.txt (line 4)) (2.1.0)
2025-06-06T02:18:23.5437208Z Requirement already satisfied: packaging>=20 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from pytest>=7.0.0->-r requirements-dev.txt (line 4)) (25.0)
2025-06-06T02:18:23.5444207Z Requirement already satisfied: pluggy<2,>=1.5 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from pytest>=7.0.0->-r requirements-dev.txt (line 4)) (1.6.0)
2025-06-06T02:18:23.5450491Z Requirement already satisfied: pygments>=2.7.2 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from pytest>=7.0.0->-r requirements-dev.txt (line 4)) (2.19.1)
2025-06-06T02:18:23.5488780Z Requirement already satisfied: coverage>=7.5 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from coverage[toml]>=7.5->pytest-cov>=4.0.0->-r requirements-dev.txt (line 5)) (7.8.2)
2025-06-06T02:18:23.5518204Z Requirement already satisfied: execnet>=2.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from pytest-xdist>=3.2.0->-r requirements-dev.txt (line 7)) (2.1.1)
2025-06-06T02:18:23.5638764Z Collecting cfgv>=2.0.0 (from pre-commit>=3.0.0->-r requirements-dev.txt (line 10))
2025-06-06T02:18:23.5707426Z   Downloading cfgv-3.4.0-py2.py3-none-any.whl.metadata (8.5 kB)
2025-06-06T02:18:23.6156913Z Collecting identify>=1.0.0 (from pre-commit>=3.0.0->-r requirements-dev.txt (line 10))
2025-06-06T02:18:23.6218899Z   Downloading identify-2.6.12-py2.py3-none-any.whl.metadata (4.4 kB)
2025-06-06T02:18:23.6668266Z Collecting virtualenv>=20.10.0 (from pre-commit>=3.0.0->-r requirements-dev.txt (line 10))
2025-06-06T02:18:23.6704157Z   Downloading virtualenv-20.31.2-py3-none-any.whl.metadata (4.5 kB)
2025-06-06T02:18:23.6895017Z Collecting attrs>=22.2.0 (from hypothesis>=6.76.0->-r requirements-dev.txt (line 11))
2025-06-06T02:18:23.6931131Z   Downloading attrs-25.3.0-py3-none-any.whl.metadata (10 kB)
2025-06-06T02:18:23.7148136Z Collecting sortedcontainers<3.0.0,>=2.1.0 (from hypothesis>=6.76.0->-r requirements-dev.txt (line 11))
2025-06-06T02:18:23.7183476Z   Downloading sortedcontainers-2.4.0-py2.py3-none-any.whl.metadata (10 kB)
2025-06-06T02:18:23.7314742Z Collecting annotated-types>=0.6.0 (from pydantic>=2.0.0->-r requirements-dev.txt (line 13))
2025-06-06T02:18:23.7349505Z   Downloading annotated_types-0.7.0-py3-none-any.whl.metadata (15 kB)
2025-06-06T02:18:24.3598872Z Collecting pydantic-core==2.33.2 (from pydantic>=2.0.0->-r requirements-dev.txt (line 13))
2025-06-06T02:18:24.3641693Z   Downloading pydantic_core-2.33.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (6.8 kB)
2025-06-06T02:18:24.3756843Z Collecting typing-inspection>=0.4.0 (from pydantic>=2.0.0->-r requirements-dev.txt (line 13))
2025-06-06T02:18:24.3795421Z   Downloading typing_inspection-0.4.1-py3-none-any.whl.metadata (2.6 kB)
2025-06-06T02:18:24.3973396Z Collecting aiohappyeyeballs>=2.5.0 (from aiohttp>=3.9.0->-r requirements-dev.txt (line 14))
2025-06-06T02:18:24.4015499Z   Downloading aiohappyeyeballs-2.6.1-py3-none-any.whl.metadata (5.9 kB)
2025-06-06T02:18:24.4122467Z Collecting aiosignal>=1.1.2 (from aiohttp>=3.9.0->-r requirements-dev.txt (line 14))
2025-06-06T02:18:24.4161793Z   Downloading aiosignal-1.3.2-py2.py3-none-any.whl.metadata (3.8 kB)
2025-06-06T02:18:24.4766803Z Collecting frozenlist>=1.1.1 (from aiohttp>=3.9.0->-r requirements-dev.txt (line 14))
2025-06-06T02:18:24.4806702Z   Downloading frozenlist-1.6.2-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (17 kB)
2025-06-06T02:18:24.6702090Z Collecting multidict<7.0,>=4.5 (from aiohttp>=3.9.0->-r requirements-dev.txt (line 14))
2025-06-06T02:18:24.6919872Z   Downloading multidict-6.4.4-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (5.3 kB)
2025-06-06T02:18:24.7314422Z Collecting propcache>=0.2.0 (from aiohttp>=3.9.0->-r requirements-dev.txt (line 14))
2025-06-06T02:18:24.7358540Z   Downloading propcache-0.3.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (10 kB)
2025-06-06T02:18:24.9799114Z Collecting yarl<2.0,>=1.17.0 (from aiohttp>=3.9.0->-r requirements-dev.txt (line 14))
2025-06-06T02:18:24.9838947Z   Downloading yarl-1.20.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (72 kB)
2025-06-06T02:18:25.0064509Z Collecting idna>=2.0 (from yarl<2.0,>=1.17.0->aiohttp>=3.9.0->-r requirements-dev.txt (line 14))
2025-06-06T02:18:25.0107996Z   Downloading idna-3.10-py3-none-any.whl.metadata (10 kB)
2025-06-06T02:18:25.0445726Z Collecting airtrain>=0.1.58 (from modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:25.0590950Z   Downloading airtrain-0.1.68-py3-none-any.whl.metadata (6.5 kB)
2025-06-06T02:18:25.1021468Z Collecting rich>=12.0.0 (from modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:25.1076154Z   Downloading rich-14.0.0-py3-none-any.whl.metadata (18 kB)
2025-06-06T02:18:25.1327304Z Collecting typer>=0.7.0 (from modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:25.1381301Z   Downloading typer-0.16.0-py3-none-any.whl.metadata (15 kB)
2025-06-06T02:18:25.2198201Z Collecting python-dotenv>=0.20.0 (from modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:25.2236335Z   Downloading python_dotenv-1.1.0-py3-none-any.whl.metadata (24 kB)
2025-06-06T02:18:25.2518632Z Collecting requests>=2.25.0 (from modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:25.2560008Z   Downloading requests-2.32.3-py3-none-any.whl.metadata (4.6 kB)
2025-06-06T02:18:25.2694963Z Collecting blinker>=1.9.0 (from flask>=2.3.0->-r requirements-dev.txt (line 22))
2025-06-06T02:18:25.2727507Z   Downloading blinker-1.9.0-py3-none-any.whl.metadata (1.6 kB)
2025-06-06T02:18:25.2900385Z Collecting click>=8.1.3 (from flask>=2.3.0->-r requirements-dev.txt (line 22))
2025-06-06T02:18:25.2945049Z   Downloading click-8.2.1-py3-none-any.whl.metadata (2.5 kB)
2025-06-06T02:18:25.3058053Z Collecting itsdangerous>=2.2.0 (from flask>=2.3.0->-r requirements-dev.txt (line 22))
2025-06-06T02:18:25.3110270Z   Downloading itsdangerous-2.2.0-py3-none-any.whl.metadata (1.9 kB)
2025-06-06T02:18:25.3274313Z Collecting jinja2>=3.1.2 (from flask>=2.3.0->-r requirements-dev.txt (line 22))
2025-06-06T02:18:25.3308295Z   Downloading jinja2-3.1.6-py3-none-any.whl.metadata (2.9 kB)
2025-06-06T02:18:25.3809147Z Collecting markupsafe>=2.1.1 (from flask>=2.3.0->-r requirements-dev.txt (line 22))
2025-06-06T02:18:25.3854375Z   Downloading MarkupSafe-3.0.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.0 kB)
2025-06-06T02:18:25.4079700Z Collecting werkzeug>=3.1.0 (from flask>=2.3.0->-r requirements-dev.txt (line 22))
2025-06-06T02:18:25.4128993Z   Downloading werkzeug-3.1.3-py3-none-any.whl.metadata (3.7 kB)
2025-06-06T02:18:25.4612913Z Collecting alembic>=1.9.0 (from flask-migrate>=4.0.0->-r requirements-dev.txt (line 24))
2025-06-06T02:18:25.4754362Z   Downloading alembic-1.16.1-py3-none-any.whl.metadata (7.3 kB)
2025-06-06T02:18:25.5981053Z Collecting greenlet>=1 (from sqlalchemy>=2.0.0->-r requirements-dev.txt (line 26))
2025-06-06T02:18:25.6051759Z   Downloading greenlet-3.2.3-cp312-cp312-manylinux_2_24_x86_64.manylinux_2_28_x86_64.whl.metadata (4.1 kB)
2025-06-06T02:18:25.6196745Z Collecting types-Jinja2 (from types-Flask->-r requirements-dev.txt (line 28))
2025-06-06T02:18:25.6242344Z   Downloading types_Jinja2-2.11.9-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:18:25.6391177Z Collecting types-Werkzeug (from types-Flask->-r requirements-dev.txt (line 28))
2025-06-06T02:18:25.6445821Z   Downloading types_Werkzeug-1.0.9-py3-none-any.whl.metadata (1.0 kB)
2025-06-06T02:18:25.6563194Z Collecting types-click (from types-Flask->-r requirements-dev.txt (line 28))
2025-06-06T02:18:25.6631979Z   Downloading types_click-7.1.8-py3-none-any.whl.metadata (1.0 kB)
2025-06-06T02:18:25.6889674Z Collecting types-SQLAlchemy (from types-flask-sqlalchemy->-r requirements-dev.txt (line 29))
2025-06-06T02:18:25.6947402Z   Downloading types_SQLAlchemy-1.4.53.38-py3-none-any.whl.metadata (1.6 kB)
2025-06-06T02:18:25.7606562Z Collecting openai>=1.60.1 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:25.7644539Z   Downloading openai-1.84.0-py3-none-any.whl.metadata (25 kB)
2025-06-06T02:18:25.7882952Z Collecting firebase-admin>=6.6.0 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:25.7922255Z   Downloading firebase_admin-6.9.0-py3-none-any.whl.metadata (1.5 kB)
2025-06-06T02:18:25.8060533Z Collecting loguru>=0.7.3 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:25.8098431Z   Downloading loguru-0.7.3-py3-none-any.whl.metadata (22 kB)
2025-06-06T02:18:26.0895181Z Collecting boto3>=1.36.6 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:26.0939063Z   Downloading boto3-1.38.31-py3-none-any.whl.metadata (6.6 kB)
2025-06-06T02:18:26.1169857Z Collecting together>=1.3.13 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:26.1215771Z   Downloading together-1.5.8-py3-none-any.whl.metadata (15 kB)
2025-06-06T02:18:26.1509738Z Collecting anthropic>=0.45.0 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:26.1549579Z   Downloading anthropic-0.52.2-py3-none-any.whl.metadata (25 kB)
2025-06-06T02:18:26.1729878Z Collecting groq>=0.15.0 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:26.1780256Z   Downloading groq-0.26.0-py3-none-any.whl.metadata (15 kB)
2025-06-06T02:18:26.1932500Z Collecting cerebras-cloud-sdk>=1.19.0 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:26.1994976Z   Downloading cerebras_cloud_sdk-1.35.0-py3-none-any.whl.metadata (18 kB)
2025-06-06T02:18:26.2156031Z Collecting google-genai>=1.0.0 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:26.2202368Z   Downloading google_genai-1.19.0-py3-none-any.whl.metadata (35 kB)
2025-06-06T02:18:26.2447017Z Collecting fireworks-ai>=0.15.12 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:26.2489243Z   Downloading fireworks_ai-0.17.16-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:18:26.2723085Z Collecting google-generativeai>=0.8.4 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:26.2882262Z   Downloading google_generativeai-0.8.5-py3-none-any.whl.metadata (3.9 kB)
2025-06-06T02:18:26.3356345Z Collecting prompt-toolkit>=3.0.36 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:26.3396474Z   Downloading prompt_toolkit-3.0.51-py3-none-any.whl.metadata (6.4 kB)
2025-06-06T02:18:26.3550338Z Collecting colorama>=0.4.6 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:26.3588631Z   Downloading colorama-0.4.6-py2.py3-none-any.whl.metadata (17 kB)
2025-06-06T02:18:26.3902792Z Collecting posthog>=3.7.0 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:26.3965496Z   Downloading posthog-4.2.0-py2.py3-none-any.whl.metadata (3.0 kB)
2025-06-06T02:18:26.4354235Z Collecting Mako (from alembic>=1.9.0->flask-migrate>=4.0.0->-r requirements-dev.txt (line 24))
2025-06-06T02:18:26.4393823Z   Downloading mako-1.3.10-py3-none-any.whl.metadata (2.9 kB)
2025-06-06T02:18:26.5462096Z Collecting anyio<5,>=3.5.0 (from anthropic>=0.45.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:26.5498586Z   Downloading anyio-4.9.0-py3-none-any.whl.metadata (4.7 kB)
2025-06-06T02:18:26.5651590Z Collecting distro<2,>=1.7.0 (from anthropic>=0.45.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:26.5686697Z   Downloading distro-1.9.0-py3-none-any.whl.metadata (6.8 kB)
2025-06-06T02:18:26.5899299Z Collecting httpx<1,>=0.25.0 (from anthropic>=0.45.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:26.5936619Z   Downloading httpx-0.28.1-py3-none-any.whl.metadata (7.1 kB)
2025-06-06T02:18:26.6556961Z Collecting jiter<1,>=0.4.0 (from anthropic>=0.45.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:26.6599901Z   Downloading jiter-0.10.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (5.2 kB)
2025-06-06T02:18:26.6895993Z Collecting sniffio (from anthropic>=0.45.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:26.6940053Z   Downloading sniffio-1.3.1-py3-none-any.whl.metadata (3.9 kB)
2025-06-06T02:18:26.7229250Z Collecting certifi (from httpx<1,>=0.25.0->anthropic>=0.45.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:26.7267434Z   Downloading certifi-2025.4.26-py3-none-any.whl.metadata (2.5 kB)
2025-06-06T02:18:26.7468052Z Collecting httpcore==1.* (from httpx<1,>=0.25.0->anthropic>=0.45.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:26.7505920Z   Downloading httpcore-1.0.9-py3-none-any.whl.metadata (21 kB)
2025-06-06T02:18:26.7653848Z Collecting h11>=0.16 (from httpcore==1.*->httpx<1,>=0.25.0->anthropic>=0.45.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:26.7689909Z   Downloading h11-0.16.0-py3-none-any.whl.metadata (8.3 kB)
2025-06-06T02:18:27.0872612Z Collecting botocore<1.39.0,>=1.38.31 (from boto3>=1.36.6->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:27.0912856Z   Downloading botocore-1.38.31-py3-none-any.whl.metadata (5.7 kB)
2025-06-06T02:18:27.1056861Z Collecting jmespath<2.0.0,>=0.7.1 (from boto3>=1.36.6->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:27.1095140Z   Downloading jmespath-1.0.1-py3-none-any.whl.metadata (7.6 kB)
2025-06-06T02:18:27.1376745Z Collecting s3transfer<0.14.0,>=0.13.0 (from boto3>=1.36.6->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:27.1456913Z   Downloading s3transfer-0.13.0-py3-none-any.whl.metadata (1.7 kB)
2025-06-06T02:18:27.1638673Z Collecting python-dateutil<3.0.0,>=2.1 (from botocore<1.39.0,>=1.38.31->boto3>=1.36.6->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:27.1739241Z   Downloading python_dateutil-2.9.0.post0-py2.py3-none-any.whl.metadata (8.4 kB)
2025-06-06T02:18:27.2062613Z Collecting urllib3!=2.2.0,<3,>=1.25.4 (from botocore<1.39.0,>=1.38.31->boto3>=1.36.6->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:27.2137747Z   Downloading urllib3-2.4.0-py3-none-any.whl.metadata (6.5 kB)
2025-06-06T02:18:27.2331433Z Collecting six>=1.5 (from python-dateutil<3.0.0,>=2.1->botocore<1.39.0,>=1.38.31->boto3>=1.36.6->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:27.2369438Z   Downloading six-1.17.0-py2.py3-none-any.whl.metadata (1.7 kB)
2025-06-06T02:18:27.3761723Z Collecting cachecontrol>=0.12.14 (from firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:27.3849473Z   Downloading cachecontrol-0.14.3-py3-none-any.whl.metadata (3.1 kB)
2025-06-06T02:18:27.4459903Z Collecting google-api-python-client>=1.7.8 (from firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:27.4593126Z   Downloading google_api_python_client-2.171.0.tar.gz (13.0 MB)
2025-06-06T02:18:27.5207305Z      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 13.0/13.0 MB 227.2 MB/s eta 0:00:00
2025-06-06T02:18:28.1633865Z   Installing build dependencies: started
2025-06-06T02:18:28.9945043Z   Installing build dependencies: finished with status 'done'
2025-06-06T02:18:28.9952287Z   Getting requirements to build wheel: started
2025-06-06T02:18:29.4345282Z   Getting requirements to build wheel: finished with status 'done'
2025-06-06T02:18:29.4355396Z   Preparing metadata (pyproject.toml): started
2025-06-06T02:18:29.6589426Z   Preparing metadata (pyproject.toml): finished with status 'done'
2025-06-06T02:18:29.6866275Z Collecting google-cloud-storage>=1.37.1 (from firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:29.6916626Z   Downloading google_cloud_storage-3.1.0-py2.py3-none-any.whl.metadata (12 kB)
2025-06-06T02:18:29.7428318Z Collecting google-api-core<3.0.0dev,>=1.22.1 (from google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:29.7492595Z   Downloading google_api_core-2.25.0-py3-none-any.whl.metadata (3.0 kB)
2025-06-06T02:18:29.7733127Z Collecting google-cloud-firestore>=2.19.0 (from firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:29.7768936Z   Downloading google_cloud_firestore-2.21.0-py3-none-any.whl.metadata (9.9 kB)
2025-06-06T02:18:29.7968823Z Collecting h2<5,>=3 (from httpx[http2]==0.28.1->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:29.8001572Z   Downloading h2-4.2.0-py3-none-any.whl.metadata (5.1 kB)
2025-06-06T02:18:29.8224097Z Collecting googleapis-common-protos<2.0.0,>=1.56.2 (from google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:29.8255984Z   Downloading googleapis_common_protos-1.70.0-py3-none-any.whl.metadata (9.3 kB)
2025-06-06T02:18:30.0350434Z Collecting protobuf!=3.20.0,!=3.20.1,!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<7.0.0,>=3.19.5 (from google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:30.0403383Z   Downloading protobuf-6.31.1-cp39-abi3-manylinux2014_x86_64.whl.metadata (593 bytes)
2025-06-06T02:18:30.0590085Z Collecting proto-plus<2.0.0,>=1.22.3 (from google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:30.0630443Z   Downloading proto_plus-1.26.1-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:18:30.1055440Z Collecting google-auth<3.0.0,>=2.14.1 (from google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:30.1099878Z   Downloading google_auth-2.40.3-py2.py3-none-any.whl.metadata (6.2 kB)
2025-06-06T02:18:30.6947442Z Collecting grpcio<2.0.0,>=1.33.2 (from google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:30.7005665Z   Downloading grpcio-1.72.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.8 kB)
2025-06-06T02:18:30.7413199Z Collecting grpcio-status<2.0.0,>=1.33.2 (from google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:30.7460808Z   Downloading grpcio_status-1.72.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:18:30.7970107Z Collecting cachetools<6.0,>=2.0.0 (from google-auth<3.0.0,>=2.14.1->google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:30.8003839Z   Downloading cachetools-5.5.2-py3-none-any.whl.metadata (5.4 kB)
2025-06-06T02:18:30.8194301Z Collecting pyasn1-modules>=0.2.1 (from google-auth<3.0.0,>=2.14.1->google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:30.8226452Z   Downloading pyasn1_modules-0.4.2-py3-none-any.whl.metadata (3.5 kB)
2025-06-06T02:18:30.8388167Z Collecting rsa<5,>=3.1.4 (from google-auth<3.0.0,>=2.14.1->google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:30.8420134Z   Downloading rsa-4.9.1-py3-none-any.whl.metadata (5.6 kB)
2025-06-06T02:18:31.0256327Z Collecting hyperframe<7,>=6.1 (from h2<5,>=3->httpx[http2]==0.28.1->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:31.0292062Z   Downloading hyperframe-6.1.0-py3-none-any.whl.metadata (4.3 kB)
2025-06-06T02:18:31.0405084Z Collecting hpack<5,>=4.1 (from h2<5,>=3->httpx[http2]==0.28.1->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:31.0447765Z   Downloading hpack-4.1.0-py3-none-any.whl.metadata (4.6 kB)
2025-06-06T02:18:31.2019561Z Collecting charset-normalizer<4,>=2 (from requests>=2.25.0->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:31.2066770Z   Downloading charset_normalizer-3.4.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (35 kB)
2025-06-06T02:18:31.2633444Z Collecting pyasn1>=0.1.3 (from rsa<5,>=3.1.4->google-auth<3.0.0,>=2.14.1->google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:31.2672655Z   Downloading pyasn1-0.6.1-py3-none-any.whl.metadata (8.4 kB)
2025-06-06T02:18:31.3426402Z Collecting msgpack<2.0.0,>=0.5.2 (from cachecontrol>=0.12.14->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:31.3463568Z   Downloading msgpack-1.1.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (8.4 kB)
2025-06-06T02:18:31.3684324Z Collecting httpx-ws (from fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:31.3731682Z   Downloading httpx_ws-0.7.2-py3-none-any.whl.metadata (9.3 kB)
2025-06-06T02:18:31.3833603Z Collecting httpx-sse (from fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:31.3869520Z   Downloading httpx_sse-0.4.0-py3-none-any.whl.metadata (9.0 kB)
2025-06-06T02:18:31.5492422Z Collecting Pillow (from fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:31.5530869Z   Downloading pillow-11.2.1-cp312-cp312-manylinux_2_28_x86_64.whl.metadata (8.9 kB)
2025-06-06T02:18:31.5954199Z Collecting mmh3>=4.1.0 (from fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:31.6003547Z   Downloading mmh3-5.1.0-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (16 kB)
2025-06-06T02:18:31.6156722Z Collecting betterproto-fw>=2.0.3 (from betterproto-fw[compiler]>=2.0.3->fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:31.6206575Z   Downloading betterproto_fw-2.0.3-py3-none-any.whl.metadata (18 kB)
2025-06-06T02:18:31.6328189Z Collecting asyncstdlib-fw>=3.13.2 (from fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:31.6412677Z   Downloading asyncstdlib_fw-3.13.2-py3-none-any.whl.metadata (5.0 kB)
2025-06-06T02:18:31.7135403Z INFO: pip is looking at multiple versions of fireworks-ai to determine which version is compatible with other requirements. This could take a while.
2025-06-06T02:18:31.7142920Z Collecting fireworks-ai>=0.15.12 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:31.7196186Z   Downloading fireworks_ai-0.17.15-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:18:31.7308394Z   Downloading fireworks_ai-0.17.14-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:18:31.7423173Z   Downloading fireworks_ai-0.17.13-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:18:31.7536016Z   Downloading fireworks_ai-0.17.12-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:18:31.7645242Z   Downloading fireworks_ai-0.17.9-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:18:31.7753214Z   Downloading fireworks_ai-0.17.8-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:18:31.7869500Z   Downloading fireworks_ai-0.17.7-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:18:31.7936130Z INFO: pip is still looking at multiple versions of fireworks-ai to determine which version is compatible with other requirements. This could take a while.
2025-06-06T02:18:31.7984921Z   Downloading fireworks_ai-0.17.6-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:18:31.8193476Z   Downloading fireworks_ai-0.17.5-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:18:31.9083355Z Collecting grpclib<0.5.0,>=0.4.1 (from betterproto-fw>=2.0.3->betterproto-fw[compiler]>=2.0.3->fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:31.9127405Z   Downloading grpclib-0.4.8-py3-none-any.whl.metadata (6.1 kB)
2025-06-06T02:18:32.3803599Z Collecting ruff>=0.1.6 (from -r requirements-dev.txt (line 2))
2025-06-06T02:18:32.3920579Z   Downloading ruff-0.9.10-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (25 kB)
2025-06-06T02:18:32.4213200Z Collecting httplib2<1.0.0,>=0.19.0 (from google-api-python-client>=1.7.8->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:32.4250487Z   Downloading httplib2-0.22.0-py3-none-any.whl.metadata (2.6 kB)
2025-06-06T02:18:32.4601069Z Collecting google-auth-httplib2<1.0.0,>=0.2.0 (from google-api-python-client>=1.7.8->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:32.4637475Z   Downloading google_auth_httplib2-0.2.0-py2.py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:18:32.4751149Z Collecting uritemplate<5,>=3.0.1 (from google-api-python-client>=1.7.8->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:32.4799673Z   Downloading uritemplate-4.2.0-py3-none-any.whl.metadata (2.6 kB)
2025-06-06T02:18:32.5188313Z Collecting pyparsing!=3.0.0,!=3.0.1,!=3.0.2,!=3.0.3,<4,>=2.4.2 (from httplib2<1.0.0,>=0.19.0->google-api-python-client>=1.7.8->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:32.5233758Z   Downloading pyparsing-3.2.3-py3-none-any.whl.metadata (5.0 kB)
2025-06-06T02:18:32.5548845Z Collecting google-cloud-core<3.0.0,>=1.4.1 (from google-cloud-firestore>=2.19.0->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:32.5582857Z   Downloading google_cloud_core-2.4.3-py2.py3-none-any.whl.metadata (2.7 kB)
2025-06-06T02:18:32.7196740Z Collecting google-resumable-media>=2.7.2 (from google-cloud-storage>=1.37.1->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:32.7232457Z   Downloading google_resumable_media-2.7.2-py2.py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:18:32.7813712Z Collecting google-crc32c<2.0dev,>=1.0 (from google-cloud-storage>=1.37.1->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:32.7852472Z   Downloading google_crc32c-1.7.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.3 kB)
2025-06-06T02:18:32.8925998Z Collecting websockets<15.1.0,>=13.0.0 (from google-genai>=1.0.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:32.8965101Z   Downloading websockets-15.0.1-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (6.8 kB)
2025-06-06T02:18:32.9201076Z Collecting google-ai-generativelanguage==0.6.15 (from google-generativeai>=0.8.4->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:32.9264969Z   Downloading google_ai_generativelanguage-0.6.15-py3-none-any.whl.metadata (5.7 kB)
2025-06-06T02:18:32.9827663Z Collecting tqdm (from google-generativeai>=0.8.4->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:32.9862953Z   Downloading tqdm-4.67.1-py3-none-any.whl.metadata (57 kB)
2025-06-06T02:18:33.0854782Z INFO: pip is looking at multiple versions of google-ai-generativelanguage to determine which version is compatible with other requirements. This could take a while.
2025-06-06T02:18:33.0866556Z Collecting google-generativeai>=0.8.4 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:33.0928765Z   Downloading google_generativeai-0.8.4-py3-none-any.whl.metadata (4.2 kB)
2025-06-06T02:18:33.1090463Z Collecting websockets<15.1.0,>=13.0.0 (from google-genai>=1.0.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:33.1147068Z   Downloading websockets-15.0-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (6.8 kB)
2025-06-06T02:18:33.1393340Z Collecting google-genai>=1.0.0 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:33.1473236Z   Downloading google_genai-1.18.0-py3-none-any.whl.metadata (35 kB)
2025-06-06T02:18:33.1743162Z Collecting google-crc32c<2.0dev,>=1.0 (from google-cloud-storage>=1.37.1->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:33.1899129Z   Downloading google_crc32c-1.7.1rc1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.3 kB)
2025-06-06T02:18:33.2128873Z INFO: pip is still looking at multiple versions of google-ai-generativelanguage to determine which version is compatible with other requirements. This could take a while.
2025-06-06T02:18:33.2141874Z Collecting google-cloud-storage>=1.37.1 (from firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:33.2362410Z   Downloading google_cloud_storage-3.0.0-py2.py3-none-any.whl.metadata (12 kB)
2025-06-06T02:18:33.2916865Z Collecting google-cloud-core<3.0.0,>=1.4.1 (from google-cloud-firestore>=2.19.0->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:33.3064774Z   Downloading google_cloud_core-2.4.2-py2.py3-none-any.whl.metadata (2.7 kB)
2025-06-06T02:18:33.3790308Z Collecting google-cloud-firestore>=2.19.0 (from firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:33.3891682Z   Downloading google_cloud_firestore-2.20.2-py3-none-any.whl.metadata (9.9 kB)
2025-06-06T02:18:33.4071140Z INFO: This is taking longer than usual. You might need to provide the dependency resolver with stricter constraints to reduce runtime. See https://pip.pypa.io/warnings/backtracking for guidance. If you want to abort this run, press Ctrl + C.
2025-06-06T02:18:33.4248875Z   Downloading google_cloud_firestore-2.20.1-py2.py3-none-any.whl.metadata (9.9 kB)
2025-06-06T02:18:33.5323121Z INFO: pip is looking at multiple versions of google-cloud-firestore to determine which version is compatible with other requirements. This could take a while.
2025-06-06T02:18:33.5404699Z   Downloading google_cloud_firestore-2.20.0-py2.py3-none-any.whl.metadata (5.7 kB)
2025-06-06T02:18:33.5617494Z   Downloading google_cloud_firestore-2.19.0-py2.py3-none-any.whl.metadata (5.7 kB)
2025-06-06T02:18:33.5702985Z Collecting uritemplate<5,>=3.0.1 (from google-api-python-client>=1.7.8->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:33.5742412Z   Downloading uritemplate-4.1.1-py2.py3-none-any.whl.metadata (2.9 kB)
2025-06-06T02:18:33.7064704Z   Downloading uritemplate-4.0.0-py2.py3-none-any.whl.metadata (2.9 kB)
2025-06-06T02:18:33.7823172Z Collecting pyparsing!=3.0.0,!=3.0.1,!=3.0.2,!=3.0.3,<4,>=2.4.2 (from httplib2<1.0.0,>=0.19.0->google-api-python-client>=1.7.8->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:33.7871630Z   Downloading pyparsing-3.2.2-py3-none-any.whl.metadata (5.0 kB)
2025-06-06T02:18:33.9471061Z   Downloading pyparsing-3.2.1-py3-none-any.whl.metadata (5.0 kB)
2025-06-06T02:18:34.0188377Z INFO: pip is still looking at multiple versions of google-cloud-firestore to determine which version is compatible with other requirements. This could take a while.
2025-06-06T02:18:34.0229723Z Collecting httplib2<1.0.0,>=0.19.0 (from google-api-python-client>=1.7.8->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:34.0501296Z   Downloading httplib2-0.21.0-py3-none-any.whl.metadata (2.6 kB)
2025-06-06T02:18:34.2258421Z   Downloading httplib2-0.20.4-py3-none-any.whl.metadata (2.5 kB)
2025-06-06T02:18:34.2996747Z Collecting google-api-python-client>=1.7.8 (from firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:34.3044272Z   Downloading google_api_python_client-2.170.0-py3-none-any.whl.metadata (6.7 kB)
2025-06-06T02:18:34.5604201Z   Downloading google_api_python_client-2.169.0-py3-none-any.whl.metadata (6.7 kB)
2025-06-06T02:18:34.7230755Z INFO: This is taking longer than usual. You might need to provide the dependency resolver with stricter constraints to reduce runtime. See https://pip.pypa.io/warnings/backtracking for guidance. If you want to abort this run, press Ctrl + C.
2025-06-06T02:18:34.7296026Z Collecting frozenlist>=1.1.1 (from aiohttp>=3.9.0->-r requirements-dev.txt (line 14))
2025-06-06T02:18:34.7345068Z   Downloading frozenlist-1.6.0-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (16 kB)
2025-06-06T02:18:34.9612604Z   Downloading frozenlist-1.5.0-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (13 kB)
2025-06-06T02:18:35.0331862Z Collecting ruff>=0.1.6 (from -r requirements-dev.txt (line 2))
2025-06-06T02:18:35.0390289Z   Downloading ruff-0.9.9-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (25 kB)
2025-06-06T02:18:35.3075161Z   Downloading ruff-0.9.8-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (25 kB)
2025-06-06T02:18:35.3629193Z Collecting grpclib<0.5.0,>=0.4.1 (from betterproto-fw>=2.0.3->betterproto-fw[compiler]>=2.0.3->fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:35.3666549Z   Downloading grpclib-0.4.7.tar.gz (61 kB)
2025-06-06T02:18:35.3847115Z   Installing build dependencies: started
2025-06-06T02:18:36.2044814Z   Installing build dependencies: finished with status 'done'
2025-06-06T02:18:36.2050982Z   Getting requirements to build wheel: started
2025-06-06T02:18:36.5411715Z   Getting requirements to build wheel: finished with status 'done'
2025-06-06T02:18:36.5420301Z   Preparing metadata (pyproject.toml): started
2025-06-06T02:18:36.7322807Z   Preparing metadata (pyproject.toml): finished with status 'done'
2025-06-06T02:18:37.0002978Z   Downloading grpclib-0.4.6.tar.gz (61 kB)
2025-06-06T02:18:37.0185756Z   Installing build dependencies: started
2025-06-06T02:18:37.7911594Z   Installing build dependencies: finished with status 'done'
2025-06-06T02:18:37.7916087Z   Getting requirements to build wheel: started
2025-06-06T02:18:38.1264288Z   Getting requirements to build wheel: finished with status 'done'
2025-06-06T02:18:38.1273179Z   Preparing metadata (pyproject.toml): started
2025-06-06T02:18:38.3204912Z   Preparing metadata (pyproject.toml): finished with status 'done'
2025-06-06T02:18:38.4013750Z INFO: This is taking longer than usual. You might need to provide the dependency resolver with stricter constraints to reduce runtime. See https://pip.pypa.io/warnings/backtracking for guidance. If you want to abort this run, press Ctrl + C.
2025-06-06T02:18:38.4177799Z Collecting fireworks-ai>=0.15.12 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:38.4226227Z   Downloading fireworks_ai-0.17.4-py3-none-any.whl.metadata (2.1 kB)
2025-06-06T02:18:38.4410572Z Collecting nest-asyncio>=1.6.0 (from fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:38.4448500Z   Downloading nest_asyncio-1.6.0-py3-none-any.whl.metadata (2.8 kB)
2025-06-06T02:18:39.1442987Z Collecting fireworks-ai>=0.15.12 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:39.1497362Z   Downloading fireworks_ai-0.17.3-py3-none-any.whl.metadata (2.1 kB)
2025-06-06T02:18:39.4998247Z Collecting certifi (from httpx<1,>=0.25.0->anthropic>=0.45.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:39.5050729Z   Downloading certifi-2025.1.31-py3-none-any.whl.metadata (2.5 kB)
2025-06-06T02:18:39.9071171Z   Downloading certifi-2024.12.14-py3-none-any.whl.metadata (2.3 kB)
2025-06-06T02:18:39.9742716Z Collecting msgpack<2.0.0,>=0.5.2 (from cachecontrol>=0.12.14->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:39.9799018Z   Downloading msgpack-1.0.8-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.1 kB)
2025-06-06T02:18:40.4049459Z   Downloading msgpack-1.0.7-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.1 kB)
2025-06-06T02:18:40.4737429Z Collecting cachecontrol>=0.12.14 (from firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:40.4789365Z   Downloading cachecontrol-0.14.2-py3-none-any.whl.metadata (3.1 kB)
2025-06-06T02:18:40.9245044Z   Downloading cachecontrol-0.14.1-py3-none-any.whl.metadata (3.1 kB)
2025-06-06T02:18:40.9918756Z Collecting rsa<5,>=3.1.4 (from google-auth<3.0.0,>=2.14.1->google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:40.9954628Z   Downloading rsa-4.9-py3-none-any.whl.metadata (4.2 kB)
2025-06-06T02:18:41.4589718Z   Downloading rsa-4.8-py3-none-any.whl.metadata (3.1 kB)
2025-06-06T02:18:41.5250218Z Collecting idna>=2.0 (from yarl<2.0,>=1.17.0->aiohttp>=3.9.0->-r requirements-dev.txt (line 14))
2025-06-06T02:18:41.5298464Z   Downloading idna-3.9-py3-none-any.whl.metadata (10 kB)
2025-06-06T02:18:42.0115882Z   Downloading idna-3.8-py3-none-any.whl.metadata (9.9 kB)
2025-06-06T02:18:42.0786699Z Collecting charset-normalizer<4,>=2 (from requests>=2.25.0->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:42.0827234Z   Downloading charset_normalizer-3.4.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (35 kB)
2025-06-06T02:18:42.6000299Z   Downloading charset_normalizer-3.4.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (34 kB)
2025-06-06T02:18:42.6516300Z Collecting proto-plus<2.0.0,>=1.22.3 (from google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:42.6558072Z   Downloading proto_plus-1.26.0-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:18:42.6618979Z INFO: pip is looking at multiple versions of proto-plus to determine which version is compatible with other requirements. This could take a while.
2025-06-06T02:18:42.6664593Z   Downloading proto_plus-1.25.0-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:18:42.6758032Z   Downloading proto_plus-1.24.0-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:18:42.6846797Z   Downloading proto_plus-1.23.0-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:18:42.7991054Z   Downloading proto_plus-1.22.3-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:18:42.8056829Z Collecting h2<5,>=3 (from httpx[http2]==0.28.1->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:42.8091974Z   Downloading h2-4.1.0-py3-none-any.whl.metadata (3.6 kB)
2025-06-06T02:18:48.7821751Z Collecting hyperframe<7,>=6.0 (from h2<5,>=3->httpx[http2]==0.28.1->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:48.7862648Z   Downloading hyperframe-6.0.1-py3-none-any.whl.metadata (2.7 kB)
2025-06-06T02:18:49.3122634Z   Downloading hyperframe-6.0.0-py3-none-any.whl.metadata (2.7 kB)
2025-06-06T02:18:49.3782152Z Collecting hpack<5,>=4.0 (from h2<5,>=3->httpx[http2]==0.28.1->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:49.3819202Z   Downloading hpack-4.0.0-py3-none-any.whl.metadata (2.5 kB)
2025-06-06T02:18:49.9629930Z Collecting h2<5,>=3 (from httpx[http2]==0.28.1->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:49.9712361Z   Downloading h2-4.0.0-py3-none-any.whl.metadata (3.5 kB)
2025-06-06T02:18:50.5334898Z   Downloading h2-3.2.0-py2.py3-none-any.whl.metadata (32 kB)
2025-06-06T02:18:50.6074891Z INFO: pip is still looking at multiple versions of proto-plus to determine which version is compatible with other requirements. This could take a while.
2025-06-06T02:18:50.6121308Z Collecting grpcio-status<2.0.0,>=1.33.2 (from google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:50.6175070Z   Downloading grpcio_status-1.71.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:18:50.6949135Z Collecting protobuf!=3.20.0,!=3.20.1,!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<7.0.0,>=3.19.5 (from google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:50.6989387Z   Downloading protobuf-5.29.5-cp38-abi3-manylinux2014_x86_64.whl.metadata (592 bytes)
2025-06-06T02:18:50.8999105Z   Downloading protobuf-5.29.4-cp38-abi3-manylinux2014_x86_64.whl.metadata (592 bytes)
2025-06-06T02:18:51.1361966Z Collecting backoff>=1.10.0 (from posthog>=3.7.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:51.1402330Z   Downloading backoff-2.2.1-py3-none-any.whl.metadata (14 kB)
2025-06-06T02:18:51.1642168Z Collecting wcwidth (from prompt-toolkit>=3.0.36->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:51.1676999Z   Downloading wcwidth-0.2.13-py2.py3-none-any.whl.metadata (14 kB)
2025-06-06T02:18:51.3614378Z Collecting cryptography>=3.4.0 (from pyjwt[crypto]>=2.5.0->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:51.3660273Z   Downloading cryptography-45.0.3-cp311-abi3-manylinux_2_34_x86_64.whl.metadata (5.7 kB)
2025-06-06T02:18:51.4720566Z Collecting cffi>=1.14 (from cryptography>=3.4.0->pyjwt[crypto]>=2.5.0->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:51.4759493Z   Downloading cffi-1.17.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (1.5 kB)
2025-06-06T02:18:51.4914661Z Collecting pycparser (from cffi>=1.14->cryptography>=3.4.0->pyjwt[crypto]>=2.5.0->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:51.4956098Z   Downloading pycparser-2.22-py3-none-any.whl.metadata (943 bytes)
2025-06-06T02:18:51.5179265Z Collecting markdown-it-py>=2.2.0 (from rich>=12.0.0->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:51.5220606Z   Downloading markdown_it_py-3.0.0-py3-none-any.whl.metadata (6.9 kB)
2025-06-06T02:18:51.5396109Z Collecting mdurl~=0.1 (from markdown-it-py>=2.2.0->rich>=12.0.0->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:51.5467758Z   Downloading mdurl-0.1.2-py3-none-any.whl.metadata (1.6 kB)
2025-06-06T02:18:51.5920719Z Collecting eval-type-backport<0.3.0,>=0.1.3 (from together>=1.3.13->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:51.5955603Z   Downloading eval_type_backport-0.2.2-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:18:51.6166834Z Collecting filelock<4.0.0,>=3.13.1 (from together>=1.3.13->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:51.6310125Z   Downloading filelock-3.18.0-py3-none-any.whl.metadata (2.9 kB)
2025-06-06T02:18:51.7235309Z Collecting pyarrow>=10.0.1 (from together>=1.3.13->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:51.7278826Z   Downloading pyarrow-20.0.0-cp312-cp312-manylinux_2_28_x86_64.whl.metadata (3.3 kB)
2025-06-06T02:18:51.7754284Z Collecting tabulate<0.10.0,>=0.9.0 (from together>=1.3.13->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:51.7792095Z   Downloading tabulate-0.9.0-py3-none-any.whl.metadata (34 kB)
2025-06-06T02:18:51.8001432Z Collecting typer>=0.7.0 (from modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:51.8038200Z   Downloading typer-0.15.4-py3-none-any.whl.metadata (15 kB)
2025-06-06T02:18:51.8459848Z Collecting click>=8.1.3 (from flask>=2.3.0->-r requirements-dev.txt (line 22))
2025-06-06T02:18:51.8500088Z   Downloading click-8.1.8-py3-none-any.whl.metadata (2.3 kB)
2025-06-06T02:18:51.8652802Z Collecting shellingham>=1.3.0 (from typer>=0.7.0->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:51.8723977Z   Downloading shellingham-1.5.4-py2.py3-none-any.whl.metadata (3.5 kB)
2025-06-06T02:18:51.9215154Z Collecting distlib<1,>=0.3.7 (from virtualenv>=20.10.0->pre-commit>=3.0.0->-r requirements-dev.txt (line 10))
2025-06-06T02:18:51.9269974Z   Downloading distlib-0.3.9-py2.py3-none-any.whl.metadata (5.2 kB)
2025-06-06T02:18:51.9506375Z Collecting platformdirs<5,>=3.9.1 (from virtualenv>=20.10.0->pre-commit>=3.0.0->-r requirements-dev.txt (line 10))
2025-06-06T02:18:51.9545113Z   Downloading platformdirs-4.3.8-py3-none-any.whl.metadata (12 kB)
2025-06-06T02:18:51.9952175Z Collecting wsproto (from httpx-ws->fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements-dev.txt (line 19))
2025-06-06T02:18:51.9985948Z   Downloading wsproto-1.2.0-py3-none-any.whl.metadata (5.6 kB)
2025-06-06T02:18:52.0246815Z Collecting types-MarkupSafe (from types-Jinja2->types-Flask->-r requirements-dev.txt (line 28))
2025-06-06T02:18:52.0293193Z   Downloading types_MarkupSafe-1.1.10-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:18:52.0506872Z Downloading pytest_mock-3.14.1-py3-none-any.whl (9.9 kB)
2025-06-06T02:18:52.0566682Z Downloading pre_commit-4.2.0-py2.py3-none-any.whl (220 kB)
2025-06-06T02:18:52.0628807Z Downloading hypothesis-6.135.1-py3-none-any.whl (515 kB)
2025-06-06T02:18:52.0706175Z Downloading sortedcontainers-2.4.0-py2.py3-none-any.whl (29 kB)
2025-06-06T02:18:52.0760628Z Downloading numpy-2.2.6-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (16.5 MB)
2025-06-06T02:18:52.1438087Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 16.5/16.5 MB 250.9 MB/s eta 0:00:00
2025-06-06T02:18:52.1476655Z Downloading pydantic-2.11.5-py3-none-any.whl (444 kB)
2025-06-06T02:18:52.1553048Z Downloading pydantic_core-2.33.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.0 MB)
2025-06-06T02:18:52.1667568Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 2.0/2.0 MB 196.0 MB/s eta 0:00:00
2025-06-06T02:18:52.1714793Z Downloading aiohttp-3.12.9-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.7 MB)
2025-06-06T02:18:52.1860765Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.7/1.7 MB 121.1 MB/s eta 0:00:00
2025-06-06T02:18:52.1898967Z Downloading multidict-6.4.4-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (223 kB)
2025-06-06T02:18:52.1969274Z Downloading yarl-1.20.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (349 kB)
2025-06-06T02:18:52.2036957Z Downloading PyJWT-2.10.1-py3-none-any.whl (22 kB)
2025-06-06T02:18:52.2224815Z Downloading pathspec-0.12.1-py3-none-any.whl (31 kB)
2025-06-06T02:18:52.2282399Z Downloading types_pyyaml-6.0.12.20250516-py3-none-any.whl (20 kB)
2025-06-06T02:18:52.2334881Z Downloading PyYAML-6.0.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (767 kB)
2025-06-06T02:18:52.2426451Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 767.5/767.5 kB 80.9 MB/s eta 0:00:00
2025-06-06T02:18:52.2468430Z Downloading modelcontextprotocol-0.1.0-py3-none-any.whl (22 kB)
2025-06-06T02:18:52.2521165Z Downloading flask-3.1.1-py3-none-any.whl (103 kB)
2025-06-06T02:18:52.2577487Z Downloading flask_sqlalchemy-3.1.1-py3-none-any.whl (25 kB)
2025-06-06T02:18:52.2634916Z Downloading Flask_Migrate-4.1.0-py3-none-any.whl (21 kB)
2025-06-06T02:18:52.2687490Z Downloading psycopg2_binary-2.9.10-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)
2025-06-06T02:18:52.2933711Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.0/3.0 MB 127.5 MB/s eta 0:00:00
2025-06-06T02:18:52.2982074Z Downloading sqlalchemy-2.0.41-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.3 MB)
2025-06-06T02:18:52.3186631Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.3/3.3 MB 186.7 MB/s eta 0:00:00
2025-06-06T02:18:52.3222649Z Downloading bcrypt-4.3.0-cp39-abi3-manylinux_2_34_x86_64.whl (284 kB)
2025-06-06T02:18:52.3299291Z Downloading types_Flask-1.1.6-py3-none-any.whl (13 kB)
2025-06-06T02:18:52.3361899Z Downloading types_Flask_SQLAlchemy-2.5.9.4-py3-none-any.whl (4.2 kB)
2025-06-06T02:18:52.3420249Z Downloading aiohappyeyeballs-2.6.1-py3-none-any.whl (15 kB)
2025-06-06T02:18:52.3474888Z Downloading aiosignal-1.3.2-py2.py3-none-any.whl (7.6 kB)
2025-06-06T02:18:52.3566338Z Downloading airtrain-0.1.68-py3-none-any.whl (146 kB)
2025-06-06T02:18:52.3646698Z Downloading alembic-1.16.1-py3-none-any.whl (242 kB)
2025-06-06T02:18:52.3709199Z Downloading annotated_types-0.7.0-py3-none-any.whl (13 kB)
2025-06-06T02:18:52.3763264Z Downloading anthropic-0.52.2-py3-none-any.whl (286 kB)
2025-06-06T02:18:52.3922563Z Downloading anyio-4.9.0-py3-none-any.whl (100 kB)
2025-06-06T02:18:52.4078432Z Downloading distro-1.9.0-py3-none-any.whl (20 kB)
2025-06-06T02:18:52.4253694Z Downloading httpx-0.28.1-py3-none-any.whl (73 kB)
2025-06-06T02:18:52.4326332Z Downloading httpcore-1.0.9-py3-none-any.whl (78 kB)
2025-06-06T02:18:52.4391977Z Downloading jiter-0.10.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (352 kB)
2025-06-06T02:18:52.4475997Z Downloading attrs-25.3.0-py3-none-any.whl (63 kB)
2025-06-06T02:18:52.4528706Z Downloading blinker-1.9.0-py3-none-any.whl (8.5 kB)
2025-06-06T02:18:52.4582653Z Downloading boto3-1.38.31-py3-none-any.whl (139 kB)
2025-06-06T02:18:52.4641260Z Downloading botocore-1.38.31-py3-none-any.whl (13.6 MB)
2025-06-06T02:18:52.5221277Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 13.6/13.6 MB 241.5 MB/s eta 0:00:00
2025-06-06T02:18:52.5274628Z Downloading jmespath-1.0.1-py3-none-any.whl (20 kB)
2025-06-06T02:18:52.5327244Z Downloading python_dateutil-2.9.0.post0-py2.py3-none-any.whl (229 kB)
2025-06-06T02:18:52.5388624Z Downloading s3transfer-0.13.0-py3-none-any.whl (85 kB)
2025-06-06T02:18:52.5445596Z Downloading urllib3-2.4.0-py3-none-any.whl (128 kB)
2025-06-06T02:18:52.5506061Z Downloading cerebras_cloud_sdk-1.35.0-py3-none-any.whl (89 kB)
2025-06-06T02:18:52.5561821Z Downloading cfgv-3.4.0-py2.py3-none-any.whl (7.2 kB)
2025-06-06T02:18:52.5612566Z Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)
2025-06-06T02:18:52.5683007Z Downloading firebase_admin-6.9.0-py3-none-any.whl (139 kB)
2025-06-06T02:18:52.5743388Z Downloading google_api_core-2.25.0-py3-none-any.whl (160 kB)
2025-06-06T02:18:52.5818208Z Downloading google_auth-2.40.3-py2.py3-none-any.whl (216 kB)
2025-06-06T02:18:52.5935313Z Downloading cachetools-5.5.2-py3-none-any.whl (10 kB)
2025-06-06T02:18:52.5988062Z Downloading googleapis_common_protos-1.70.0-py3-none-any.whl (294 kB)
2025-06-06T02:18:52.6054929Z Downloading grpcio-1.72.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (5.8 MB)
2025-06-06T02:18:52.6470465Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 5.8/5.8 MB 144.3 MB/s eta 0:00:00
2025-06-06T02:18:52.6508095Z Downloading grpcio_status-1.71.0-py3-none-any.whl (14 kB)
2025-06-06T02:18:52.6558615Z Downloading proto_plus-1.26.1-py3-none-any.whl (50 kB)
2025-06-06T02:18:52.6609173Z Downloading h2-4.2.0-py3-none-any.whl (60 kB)
2025-06-06T02:18:52.6664570Z Downloading hpack-4.1.0-py3-none-any.whl (34 kB)
2025-06-06T02:18:52.6716960Z Downloading hyperframe-6.1.0-py3-none-any.whl (13 kB)
2025-06-06T02:18:52.6775682Z Downloading requests-2.32.3-py3-none-any.whl (64 kB)
2025-06-06T02:18:52.6828114Z Downloading charset_normalizer-3.4.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (148 kB)
2025-06-06T02:18:52.6885862Z Downloading idna-3.10-py3-none-any.whl (70 kB)
2025-06-06T02:18:52.6938424Z Downloading rsa-4.9.1-py3-none-any.whl (34 kB)
2025-06-06T02:18:52.6989544Z Downloading cachecontrol-0.14.3-py3-none-any.whl (21 kB)
2025-06-06T02:18:52.7041086Z Downloading msgpack-1.1.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (401 kB)
2025-06-06T02:18:52.7107983Z Downloading certifi-2025.4.26-py3-none-any.whl (159 kB)
2025-06-06T02:18:52.7175865Z Downloading fireworks_ai-0.17.16-py3-none-any.whl (569 kB)
2025-06-06T02:18:52.7235746Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 569.2/569.2 kB 96.2 MB/s eta 0:00:00
2025-06-06T02:18:52.7270836Z Downloading protobuf-5.29.4-cp38-abi3-manylinux2014_x86_64.whl (319 kB)
2025-06-06T02:18:52.7345476Z Downloading asyncstdlib_fw-3.13.2-py3-none-any.whl (44 kB)
2025-06-06T02:18:52.7414350Z Downloading betterproto_fw-2.0.3-py3-none-any.whl (105 kB)
2025-06-06T02:18:52.7484476Z Downloading grpclib-0.4.8-py3-none-any.whl (76 kB)
2025-06-06T02:18:52.7563761Z Downloading ruff-0.9.10-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.3 MB)
2025-06-06T02:18:52.8374272Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 11.3/11.3 MB 140.9 MB/s eta 0:00:00
2025-06-06T02:18:52.8428260Z Downloading frozenlist-1.6.2-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (240 kB)
2025-06-06T02:18:52.8512986Z Downloading google_auth_httplib2-0.2.0-py2.py3-none-any.whl (9.3 kB)
2025-06-06T02:18:52.8573067Z Downloading httplib2-0.22.0-py3-none-any.whl (96 kB)
2025-06-06T02:18:52.8628504Z Downloading pyparsing-3.2.3-py3-none-any.whl (111 kB)
2025-06-06T02:18:52.8693288Z Downloading uritemplate-4.2.0-py3-none-any.whl (11 kB)
2025-06-06T02:18:52.8744094Z Downloading google_cloud_firestore-2.21.0-py3-none-any.whl (368 kB)
2025-06-06T02:18:52.8827983Z Downloading google_cloud_core-2.4.3-py2.py3-none-any.whl (29 kB)
2025-06-06T02:18:52.8889087Z Downloading google_cloud_storage-3.1.0-py2.py3-none-any.whl (174 kB)
2025-06-06T02:18:52.9007050Z Downloading google_crc32c-1.7.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (32 kB)
2025-06-06T02:18:52.9062243Z Downloading google_genai-1.19.0-py3-none-any.whl (200 kB)
2025-06-06T02:18:52.9132260Z Downloading websockets-15.0.1-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (182 kB)
2025-06-06T02:18:52.9254685Z Downloading google_generativeai-0.8.5-py3-none-any.whl (155 kB)
2025-06-06T02:18:52.9462430Z Downloading google_ai_generativelanguage-0.6.15-py3-none-any.whl (1.3 MB)
2025-06-06T02:18:52.9589811Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.3/1.3 MB 106.1 MB/s eta 0:00:00
2025-06-06T02:18:52.9627745Z Downloading google_resumable_media-2.7.2-py2.py3-none-any.whl (81 kB)
2025-06-06T02:18:52.9684180Z Downloading greenlet-3.2.3-cp312-cp312-manylinux_2_24_x86_64.manylinux_2_28_x86_64.whl (605 kB)
2025-06-06T02:18:52.9761655Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 605.5/605.5 kB 77.7 MB/s eta 0:00:00
2025-06-06T02:18:52.9816202Z Downloading groq-0.26.0-py3-none-any.whl (129 kB)
2025-06-06T02:18:52.9871606Z Downloading h11-0.16.0-py3-none-any.whl (37 kB)
2025-06-06T02:18:52.9927193Z Downloading identify-2.6.12-py2.py3-none-any.whl (99 kB)
2025-06-06T02:18:52.9982465Z Downloading itsdangerous-2.2.0-py3-none-any.whl (16 kB)
2025-06-06T02:18:53.0032115Z Downloading jinja2-3.1.6-py3-none-any.whl (134 kB)
2025-06-06T02:18:53.0087764Z Downloading loguru-0.7.3-py3-none-any.whl (61 kB)
2025-06-06T02:18:53.0139402Z Downloading MarkupSafe-3.0.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (23 kB)
2025-06-06T02:18:53.0210445Z Downloading mmh3-5.1.0-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (101 kB)
2025-06-06T02:18:53.0261548Z Downloading openai-1.84.0-py3-none-any.whl (725 kB)
2025-06-06T02:18:53.0326082Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 725.5/725.5 kB 122.6 MB/s eta 0:00:00
2025-06-06T02:18:53.0365621Z Downloading posthog-4.2.0-py2.py3-none-any.whl (96 kB)
2025-06-06T02:18:53.0517548Z Downloading backoff-2.2.1-py3-none-any.whl (15 kB)
2025-06-06T02:18:53.0572072Z Downloading prompt_toolkit-3.0.51-py3-none-any.whl (387 kB)
2025-06-06T02:18:53.0648697Z Downloading propcache-0.3.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (245 kB)
2025-06-06T02:18:53.0715838Z Downloading pyasn1-0.6.1-py3-none-any.whl (83 kB)
2025-06-06T02:18:53.0770874Z Downloading pyasn1_modules-0.4.2-py3-none-any.whl (181 kB)
2025-06-06T02:18:53.0833087Z Downloading cryptography-45.0.3-cp311-abi3-manylinux_2_34_x86_64.whl (4.5 MB)
2025-06-06T02:18:53.1082602Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 4.5/4.5 MB 188.6 MB/s eta 0:00:00
2025-06-06T02:18:53.1121080Z Downloading cffi-1.17.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (479 kB)
2025-06-06T02:18:53.1189719Z Downloading python_dotenv-1.1.0-py3-none-any.whl (20 kB)
2025-06-06T02:18:53.1244756Z Downloading rich-14.0.0-py3-none-any.whl (243 kB)
2025-06-06T02:18:53.1308592Z Downloading markdown_it_py-3.0.0-py3-none-any.whl (87 kB)
2025-06-06T02:18:53.1363591Z Downloading mdurl-0.1.2-py3-none-any.whl (10.0 kB)
2025-06-06T02:18:53.1416238Z Downloading six-1.17.0-py2.py3-none-any.whl (11 kB)
2025-06-06T02:18:53.1475374Z Downloading sniffio-1.3.1-py3-none-any.whl (10 kB)
2025-06-06T02:18:53.1675796Z Downloading together-1.5.8-py3-none-any.whl (88 kB)
2025-06-06T02:18:53.1732225Z Downloading eval_type_backport-0.2.2-py3-none-any.whl (5.8 kB)
2025-06-06T02:18:53.1783387Z Downloading filelock-3.18.0-py3-none-any.whl (16 kB)
2025-06-06T02:18:53.1835431Z Downloading pillow-11.2.1-cp312-cp312-manylinux_2_28_x86_64.whl (4.6 MB)
2025-06-06T02:18:53.2064547Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 4.6/4.6 MB 219.7 MB/s eta 0:00:00
2025-06-06T02:18:53.2100314Z Downloading tabulate-0.9.0-py3-none-any.whl (35 kB)
2025-06-06T02:18:53.2169291Z Downloading tqdm-4.67.1-py3-none-any.whl (78 kB)
2025-06-06T02:18:53.2229126Z Downloading typer-0.15.4-py3-none-any.whl (45 kB)
2025-06-06T02:18:53.2303513Z Downloading click-8.1.8-py3-none-any.whl (98 kB)
2025-06-06T02:18:53.2376828Z Downloading pyarrow-20.0.0-cp312-cp312-manylinux_2_28_x86_64.whl (42.3 MB)
2025-06-06T02:18:53.5226794Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 42.3/42.3 MB 149.7 MB/s eta 0:00:00
2025-06-06T02:18:53.5288678Z Downloading shellingham-1.5.4-py2.py3-none-any.whl (9.8 kB)
2025-06-06T02:18:53.5386600Z Downloading typing_inspection-0.4.1-py3-none-any.whl (14 kB)
2025-06-06T02:18:53.5452625Z Downloading virtualenv-20.31.2-py3-none-any.whl (6.1 MB)
2025-06-06T02:18:53.5749127Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 6.1/6.1 MB 217.1 MB/s eta 0:00:00
2025-06-06T02:18:53.5785766Z Downloading distlib-0.3.9-py2.py3-none-any.whl (468 kB)
2025-06-06T02:18:53.5867791Z Downloading platformdirs-4.3.8-py3-none-any.whl (18 kB)
2025-06-06T02:18:53.5920432Z Downloading werkzeug-3.1.3-py3-none-any.whl (224 kB)
2025-06-06T02:18:53.5985776Z Downloading httpx_sse-0.4.0-py3-none-any.whl (7.8 kB)
2025-06-06T02:18:53.6054683Z Downloading httpx_ws-0.7.2-py3-none-any.whl (14 kB)
2025-06-06T02:18:53.6103427Z Downloading mako-1.3.10-py3-none-any.whl (78 kB)
2025-06-06T02:18:53.6157263Z Downloading pycparser-2.22-py3-none-any.whl (117 kB)
2025-06-06T02:18:53.6222678Z Downloading types_click-7.1.8-py3-none-any.whl (12 kB)
2025-06-06T02:18:53.6283196Z Downloading types_Jinja2-2.11.9-py3-none-any.whl (18 kB)
2025-06-06T02:18:53.6487074Z Downloading types_MarkupSafe-1.1.10-py3-none-any.whl (4.0 kB)
2025-06-06T02:18:53.6549755Z Downloading types_SQLAlchemy-1.4.53.38-py3-none-any.whl (187 kB)
2025-06-06T02:18:53.6624850Z Downloading types_Werkzeug-1.0.9-py3-none-any.whl (36 kB)
2025-06-06T02:18:53.6678775Z Downloading wcwidth-0.2.13-py2.py3-none-any.whl (34 kB)
2025-06-06T02:18:53.6730679Z Downloading wsproto-1.2.0-py3-none-any.whl (24 kB)
2025-06-06T02:18:53.8944044Z Building wheels for collected packages: google-api-python-client
2025-06-06T02:18:53.8954248Z   Building wheel for google-api-python-client (pyproject.toml): started
2025-06-06T02:18:56.5392270Z   Building wheel for google-api-python-client (pyproject.toml): finished with status 'done'
2025-06-06T02:18:56.5496452Z   Created wheel for google-api-python-client: filename=google_api_python_client-2.171.0-py3-none-any.whl size=13547393 sha256=39c3ec7c2f5916a7e170708d8758b509c7432a428b804e72ef8cdae3303b4ef9
2025-06-06T02:18:56.5499451Z   Stored in directory: /home/runner/.cache/pip/wheels/45/3b/16/c59262e73ae1da4bb697bdb8eff129b8633d4d36fa97bec24f
2025-06-06T02:18:56.5549313Z Successfully built google-api-python-client
2025-06-06T02:18:56.8010802Z Installing collected packages: wcwidth, types-Werkzeug, types-SQLAlchemy, types-MarkupSafe, types-click, sortedcontainers, distlib, websockets, urllib3, uritemplate, typing-inspection, types-PyYAML, types-Jinja2, types-flask-sqlalchemy, tqdm, tabulate, sniffio, six, shellingham, ruff, pyyaml, python-dotenv, pyparsing, pyjwt, pydantic-core, pycparser, pyasn1, pyarrow, psycopg2-binary, protobuf, propcache, prompt-toolkit, platformdirs, Pillow, pathspec, numpy, multidict, msgpack, mmh3, mdurl, markupsafe, loguru, jmespath, jiter, itsdangerous, idna, identify, hyperframe, httpx-sse, hpack, h11, grpcio, greenlet, google-crc32c, frozenlist, filelock, eval-type-backport, distro, colorama, click, charset-normalizer, cfgv, certifi, cachetools, blinker, bcrypt, backoff, attrs, asyncstdlib-fw, annotated-types, aiohappyeyeballs, yarl, wsproto, werkzeug, virtualenv, types-Flask, sqlalchemy, rsa, requests, python-dateutil, pytest-mock, pydantic, pyasn1-modules, proto-plus, markdown-it-py, Mako, jinja2, hypothesis, httplib2, httpcore, h2, googleapis-common-protos, google-resumable-media, cffi, anyio, aiosignal, rich, pre-commit, posthog, httpx, grpclib, grpcio-status, google-auth, flask, cryptography, cachecontrol, botocore, alembic, aiohttp, typer, s3transfer, openai, httpx-ws, groq, google-genai, google-auth-httplib2, google-api-core, flask-sqlalchemy, cerebras-cloud-sdk, betterproto-fw, anthropic, together, google-cloud-core, google-api-python-client, flask-migrate, boto3, google-cloud-storage, google-cloud-firestore, google-ai-generativelanguage, fireworks-ai, google-generativeai, firebase-admin, airtrain, modelcontextprotocol
2025-06-06T02:18:57.3943728Z   Attempting uninstall: ruff
2025-06-06T02:18:57.3976011Z     Found existing installation: ruff 0.11.13
2025-06-06T02:18:57.3999615Z     Uninstalling ruff-0.11.13:
2025-06-06T02:18:57.4010406Z       Successfully uninstalled ruff-0.11.13
2025-06-06T02:19:10.8956014Z 
2025-06-06T02:19:10.9093518Z Successfully installed Mako-1.3.10 Pillow-11.2.1 aiohappyeyeballs-2.6.1 aiohttp-3.12.9 aiosignal-1.3.2 airtrain-0.1.68 alembic-1.16.1 annotated-types-0.7.0 anthropic-0.52.2 anyio-4.9.0 asyncstdlib-fw-3.13.2 attrs-25.3.0 backoff-2.2.1 bcrypt-4.3.0 betterproto-fw-2.0.3 blinker-1.9.0 boto3-1.38.31 botocore-1.38.31 cachecontrol-0.14.3 cachetools-5.5.2 cerebras-cloud-sdk-1.35.0 certifi-2025.4.26 cffi-1.17.1 cfgv-3.4.0 charset-normalizer-3.4.2 click-8.1.8 colorama-0.4.6 cryptography-45.0.3 distlib-0.3.9 distro-1.9.0 eval-type-backport-0.2.2 filelock-3.18.0 firebase-admin-6.9.0 fireworks-ai-0.17.16 flask-3.1.1 flask-migrate-4.1.0 flask-sqlalchemy-3.1.1 frozenlist-1.6.2 google-ai-generativelanguage-0.6.15 google-api-core-2.25.0 google-api-python-client-2.171.0 google-auth-2.40.3 google-auth-httplib2-0.2.0 google-cloud-core-2.4.3 google-cloud-firestore-2.21.0 google-cloud-storage-3.1.0 google-crc32c-1.7.1 google-genai-1.19.0 google-generativeai-0.8.5 google-resumable-media-2.7.2 googleapis-common-protos-1.70.0 greenlet-3.2.3 groq-0.26.0 grpcio-1.72.1 grpcio-status-1.71.0 grpclib-0.4.8 h11-0.16.0 h2-4.2.0 hpack-4.1.0 httpcore-1.0.9 httplib2-0.22.0 httpx-0.28.1 httpx-sse-0.4.0 httpx-ws-0.7.2 hyperframe-6.1.0 hypothesis-6.135.1 identify-2.6.12 idna-3.10 itsdangerous-2.2.0 jinja2-3.1.6 jiter-0.10.0 jmespath-1.0.1 loguru-0.7.3 markdown-it-py-3.0.0 markupsafe-3.0.2 mdurl-0.1.2 mmh3-5.1.0 modelcontextprotocol-0.1.0 msgpack-1.1.0 multidict-6.4.4 numpy-2.2.6 openai-1.84.0 pathspec-0.12.1 platformdirs-4.3.8 posthog-4.2.0 pre-commit-4.2.0 prompt-toolkit-3.0.51 propcache-0.3.1 proto-plus-1.26.1 protobuf-5.29.4 psycopg2-binary-2.9.10 pyarrow-20.0.0 pyasn1-0.6.1 pyasn1-modules-0.4.2 pycparser-2.22 pydantic-2.11.5 pydantic-core-2.33.2 pyjwt-2.10.1 pyparsing-3.2.3 pytest-mock-3.14.1 python-dateutil-2.9.0.post0 python-dotenv-1.1.0 pyyaml-6.0.2 requests-2.32.3 rich-14.0.0 rsa-4.9.1 ruff-0.9.10 s3transfer-0.13.0 shellingham-1.5.4 six-1.17.0 sniffio-1.3.1 sortedcontainers-2.4.0 sqlalchemy-2.0.41 tabulate-0.9.0 together-1.5.8 tqdm-4.67.1 typer-0.15.4 types-Flask-1.1.6 types-Jinja2-2.11.9 types-MarkupSafe-1.1.10 types-PyYAML-6.0.12.20250516 types-SQLAlchemy-1.4.53.38 types-Werkzeug-1.0.9 types-click-7.1.8 types-flask-sqlalchemy-2.5.9.4 typing-inspection-0.4.1 uritemplate-4.2.0 urllib3-2.4.0 virtualenv-20.31.2 wcwidth-0.2.13 websockets-15.0.1 werkzeug-3.1.3 wsproto-1.2.0 yarl-1.20.0
2025-06-06T02:19:13.0674391Z Collecting fastapi>=0.95.0 (from -r requirements.txt (line 2))
2025-06-06T02:19:13.0999046Z   Downloading fastapi-0.115.12-py3-none-any.whl.metadata (27 kB)
2025-06-06T02:19:13.1364316Z Collecting uvicorn>=0.22.0 (from -r requirements.txt (line 3))
2025-06-06T02:19:13.1403277Z   Downloading uvicorn-0.34.3-py3-none-any.whl.metadata (6.5 kB)
2025-06-06T02:19:13.1454213Z Requirement already satisfied: pydantic>=2.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 4)) (2.11.5)
2025-06-06T02:19:13.1691796Z Collecting redis>=4.5.0 (from -r requirements.txt (line 5))
2025-06-06T02:19:13.1728470Z   Downloading redis-6.2.0-py3-none-any.whl.metadata (10 kB)
2025-06-06T02:19:13.1866058Z Collecting python-multipart>=0.0.9 (from -r requirements.txt (line 6))
2025-06-06T02:19:13.1922572Z   Downloading python_multipart-0.0.20-py3-none-any.whl.metadata (1.8 kB)
2025-06-06T02:19:13.1955233Z Requirement already satisfied: httpx>=0.24.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 7)) (0.28.1)
2025-06-06T02:19:13.1959891Z Requirement already satisfied: flask>=2.0.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 8)) (3.1.1)
2025-06-06T02:19:13.2381575Z Collecting celery>=5.2.0 (from -r requirements.txt (line 9))
2025-06-06T02:19:13.2424960Z   Downloading celery-5.5.3-py3-none-any.whl.metadata (22 kB)
2025-06-06T02:19:13.2836369Z Collecting flask-socketio>=5.1.0 (from -r requirements.txt (line 10))
2025-06-06T02:19:13.2882047Z   Downloading Flask_SocketIO-5.5.1-py3-none-any.whl.metadata (2.6 kB)
2025-06-06T02:19:13.2919201Z Requirement already satisfied: pyjwt>=2.6.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 11)) (2.10.1)
2025-06-06T02:19:13.2923680Z Requirement already satisfied: bcrypt>=4.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 12)) (4.3.0)
2025-06-06T02:19:13.3002138Z Collecting pyperclip>=1.8.2 (from -r requirements.txt (line 13))
2025-06-06T02:19:13.3037293Z   Downloading pyperclip-1.9.0.tar.gz (20 kB)
2025-06-06T02:19:13.3133365Z   Installing build dependencies: started
2025-06-06T02:19:14.2027713Z   Installing build dependencies: finished with status 'done'
2025-06-06T02:19:14.2034620Z   Getting requirements to build wheel: started
2025-06-06T02:19:14.5360935Z   Getting requirements to build wheel: finished with status 'done'
2025-06-06T02:19:14.5371013Z   Preparing metadata (pyproject.toml): started
2025-06-06T02:19:14.7252300Z   Preparing metadata (pyproject.toml): finished with status 'done'
2025-06-06T02:19:14.7271499Z Requirement already satisfied: cryptography>=41.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 14)) (45.0.3)
2025-06-06T02:19:14.7533989Z Collecting mem0ai>=0.1.100 (from -r requirements.txt (line 18))
2025-06-06T02:19:14.7575746Z   Downloading mem0ai-0.1.104-py3-none-any.whl.metadata (7.4 kB)
2025-06-06T02:19:14.7846509Z Collecting qdrant-client>=1.9.1 (from -r requirements.txt (line 19))
2025-06-06T02:19:14.7899694Z   Downloading qdrant_client-1.14.2-py3-none-any.whl.metadata (10 kB)
2025-06-06T02:19:14.7956864Z Requirement already satisfied: openai>=1.33.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 20)) (1.84.0)
2025-06-06T02:19:14.8277631Z Collecting pytz>=2024.1 (from -r requirements.txt (line 21))
2025-06-06T02:19:14.8315599Z   Downloading pytz-2025.2-py2.py3-none-any.whl.metadata (22 kB)
2025-06-06T02:19:14.8363496Z Requirement already satisfied: modelcontextprotocol>=0.1.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 24)) (0.1.0)
2025-06-06T02:19:14.8369205Z Requirement already satisfied: grpcio>=1.54.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 27)) (1.72.1)
2025-06-06T02:19:14.8679761Z Collecting grpcio-reflection>=1.54.0 (from -r requirements.txt (line 28))
2025-06-06T02:19:14.8725726Z   Downloading grpcio_reflection-1.72.1-py3-none-any.whl.metadata (1.0 kB)
2025-06-06T02:19:14.9105355Z Collecting grpcio-health-checking>=1.54.0 (from -r requirements.txt (line 29))
2025-06-06T02:19:14.9142662Z   Downloading grpcio_health_checking-1.72.1-py3-none-any.whl.metadata (1.0 kB)
2025-06-06T02:19:15.0728316Z Collecting protobuf<5.0,>=3.19 (from -r requirements.txt (line 30))
2025-06-06T02:19:15.0764614Z   Downloading protobuf-4.25.8-cp37-abi3-manylinux2014_x86_64.whl.metadata (541 bytes)
2025-06-06T02:19:15.1185924Z Collecting torch>=1.10.0 (from -r requirements.txt (line 33))
2025-06-06T02:19:15.1224537Z   Downloading torch-2.7.1-cp312-cp312-manylinux_2_28_x86_64.whl.metadata (29 kB)
2025-06-06T02:19:15.1673640Z Collecting transformers>=4.20.0 (from -r requirements.txt (line 34))
2025-06-06T02:19:15.1712564Z   Downloading transformers-4.52.4-py3-none-any.whl.metadata (38 kB)
2025-06-06T02:19:15.2762215Z Collecting sentence-transformers>=2.2.0 (from -r requirements.txt (line 35))
2025-06-06T02:19:15.2795247Z   Downloading sentence_transformers-4.1.0-py3-none-any.whl.metadata (13 kB)
2025-06-06T02:19:15.2856565Z Requirement already satisfied: numpy>=1.24.3 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 36)) (2.2.6)
2025-06-06T02:19:15.3617351Z Collecting scikit-learn>=1.0.0 (from -r requirements.txt (line 37))
2025-06-06T02:19:15.3655705Z   Downloading scikit_learn-1.7.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (17 kB)
2025-06-06T02:19:15.3791290Z Requirement already satisfied: requests>=2.25.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 40)) (2.32.3)
2025-06-06T02:19:15.4419875Z Collecting psutil>=5.9.5 (from -r requirements.txt (line 41))
2025-06-06T02:19:15.4461158Z   Downloading psutil-7.0.0-cp36-abi3-manylinux_2_12_x86_64.manylinux2010_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (22 kB)
2025-06-06T02:19:15.4529418Z Requirement already satisfied: tqdm>=4.65.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 42)) (4.67.1)
2025-06-06T02:19:15.4534339Z Requirement already satisfied: python-dateutil>=2.8.2 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 43)) (2.9.0.post0)
2025-06-06T02:19:15.4538223Z Requirement already satisfied: jinja2>=3.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 44)) (3.1.6)
2025-06-06T02:19:15.4651713Z Collecting prometheus_client>=0.16.0 (from -r requirements.txt (line 45))
2025-06-06T02:19:15.4695633Z   Downloading prometheus_client-0.22.1-py3-none-any.whl.metadata (1.9 kB)
2025-06-06T02:19:15.6166860Z Collecting matplotlib>=3.5.0 (from -r requirements.txt (line 48))
2025-06-06T02:19:15.6203677Z   Downloading matplotlib-3.10.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (11 kB)
2025-06-06T02:19:15.7275928Z Collecting pandas>=1.5.0 (from -r requirements.txt (line 49))
2025-06-06T02:19:15.7314385Z   Downloading pandas-2.3.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (91 kB)
2025-06-06T02:19:15.8056892Z Collecting plotly>=5.13.0 (from -r requirements.txt (line 50))
2025-06-06T02:19:15.8113178Z   Downloading plotly-6.1.2-py3-none-any.whl.metadata (6.9 kB)
2025-06-06T02:19:15.8159579Z Requirement already satisfied: psycopg2-binary>=2.9.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 53)) (2.9.10)
2025-06-06T02:19:15.8165449Z Requirement already satisfied: SQLAlchemy>=2.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 54)) (2.0.41)
2025-06-06T02:19:15.8170768Z Requirement already satisfied: Flask-SQLAlchemy>=3.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 55)) (3.1.1)
2025-06-06T02:19:15.8175870Z Requirement already satisfied: Flask-Migrate>=4.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 56)) (4.1.0)
2025-06-06T02:19:15.8181148Z Requirement already satisfied: pytest>=7.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 59)) (8.4.0)
2025-06-06T02:19:15.8186216Z Requirement already satisfied: pytest-cov>=4.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 60)) (6.1.1)
2025-06-06T02:19:15.8191504Z Requirement already satisfied: pytest-mock>=3.10.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 61)) (3.14.1)
2025-06-06T02:19:15.8196574Z Requirement already satisfied: pytest-asyncio>=0.21.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 62)) (1.0.0)
2025-06-06T02:19:15.8201738Z Requirement already satisfied: aiohttp>=3.8.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from -r requirements.txt (line 63)) (3.12.9)
2025-06-06T02:19:15.8587325Z Collecting aio_pika>=9.0.0 (from -r requirements.txt (line 64))
2025-06-06T02:19:15.8633480Z   Downloading aio_pika-9.5.5-py3-none-any.whl.metadata (16 kB)
2025-06-06T02:19:15.9069337Z Collecting starlette<0.47.0,>=0.40.0 (from fastapi>=0.95.0->-r requirements.txt (line 2))
2025-06-06T02:19:15.9104968Z   Downloading starlette-0.46.2-py3-none-any.whl.metadata (6.2 kB)
2025-06-06T02:19:15.9153970Z Requirement already satisfied: typing-extensions>=4.8.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from fastapi>=0.95.0->-r requirements.txt (line 2)) (4.14.0)
2025-06-06T02:19:15.9174370Z Requirement already satisfied: annotated-types>=0.6.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from pydantic>=2.0.0->-r requirements.txt (line 4)) (0.7.0)
2025-06-06T02:19:15.9180863Z Requirement already satisfied: pydantic-core==2.33.2 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from pydantic>=2.0.0->-r requirements.txt (line 4)) (2.33.2)
2025-06-06T02:19:15.9189938Z Requirement already satisfied: typing-inspection>=0.4.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from pydantic>=2.0.0->-r requirements.txt (line 4)) (0.4.1)
2025-06-06T02:19:15.9219530Z Requirement already satisfied: anyio<5,>=3.6.2 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from starlette<0.47.0,>=0.40.0->fastapi>=0.95.0->-r requirements.txt (line 2)) (4.9.0)
2025-06-06T02:19:15.9236658Z Requirement already satisfied: idna>=2.8 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from anyio<5,>=3.6.2->starlette<0.47.0,>=0.40.0->fastapi>=0.95.0->-r requirements.txt (line 2)) (3.10)
2025-06-06T02:19:15.9243374Z Requirement already satisfied: sniffio>=1.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from anyio<5,>=3.6.2->starlette<0.47.0,>=0.40.0->fastapi>=0.95.0->-r requirements.txt (line 2)) (1.3.1)
2025-06-06T02:19:15.9283532Z Requirement already satisfied: click>=7.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from uvicorn>=0.22.0->-r requirements.txt (line 3)) (8.1.8)
2025-06-06T02:19:15.9288891Z Requirement already satisfied: h11>=0.8 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from uvicorn>=0.22.0->-r requirements.txt (line 3)) (0.16.0)
2025-06-06T02:19:15.9320429Z Requirement already satisfied: certifi in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from httpx>=0.24.0->-r requirements.txt (line 7)) (2025.4.26)
2025-06-06T02:19:15.9326779Z Requirement already satisfied: httpcore==1.* in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from httpx>=0.24.0->-r requirements.txt (line 7)) (1.0.9)
2025-06-06T02:19:15.9369243Z Requirement already satisfied: blinker>=1.9.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from flask>=2.0.1->-r requirements.txt (line 8)) (1.9.0)
2025-06-06T02:19:15.9379202Z Requirement already satisfied: itsdangerous>=2.2.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from flask>=2.0.1->-r requirements.txt (line 8)) (2.2.0)
2025-06-06T02:19:15.9387357Z Requirement already satisfied: markupsafe>=2.1.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from flask>=2.0.1->-r requirements.txt (line 8)) (3.0.2)
2025-06-06T02:19:15.9393846Z Requirement already satisfied: werkzeug>=3.1.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from flask>=2.0.1->-r requirements.txt (line 8)) (3.1.3)
2025-06-06T02:19:15.9556983Z Collecting billiard<5.0,>=4.2.1 (from celery>=5.2.0->-r requirements.txt (line 9))
2025-06-06T02:19:15.9594305Z   Downloading billiard-4.2.1-py3-none-any.whl.metadata (4.4 kB)
2025-06-06T02:19:15.9868740Z Collecting kombu<5.6,>=5.5.2 (from celery>=5.2.0->-r requirements.txt (line 9))
2025-06-06T02:19:15.9907299Z   Downloading kombu-5.5.4-py3-none-any.whl.metadata (3.5 kB)
2025-06-06T02:19:16.0078820Z Collecting vine<6.0,>=5.1.0 (from celery>=5.2.0->-r requirements.txt (line 9))
2025-06-06T02:19:16.0112099Z   Downloading vine-5.1.0-py3-none-any.whl.metadata (2.7 kB)
2025-06-06T02:19:16.0208244Z Collecting click-didyoumean>=0.3.0 (from celery>=5.2.0->-r requirements.txt (line 9))
2025-06-06T02:19:16.0242658Z   Downloading click_didyoumean-0.3.1-py3-none-any.whl.metadata (3.9 kB)
2025-06-06T02:19:16.0341216Z Collecting click-repl>=0.2.0 (from celery>=5.2.0->-r requirements.txt (line 9))
2025-06-06T02:19:16.0382214Z   Downloading click_repl-0.3.0-py3-none-any.whl.metadata (3.6 kB)
2025-06-06T02:19:16.0477702Z Collecting click-plugins>=1.1.1 (from celery>=5.2.0->-r requirements.txt (line 9))
2025-06-06T02:19:16.0511527Z   Downloading click_plugins-1.1.1-py2.py3-none-any.whl.metadata (6.4 kB)
2025-06-06T02:19:16.0731653Z Collecting amqp<6.0.0,>=5.1.1 (from kombu<5.6,>=5.5.2->celery>=5.2.0->-r requirements.txt (line 9))
2025-06-06T02:19:16.0765910Z   Downloading amqp-5.3.1-py3-none-any.whl.metadata (8.9 kB)
2025-06-06T02:19:16.0912445Z Collecting tzdata>=2025.2 (from kombu<5.6,>=5.5.2->celery>=5.2.0->-r requirements.txt (line 9))
2025-06-06T02:19:16.0946173Z   Downloading tzdata-2025.2-py2.py3-none-any.whl.metadata (1.4 kB)
2025-06-06T02:19:16.0977084Z Requirement already satisfied: packaging in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from kombu<5.6,>=5.5.2->celery>=5.2.0->-r requirements.txt (line 9)) (25.0)
2025-06-06T02:19:16.1188891Z Collecting python-socketio>=5.12.0 (from flask-socketio>=5.1.0->-r requirements.txt (line 10))
2025-06-06T02:19:16.1224096Z   Downloading python_socketio-5.13.0-py3-none-any.whl.metadata (3.2 kB)
2025-06-06T02:19:16.1321227Z Requirement already satisfied: cffi>=1.14 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from cryptography>=41.0.0->-r requirements.txt (line 14)) (1.17.1)
2025-06-06T02:19:16.1366566Z Requirement already satisfied: posthog>=3.5.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from mem0ai>=0.1.100->-r requirements.txt (line 18)) (4.2.0)
2025-06-06T02:19:16.1530330Z Collecting portalocker<3.0.0,>=2.7.0 (from qdrant-client>=1.9.1->-r requirements.txt (line 19))
2025-06-06T02:19:16.1563868Z   Downloading portalocker-2.10.1-py3-none-any.whl.metadata (8.5 kB)
2025-06-06T02:19:16.1843824Z Requirement already satisfied: urllib3<3,>=1.26.14 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from qdrant-client>=1.9.1->-r requirements.txt (line 19)) (2.4.0)
2025-06-06T02:19:16.1906357Z Requirement already satisfied: distro<2,>=1.7.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from openai>=1.33.0->-r requirements.txt (line 20)) (1.9.0)
2025-06-06T02:19:16.1915414Z Requirement already satisfied: jiter<1,>=0.4.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from openai>=1.33.0->-r requirements.txt (line 20)) (0.10.0)
2025-06-06T02:19:16.1997551Z Requirement already satisfied: airtrain>=0.1.58 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.1.68)
2025-06-06T02:19:16.2004230Z Requirement already satisfied: rich>=12.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (14.0.0)
2025-06-06T02:19:16.2010772Z Requirement already satisfied: typer>=0.7.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.15.4)
2025-06-06T02:19:16.2017202Z Requirement already satisfied: python-dotenv>=0.20.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (1.1.0)
2025-06-06T02:19:16.2160240Z INFO: pip is looking at multiple versions of grpcio-reflection to determine which version is compatible with other requirements. This could take a while.
2025-06-06T02:19:16.2164896Z Collecting grpcio-reflection>=1.54.0 (from -r requirements.txt (line 28))
2025-06-06T02:19:16.2219541Z   Downloading grpcio_reflection-1.71.0-py3-none-any.whl.metadata (1.0 kB)
2025-06-06T02:19:16.2554742Z   Downloading grpcio_reflection-1.70.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.2636230Z   Downloading grpcio_reflection-1.69.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.2715947Z   Downloading grpcio_reflection-1.68.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.2795686Z   Downloading grpcio_reflection-1.68.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.2873115Z   Downloading grpcio_reflection-1.67.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.2945554Z   Downloading grpcio_reflection-1.67.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.2980920Z INFO: pip is still looking at multiple versions of grpcio-reflection to determine which version is compatible with other requirements. This could take a while.
2025-06-06T02:19:16.3031226Z   Downloading grpcio_reflection-1.66.2-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.3188956Z   Downloading grpcio_reflection-1.66.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.3301925Z   Downloading grpcio_reflection-1.66.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.3380382Z   Downloading grpcio_reflection-1.65.5-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.3450833Z   Downloading grpcio_reflection-1.65.4-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.3486275Z INFO: This is taking longer than usual. You might need to provide the dependency resolver with stricter constraints to reduce runtime. See https://pip.pypa.io/warnings/backtracking for guidance. If you want to abort this run, press Ctrl + C.
2025-06-06T02:19:16.3521002Z   Downloading grpcio_reflection-1.65.2-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.3604588Z   Downloading grpcio_reflection-1.65.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.3680535Z   Downloading grpcio_reflection-1.64.3-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.3760059Z   Downloading grpcio_reflection-1.64.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.3837332Z   Downloading grpcio_reflection-1.64.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.3918332Z   Downloading grpcio_reflection-1.63.2-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.4001452Z   Downloading grpcio_reflection-1.63.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.4077752Z   Downloading grpcio_reflection-1.62.3-py3-none-any.whl.metadata (1.3 kB)
2025-06-06T02:19:16.4480710Z INFO: pip is looking at multiple versions of grpcio-health-checking to determine which version is compatible with other requirements. This could take a while.
2025-06-06T02:19:16.4484130Z Collecting grpcio-health-checking>=1.54.0 (from -r requirements.txt (line 29))
2025-06-06T02:19:16.4520855Z   Downloading grpcio_health_checking-1.71.0-py3-none-any.whl.metadata (1.0 kB)
2025-06-06T02:19:16.4872214Z   Downloading grpcio_health_checking-1.70.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.4957444Z   Downloading grpcio_health_checking-1.69.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.5037366Z   Downloading grpcio_health_checking-1.68.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.5113479Z   Downloading grpcio_health_checking-1.68.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.5188482Z   Downloading grpcio_health_checking-1.67.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.5268097Z   Downloading grpcio_health_checking-1.67.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.5303410Z INFO: pip is still looking at multiple versions of grpcio-health-checking to determine which version is compatible with other requirements. This could take a while.
2025-06-06T02:19:16.5355667Z   Downloading grpcio_health_checking-1.66.2-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.5447229Z   Downloading grpcio_health_checking-1.66.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.5526087Z   Downloading grpcio_health_checking-1.66.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.5607657Z   Downloading grpcio_health_checking-1.65.5-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.5687124Z   Downloading grpcio_health_checking-1.65.4-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.5723201Z INFO: This is taking longer than usual. You might need to provide the dependency resolver with stricter constraints to reduce runtime. See https://pip.pypa.io/warnings/backtracking for guidance. If you want to abort this run, press Ctrl + C.
2025-06-06T02:19:16.5763302Z   Downloading grpcio_health_checking-1.65.2-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.5848645Z   Downloading grpcio_health_checking-1.65.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.5953602Z   Downloading grpcio_health_checking-1.64.3-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.6036004Z   Downloading grpcio_health_checking-1.64.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.6110326Z   Downloading grpcio_health_checking-1.64.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.6192150Z   Downloading grpcio_health_checking-1.63.2-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.6275822Z   Downloading grpcio_health_checking-1.63.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:16.6349226Z   Downloading grpcio_health_checking-1.62.3-py3-none-any.whl.metadata (1.3 kB)
2025-06-06T02:19:16.6403251Z Requirement already satisfied: filelock in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from torch>=1.10.0->-r requirements.txt (line 33)) (3.18.0)
2025-06-06T02:19:16.7609344Z Collecting setuptools (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T02:19:16.7623726Z   Using cached setuptools-80.9.0-py3-none-any.whl.metadata (6.6 kB)
2025-06-06T02:19:16.7850016Z Collecting sympy>=1.13.3 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T02:19:16.7885175Z   Downloading sympy-1.14.0-py3-none-any.whl.metadata (12 kB)
2025-06-06T02:19:16.8467399Z Collecting networkx (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T02:19:16.8503629Z   Downloading networkx-3.5-py3-none-any.whl.metadata (6.3 kB)
2025-06-06T02:19:16.8765430Z Collecting fsspec (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T02:19:16.8802134Z   Downloading fsspec-2025.5.1-py3-none-any.whl.metadata (11 kB)
2025-06-06T02:19:16.9177680Z Collecting nvidia-cuda-nvrtc-cu12==12.6.77 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T02:19:16.9214540Z   Downloading nvidia_cuda_nvrtc_cu12-12.6.77-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)
2025-06-06T02:19:16.9338230Z Collecting nvidia-cuda-runtime-cu12==12.6.77 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T02:19:16.9375364Z   Downloading nvidia_cuda_runtime_cu12-12.6.77-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (1.5 kB)
2025-06-06T02:19:16.9502130Z Collecting nvidia-cuda-cupti-cu12==12.6.80 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T02:19:16.9545682Z   Downloading nvidia_cuda_cupti_cu12-12.6.80-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (1.6 kB)
2025-06-06T02:19:16.9674769Z Collecting nvidia-cudnn-cu12==9.5.1.17 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T02:19:16.9708919Z   Downloading nvidia_cudnn_cu12-9.5.1.17-py3-none-manylinux_2_28_x86_64.whl.metadata (1.6 kB)
2025-06-06T02:19:16.9852562Z Collecting nvidia-cublas-cu12==12.6.4.1 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T02:19:16.9887419Z   Downloading nvidia_cublas_cu12-12.6.4.1-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (1.5 kB)
2025-06-06T02:19:17.0012289Z Collecting nvidia-cufft-cu12==11.3.0.4 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T02:19:17.0045540Z   Downloading nvidia_cufft_cu12-11.3.0.4-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (1.5 kB)
2025-06-06T02:19:17.0169169Z Collecting nvidia-curand-cu12==10.3.7.77 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T02:19:17.0202795Z   Downloading nvidia_curand_cu12-10.3.7.77-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (1.5 kB)
2025-06-06T02:19:17.0326461Z Collecting nvidia-cusolver-cu12==11.7.1.2 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T02:19:17.0363265Z   Downloading nvidia_cusolver_cu12-11.7.1.2-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (1.6 kB)
2025-06-06T02:19:17.0490810Z Collecting nvidia-cusparse-cu12==12.5.4.2 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T02:19:17.0524846Z   Downloading nvidia_cusparse_cu12-12.5.4.2-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (1.6 kB)
2025-06-06T02:19:17.0623566Z Collecting nvidia-cusparselt-cu12==0.6.3 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T02:19:17.0657102Z   Downloading nvidia_cusparselt_cu12-0.6.3-py3-none-manylinux2014_x86_64.whl.metadata (6.8 kB)
2025-06-06T02:19:17.0791264Z Collecting nvidia-nccl-cu12==2.26.2 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T02:19:17.0827482Z   Downloading nvidia_nccl_cu12-2.26.2-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (2.0 kB)
2025-06-06T02:19:17.0955408Z Collecting nvidia-nvtx-cu12==12.6.77 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T02:19:17.0991173Z   Downloading nvidia_nvtx_cu12-12.6.77-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (1.6 kB)
2025-06-06T02:19:17.1141201Z Collecting nvidia-nvjitlink-cu12==12.6.85 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T02:19:17.1178092Z   Downloading nvidia_nvjitlink_cu12-12.6.85-py3-none-manylinux2010_x86_64.manylinux_2_12_x86_64.whl.metadata (1.5 kB)
2025-06-06T02:19:17.1273003Z Collecting nvidia-cufile-cu12==1.11.1.6 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T02:19:17.1308695Z   Downloading nvidia_cufile_cu12-1.11.1.6-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (1.5 kB)
2025-06-06T02:19:17.1445042Z Collecting triton==3.3.1 (from torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T02:19:17.1481165Z   Downloading triton-3.3.1-cp312-cp312-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl.metadata (1.5 kB)
2025-06-06T02:19:17.2634208Z Collecting huggingface-hub<1.0,>=0.30.0 (from transformers>=4.20.0->-r requirements.txt (line 34))
2025-06-06T02:19:17.2677350Z   Downloading huggingface_hub-0.32.4-py3-none-any.whl.metadata (14 kB)
2025-06-06T02:19:17.2927585Z Requirement already satisfied: pyyaml>=5.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from transformers>=4.20.0->-r requirements.txt (line 34)) (6.0.2)
2025-06-06T02:19:17.5951750Z Collecting regex!=2019.12.17 (from transformers>=4.20.0->-r requirements.txt (line 34))
2025-06-06T02:19:17.6072647Z   Downloading regex-2024.11.6-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (40 kB)
2025-06-06T02:19:17.7630326Z Collecting tokenizers<0.22,>=0.21 (from transformers>=4.20.0->-r requirements.txt (line 34))
2025-06-06T02:19:17.7677685Z   Downloading tokenizers-0.21.1-cp39-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (6.8 kB)
2025-06-06T02:19:17.9296076Z Collecting safetensors>=0.4.3 (from transformers>=4.20.0->-r requirements.txt (line 34))
2025-06-06T02:19:17.9336447Z   Downloading safetensors-0.5.3-cp38-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.8 kB)
2025-06-06T02:19:17.9719971Z Collecting hf-xet<2.0.0,>=1.1.2 (from huggingface-hub<1.0,>=0.30.0->transformers>=4.20.0->-r requirements.txt (line 34))
2025-06-06T02:19:17.9756019Z   Downloading hf_xet-1.1.3-cp37-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (879 bytes)
2025-06-06T02:19:18.1228443Z Collecting scipy (from sentence-transformers>=2.2.0->-r requirements.txt (line 35))
2025-06-06T02:19:18.1266836Z   Downloading scipy-1.15.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (61 kB)
2025-06-06T02:19:18.1630487Z Requirement already satisfied: Pillow in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from sentence-transformers>=2.2.0->-r requirements.txt (line 35)) (11.2.1)
2025-06-06T02:19:18.1905660Z Collecting joblib>=1.2.0 (from scikit-learn>=1.0.0->-r requirements.txt (line 37))
2025-06-06T02:19:18.1942133Z   Downloading joblib-1.5.1-py3-none-any.whl.metadata (5.6 kB)
2025-06-06T02:19:18.2047198Z Collecting threadpoolctl>=3.1.0 (from scikit-learn>=1.0.0->-r requirements.txt (line 37))
2025-06-06T02:19:18.2080895Z   Downloading threadpoolctl-3.6.0-py3-none-any.whl.metadata (13 kB)
2025-06-06T02:19:18.2146517Z Requirement already satisfied: charset-normalizer<4,>=2 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from requests>=2.25.0->-r requirements.txt (line 40)) (3.4.2)
2025-06-06T02:19:18.2277646Z Requirement already satisfied: six>=1.5 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from python-dateutil>=2.8.2->-r requirements.txt (line 43)) (1.17.0)
2025-06-06T02:19:18.2929416Z Collecting contourpy>=1.0.1 (from matplotlib>=3.5.0->-r requirements.txt (line 48))
2025-06-06T02:19:18.2967511Z   Downloading contourpy-1.3.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (5.5 kB)
2025-06-06T02:19:18.3118997Z Collecting cycler>=0.10 (from matplotlib>=3.5.0->-r requirements.txt (line 48))
2025-06-06T02:19:18.3154210Z   Downloading cycler-0.12.1-py3-none-any.whl.metadata (3.8 kB)
2025-06-06T02:19:18.4418574Z Collecting fonttools>=4.22.0 (from matplotlib>=3.5.0->-r requirements.txt (line 48))
2025-06-06T02:19:18.4463739Z   Downloading fonttools-4.58.1-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (106 kB)
2025-06-06T02:19:18.5125572Z Collecting kiwisolver>=1.3.1 (from matplotlib>=3.5.0->-r requirements.txt (line 48))
2025-06-06T02:19:18.5161872Z   Downloading kiwisolver-1.4.8-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (6.2 kB)
2025-06-06T02:19:18.5209013Z Requirement already satisfied: pyparsing>=2.3.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from matplotlib>=3.5.0->-r requirements.txt (line 48)) (3.2.3)
2025-06-06T02:19:18.5708200Z Collecting narwhals>=1.15.1 (from plotly>=5.13.0->-r requirements.txt (line 50))
2025-06-06T02:19:18.5746558Z   Downloading narwhals-1.41.0-py3-none-any.whl.metadata (11 kB)
2025-06-06T02:19:18.5860006Z Requirement already satisfied: greenlet>=1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from SQLAlchemy>=2.0.0->-r requirements.txt (line 54)) (3.2.3)
2025-06-06T02:19:18.5943692Z Requirement already satisfied: alembic>=1.9.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from Flask-Migrate>=4.0.0->-r requirements.txt (line 56)) (1.16.1)
2025-06-06T02:19:18.5971763Z Requirement already satisfied: iniconfig>=1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from pytest>=7.0.0->-r requirements.txt (line 59)) (2.1.0)
2025-06-06T02:19:18.5980370Z Requirement already satisfied: pluggy<2,>=1.5 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from pytest>=7.0.0->-r requirements.txt (line 59)) (1.6.0)
2025-06-06T02:19:18.5985702Z Requirement already satisfied: pygments>=2.7.2 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from pytest>=7.0.0->-r requirements.txt (line 59)) (2.19.1)
2025-06-06T02:19:18.6043253Z Requirement already satisfied: coverage>=7.5 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from coverage[toml]>=7.5->pytest-cov>=4.0.0->-r requirements.txt (line 60)) (7.8.2)
2025-06-06T02:19:18.6119823Z Requirement already satisfied: aiohappyeyeballs>=2.5.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from aiohttp>=3.8.0->-r requirements.txt (line 63)) (2.6.1)
2025-06-06T02:19:18.6125026Z Requirement already satisfied: aiosignal>=1.1.2 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from aiohttp>=3.8.0->-r requirements.txt (line 63)) (1.3.2)
2025-06-06T02:19:18.6132046Z Requirement already satisfied: attrs>=17.3.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from aiohttp>=3.8.0->-r requirements.txt (line 63)) (25.3.0)
2025-06-06T02:19:18.6137242Z Requirement already satisfied: frozenlist>=1.1.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from aiohttp>=3.8.0->-r requirements.txt (line 63)) (1.6.2)
2025-06-06T02:19:18.6143238Z Requirement already satisfied: multidict<7.0,>=4.5 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from aiohttp>=3.8.0->-r requirements.txt (line 63)) (6.4.4)
2025-06-06T02:19:18.6148342Z Requirement already satisfied: propcache>=0.2.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from aiohttp>=3.8.0->-r requirements.txt (line 63)) (0.3.1)
2025-06-06T02:19:18.6153734Z Requirement already satisfied: yarl<2.0,>=1.17.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from aiohttp>=3.8.0->-r requirements.txt (line 63)) (1.20.0)
2025-06-06T02:19:18.6513787Z Collecting aiormq<6.9,>=6.8 (from aio_pika>=9.0.0->-r requirements.txt (line 64))
2025-06-06T02:19:18.6558791Z   Downloading aiormq-6.8.1-py3-none-any.whl.metadata (19 kB)
2025-06-06T02:19:18.6704225Z Collecting exceptiongroup<2,>=1 (from aio_pika>=9.0.0->-r requirements.txt (line 64))
2025-06-06T02:19:18.6738877Z   Downloading exceptiongroup-1.3.0-py3-none-any.whl.metadata (6.7 kB)
2025-06-06T02:19:18.6898759Z Collecting pamqp==3.3.0 (from aiormq<6.9,>=6.8->aio_pika>=9.0.0->-r requirements.txt (line 64))
2025-06-06T02:19:18.6943319Z   Downloading pamqp-3.3.0-py2.py3-none-any.whl.metadata (4.7 kB)
2025-06-06T02:19:18.7127551Z Requirement already satisfied: firebase-admin>=6.6.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (6.9.0)
2025-06-06T02:19:18.7133319Z Requirement already satisfied: loguru>=0.7.3 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.7.3)
2025-06-06T02:19:18.7141750Z Requirement already satisfied: boto3>=1.36.6 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (1.38.31)
2025-06-06T02:19:18.7147033Z Requirement already satisfied: together>=1.3.13 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (1.5.8)
2025-06-06T02:19:18.7152835Z Requirement already satisfied: anthropic>=0.45.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.52.2)
2025-06-06T02:19:18.7157672Z Requirement already satisfied: groq>=0.15.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.26.0)
2025-06-06T02:19:18.7163228Z Requirement already satisfied: cerebras-cloud-sdk>=1.19.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (1.35.0)
2025-06-06T02:19:18.7168554Z Requirement already satisfied: google-genai>=1.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (1.19.0)
2025-06-06T02:19:18.7174006Z Requirement already satisfied: fireworks-ai>=0.15.12 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.17.16)
2025-06-06T02:19:18.7179295Z Requirement already satisfied: google-generativeai>=0.8.4 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.8.5)
2025-06-06T02:19:18.7189270Z Requirement already satisfied: prompt-toolkit>=3.0.36 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (3.0.51)
2025-06-06T02:19:18.7194580Z Requirement already satisfied: colorama>=0.4.6 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.4.6)
2025-06-06T02:19:18.7250057Z Requirement already satisfied: Mako in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from alembic>=1.9.0->Flask-Migrate>=4.0.0->-r requirements.txt (line 56)) (1.3.10)
2025-06-06T02:19:18.7454956Z Requirement already satisfied: botocore<1.39.0,>=1.38.31 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from boto3>=1.36.6->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (1.38.31)
2025-06-06T02:19:18.7464378Z Requirement already satisfied: jmespath<2.0.0,>=0.7.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from boto3>=1.36.6->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (1.0.1)
2025-06-06T02:19:18.7472829Z Requirement already satisfied: s3transfer<0.14.0,>=0.13.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from boto3>=1.36.6->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.13.0)
2025-06-06T02:19:18.7656980Z Requirement already satisfied: pycparser in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from cffi>=1.14->cryptography>=41.0.0->-r requirements.txt (line 14)) (2.22)
2025-06-06T02:19:18.7905831Z Requirement already satisfied: cachecontrol>=0.12.14 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.14.3)
2025-06-06T02:19:18.7910278Z Requirement already satisfied: google-api-python-client>=1.7.8 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (2.171.0)
2025-06-06T02:19:18.7915969Z Requirement already satisfied: google-cloud-storage>=1.37.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (3.1.0)
2025-06-06T02:19:18.7940794Z Requirement already satisfied: google-api-core<3.0.0dev,>=1.22.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (2.25.0)
2025-06-06T02:19:18.7950441Z Requirement already satisfied: google-cloud-firestore>=2.19.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (2.21.0)
2025-06-06T02:19:18.7990644Z Requirement already satisfied: h2<5,>=3 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from httpx[http2]>=0.20.0->qdrant-client>=1.9.1->-r requirements.txt (line 19)) (4.2.0)
2025-06-06T02:19:18.8024733Z Requirement already satisfied: googleapis-common-protos<2.0.0,>=1.56.2 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (1.70.0)
2025-06-06T02:19:18.8692984Z Requirement already satisfied: proto-plus<2.0.0,>=1.22.3 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (1.26.1)
2025-06-06T02:19:18.8698359Z Requirement already satisfied: google-auth<3.0.0,>=2.14.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (2.40.3)
2025-06-06T02:19:18.8764099Z Requirement already satisfied: grpcio-status<2.0.0,>=1.33.2 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (1.71.0)
2025-06-06T02:19:18.8807112Z Requirement already satisfied: cachetools<6.0,>=2.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-auth<3.0.0,>=2.14.1->google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (5.5.2)
2025-06-06T02:19:18.8812596Z Requirement already satisfied: pyasn1-modules>=0.2.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-auth<3.0.0,>=2.14.1->google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.4.2)
2025-06-06T02:19:18.8818795Z Requirement already satisfied: rsa<5,>=3.1.4 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-auth<3.0.0,>=2.14.1->google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (4.9.1)
2025-06-06T02:19:19.1178229Z INFO: pip is looking at multiple versions of grpcio-status to determine which version is compatible with other requirements. This could take a while.
2025-06-06T02:19:19.1510376Z Collecting grpcio-status<2.0.0,>=1.33.2 (from google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24))
2025-06-06T02:19:19.1521620Z   Using cached grpcio_status-1.72.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:19.2021178Z   Downloading grpcio_status-1.70.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:19.2109522Z   Downloading grpcio_status-1.69.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:19.2193777Z   Downloading grpcio_status-1.68.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:19.2280744Z   Downloading grpcio_status-1.68.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:19.2367478Z   Downloading grpcio_status-1.67.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:19.2477677Z   Downloading grpcio_status-1.67.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:19.2526850Z INFO: pip is still looking at multiple versions of grpcio-status to determine which version is compatible with other requirements. This could take a while.
2025-06-06T02:19:19.2572780Z   Downloading grpcio_status-1.66.2-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:19.2705342Z   Downloading grpcio_status-1.66.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:19.2787004Z   Downloading grpcio_status-1.66.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:19.2867065Z   Downloading grpcio_status-1.65.5-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:19.2947175Z   Downloading grpcio_status-1.65.4-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:19.2993699Z INFO: This is taking longer than usual. You might need to provide the dependency resolver with stricter constraints to reduce runtime. See https://pip.pypa.io/warnings/backtracking for guidance. If you want to abort this run, press Ctrl + C.
2025-06-06T02:19:19.3033578Z   Downloading grpcio_status-1.65.2-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:19.3113857Z   Downloading grpcio_status-1.65.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:19.3205414Z   Downloading grpcio_status-1.64.3-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:19.3286699Z   Downloading grpcio_status-1.64.1-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:19.3367560Z   Downloading grpcio_status-1.64.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:19.3448141Z   Downloading grpcio_status-1.63.2-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:19.3528540Z   Downloading grpcio_status-1.63.0-py3-none-any.whl.metadata (1.1 kB)
2025-06-06T02:19:19.3613290Z   Downloading grpcio_status-1.62.3-py3-none-any.whl.metadata (1.3 kB)
2025-06-06T02:19:19.3700755Z Requirement already satisfied: hyperframe<7,>=6.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from h2<5,>=3->httpx[http2]>=0.20.0->qdrant-client>=1.9.1->-r requirements.txt (line 19)) (6.1.0)
2025-06-06T02:19:19.3706791Z Requirement already satisfied: hpack<5,>=4.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from h2<5,>=3->httpx[http2]>=0.20.0->qdrant-client>=1.9.1->-r requirements.txt (line 19)) (4.1.0)
2025-06-06T02:19:19.3828936Z Requirement already satisfied: pyasn1>=0.1.3 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from rsa<5,>=3.1.4->google-auth<3.0.0,>=2.14.1->google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != "PyPy"->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.6.1)
2025-06-06T02:19:19.3864663Z Requirement already satisfied: msgpack<2.0.0,>=0.5.2 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from cachecontrol>=0.12.14->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (1.1.0)
2025-06-06T02:19:19.3937085Z Requirement already satisfied: httpx-ws in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.7.2)
2025-06-06T02:19:19.3941601Z Requirement already satisfied: httpx-sse in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.4.0)
2025-06-06T02:19:19.3961961Z Requirement already satisfied: mmh3>=4.1.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (5.1.0)
2025-06-06T02:19:19.3969408Z Requirement already satisfied: betterproto-fw>=2.0.3 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from betterproto-fw[compiler]>=2.0.3->fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (2.0.3)
2025-06-06T02:19:19.3976515Z Requirement already satisfied: asyncstdlib-fw>=3.13.2 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (3.13.2)
2025-06-06T02:19:19.4398811Z INFO: pip is looking at multiple versions of fireworks-ai to determine which version is compatible with other requirements. This could take a while.
2025-06-06T02:19:19.4576182Z Collecting fireworks-ai>=0.15.12 (from airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24))
2025-06-06T02:19:19.4588978Z   Using cached fireworks_ai-0.17.15-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:19:19.4665823Z   Using cached fireworks_ai-0.17.14-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:19:19.4733135Z   Using cached fireworks_ai-0.17.13-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:19:19.4799846Z   Using cached fireworks_ai-0.17.12-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:19:19.4865854Z   Using cached fireworks_ai-0.17.9-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:19:19.4932563Z   Using cached fireworks_ai-0.17.8-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:19:19.4997717Z   Using cached fireworks_ai-0.17.7-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:19:19.5052959Z INFO: pip is still looking at multiple versions of fireworks-ai to determine which version is compatible with other requirements. This could take a while.
2025-06-06T02:19:19.5067149Z   Using cached fireworks_ai-0.17.6-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:19:19.5136552Z   Using cached fireworks_ai-0.17.5-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:19:19.5480133Z   Using cached fireworks_ai-0.17.4-py3-none-any.whl.metadata (2.1 kB)
2025-06-06T02:19:19.5639445Z Collecting nest-asyncio>=1.6.0 (from fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24))
2025-06-06T02:19:19.5650900Z   Using cached nest_asyncio-1.6.0-py3-none-any.whl.metadata (2.8 kB)
2025-06-06T02:19:19.5741180Z Requirement already satisfied: grpclib<0.5.0,>=0.4.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from betterproto-fw>=2.0.3->betterproto-fw[compiler]>=2.0.3->fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.4.8)
2025-06-06T02:19:19.5840482Z Requirement already satisfied: ruff~=0.9.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from betterproto-fw[compiler]>=2.0.3->fireworks-ai>=0.15.12->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.9.10)
2025-06-06T02:19:19.6028416Z Requirement already satisfied: httplib2<1.0.0,>=0.19.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-api-python-client>=1.7.8->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.22.0)
2025-06-06T02:19:19.6038334Z Requirement already satisfied: google-auth-httplib2<1.0.0,>=0.2.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-api-python-client>=1.7.8->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.2.0)
2025-06-06T02:19:19.6048568Z Requirement already satisfied: uritemplate<5,>=3.0.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-api-python-client>=1.7.8->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (4.2.0)
2025-06-06T02:19:19.6247221Z Requirement already satisfied: google-cloud-core<3.0.0,>=1.4.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-cloud-firestore>=2.19.0->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (2.4.3)
2025-06-06T02:19:19.7234625Z Requirement already satisfied: google-resumable-media>=2.7.2 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-cloud-storage>=1.37.1->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (2.7.2)
2025-06-06T02:19:19.7243654Z Requirement already satisfied: google-crc32c<2.0dev,>=1.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-cloud-storage>=1.37.1->firebase-admin>=6.6.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (1.7.1)
2025-06-06T02:19:19.7348867Z Requirement already satisfied: websockets<15.1.0,>=13.0.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-genai>=1.0.0->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (15.0.1)
2025-06-06T02:19:19.7429018Z Requirement already satisfied: google-ai-generativelanguage==0.6.15 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from google-generativeai>=0.8.4->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.6.15)
2025-06-06T02:19:19.9138686Z Requirement already satisfied: backoff>=1.10.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from posthog>=3.5.0->mem0ai>=0.1.100->-r requirements.txt (line 18)) (2.2.1)
2025-06-06T02:19:19.9239991Z Requirement already satisfied: wcwidth in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from prompt-toolkit>=3.0.36->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.2.13)
2025-06-06T02:19:19.9604551Z Collecting bidict>=0.21.0 (from python-socketio>=5.12.0->flask-socketio>=5.1.0->-r requirements.txt (line 10))
2025-06-06T02:19:19.9638583Z   Downloading bidict-0.23.1-py3-none-any.whl.metadata (8.7 kB)
2025-06-06T02:19:19.9896593Z Collecting python-engineio>=4.11.0 (from python-socketio>=5.12.0->flask-socketio>=5.1.0->-r requirements.txt (line 10))
2025-06-06T02:19:19.9931816Z   Downloading python_engineio-4.12.2-py3-none-any.whl.metadata (2.2 kB)
2025-06-06T02:19:20.0138164Z Collecting simple-websocket>=0.10.0 (from python-engineio>=4.11.0->python-socketio>=5.12.0->flask-socketio>=5.1.0->-r requirements.txt (line 10))
2025-06-06T02:19:20.0171036Z   Downloading simple_websocket-1.1.0-py3-none-any.whl.metadata (1.5 kB)
2025-06-06T02:19:20.0326174Z Requirement already satisfied: markdown-it-py>=2.2.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from rich>=12.0.0->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (3.0.0)
2025-06-06T02:19:20.0375690Z Requirement already satisfied: mdurl~=0.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from markdown-it-py>=2.2.0->rich>=12.0.0->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.1.2)
2025-06-06T02:19:20.0630134Z Requirement already satisfied: wsproto in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from simple-websocket>=0.10.0->python-engineio>=4.11.0->python-socketio>=5.12.0->flask-socketio>=5.1.0->-r requirements.txt (line 10)) (1.2.0)
2025-06-06T02:19:20.0844347Z Collecting mpmath<1.4,>=1.1.0 (from sympy>=1.13.3->torch>=1.10.0->-r requirements.txt (line 33))
2025-06-06T02:19:20.0888655Z   Downloading mpmath-1.3.0-py3-none-any.whl.metadata (8.6 kB)
2025-06-06T02:19:20.1068137Z Requirement already satisfied: eval-type-backport<0.3.0,>=0.1.3 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from together>=1.3.13->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.2.2)
2025-06-06T02:19:20.1089748Z Requirement already satisfied: pyarrow>=10.0.1 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from together>=1.3.13->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (20.0.0)
2025-06-06T02:19:20.1117557Z Requirement already satisfied: tabulate<0.10.0,>=0.9.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from together>=1.3.13->airtrain>=0.1.58->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (0.9.0)
2025-06-06T02:19:20.1321836Z Requirement already satisfied: shellingham>=1.3.0 in /opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages (from typer>=0.7.0->modelcontextprotocol>=0.1.0->-r requirements.txt (line 24)) (1.5.4)
2025-06-06T02:19:20.1939668Z Downloading protobuf-4.25.8-cp37-abi3-manylinux2014_x86_64.whl (294 kB)
2025-06-06T02:19:20.2073566Z Downloading fastapi-0.115.12-py3-none-any.whl (95 kB)
2025-06-06T02:19:20.2148816Z Downloading starlette-0.46.2-py3-none-any.whl (72 kB)
2025-06-06T02:19:20.2201647Z Downloading uvicorn-0.34.3-py3-none-any.whl (62 kB)
2025-06-06T02:19:20.2275709Z Downloading redis-6.2.0-py3-none-any.whl (278 kB)
2025-06-06T02:19:20.2384801Z Downloading python_multipart-0.0.20-py3-none-any.whl (24 kB)
2025-06-06T02:19:20.2438317Z Downloading celery-5.5.3-py3-none-any.whl (438 kB)
2025-06-06T02:19:20.2568666Z Downloading billiard-4.2.1-py3-none-any.whl (86 kB)
2025-06-06T02:19:20.2623036Z Downloading kombu-5.5.4-py3-none-any.whl (210 kB)
2025-06-06T02:19:20.2698123Z Downloading vine-5.1.0-py3-none-any.whl (9.6 kB)
2025-06-06T02:19:20.2749225Z Downloading amqp-5.3.1-py3-none-any.whl (50 kB)
2025-06-06T02:19:20.2804715Z Downloading Flask_SocketIO-5.5.1-py3-none-any.whl (18 kB)
2025-06-06T02:19:20.2863738Z Downloading mem0ai-0.1.104-py3-none-any.whl (156 kB)
2025-06-06T02:19:20.2938806Z Downloading qdrant_client-1.14.2-py3-none-any.whl (327 kB)
2025-06-06T02:19:20.3037211Z Downloading portalocker-2.10.1-py3-none-any.whl (18 kB)
2025-06-06T02:19:20.3087416Z Downloading pytz-2025.2-py2.py3-none-any.whl (509 kB)
2025-06-06T02:19:20.3211429Z Downloading grpcio_reflection-1.62.3-py3-none-any.whl (22 kB)
2025-06-06T02:19:20.3260344Z Downloading grpcio_health_checking-1.62.3-py3-none-any.whl (18 kB)
2025-06-06T02:19:20.3352748Z Downloading torch-2.7.1-cp312-cp312-manylinux_2_28_x86_64.whl (821.0 MB)
2025-06-06T02:19:26.7068940Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 821.0/821.0 MB 59.6 MB/s eta 0:00:00
2025-06-06T02:19:26.7113008Z Downloading nvidia_cublas_cu12-12.6.4.1-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (393.1 MB)
2025-06-06T02:19:29.4481318Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 393.1/393.1 MB 110.7 MB/s eta 0:00:00
2025-06-06T02:19:29.4524281Z Downloading nvidia_cuda_cupti_cu12-12.6.80-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (8.9 MB)
2025-06-06T02:19:29.4984648Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 8.9/8.9 MB 202.2 MB/s eta 0:00:00
2025-06-06T02:19:29.5073275Z Downloading nvidia_cuda_nvrtc_cu12-12.6.77-py3-none-manylinux2014_x86_64.whl (23.7 MB)
2025-06-06T02:19:29.6029941Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 23.7/23.7 MB 252.0 MB/s eta 0:00:00
2025-06-06T02:19:29.6153318Z Downloading nvidia_cuda_runtime_cu12-12.6.77-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (897 kB)
2025-06-06T02:19:29.6222897Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 897.7/897.7 kB 146.0 MB/s eta 0:00:00
2025-06-06T02:19:29.6262551Z Downloading nvidia_cudnn_cu12-9.5.1.17-py3-none-manylinux_2_28_x86_64.whl (571.0 MB)
2025-06-06T02:19:34.4955490Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 571.0/571.0 MB 66.2 MB/s eta 0:00:00
2025-06-06T02:19:34.4995115Z Downloading nvidia_cufft_cu12-11.3.0.4-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (200.2 MB)
2025-06-06T02:19:35.4186985Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 200.2/200.2 MB 218.3 MB/s eta 0:00:00
2025-06-06T02:19:35.4227423Z Downloading nvidia_cufile_cu12-1.11.1.6-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (1.1 MB)
2025-06-06T02:19:35.4319782Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.1/1.1 MB 143.8 MB/s eta 0:00:00
2025-06-06T02:19:35.4359919Z Downloading nvidia_curand_cu12-10.3.7.77-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (56.3 MB)
2025-06-06T02:19:35.6874127Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 56.3/56.3 MB 225.3 MB/s eta 0:00:00
2025-06-06T02:19:35.6914477Z Downloading nvidia_cusolver_cu12-11.7.1.2-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (158.2 MB)
2025-06-06T02:19:36.3574703Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 158.2/158.2 MB 238.3 MB/s eta 0:00:00
2025-06-06T02:19:36.3614762Z Downloading nvidia_cusparse_cu12-12.5.4.2-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (216.6 MB)
2025-06-06T02:19:37.9716862Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 216.6/216.6 MB 134.6 MB/s eta 0:00:00
2025-06-06T02:19:37.9755749Z Downloading nvidia_cusparselt_cu12-0.6.3-py3-none-manylinux2014_x86_64.whl (156.8 MB)
2025-06-06T02:19:38.6465614Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 156.8/156.8 MB 234.4 MB/s eta 0:00:00
2025-06-06T02:19:38.6503857Z Downloading nvidia_nccl_cu12-2.26.2-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (201.3 MB)
2025-06-06T02:19:40.3152691Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 201.3/201.3 MB 121.0 MB/s eta 0:00:00
2025-06-06T02:19:40.3198902Z Downloading nvidia_nvjitlink_cu12-12.6.85-py3-none-manylinux2010_x86_64.manylinux_2_12_x86_64.whl (19.7 MB)
2025-06-06T02:19:40.4084403Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 19.7/19.7 MB 227.3 MB/s eta 0:00:00
2025-06-06T02:19:40.4124811Z Downloading nvidia_nvtx_cu12-12.6.77-py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (89 kB)
2025-06-06T02:19:40.4224388Z Downloading triton-3.3.1-cp312-cp312-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl (155.7 MB)
2025-06-06T02:19:41.3630814Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 155.7/155.7 MB 165.8 MB/s eta 0:00:00
2025-06-06T02:19:41.3672203Z Downloading transformers-4.52.4-py3-none-any.whl (10.5 MB)
2025-06-06T02:19:41.4147301Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 10.5/10.5 MB 227.1 MB/s eta 0:00:00
2025-06-06T02:19:41.4184344Z Downloading huggingface_hub-0.32.4-py3-none-any.whl (512 kB)
2025-06-06T02:19:41.4263323Z Downloading hf_xet-1.1.3-cp37-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (4.8 MB)
2025-06-06T02:19:41.4493177Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 4.8/4.8 MB 223.2 MB/s eta 0:00:00
2025-06-06T02:19:41.4530519Z Downloading tokenizers-0.21.1-cp39-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)
2025-06-06T02:19:41.4687421Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.0/3.0 MB 210.7 MB/s eta 0:00:00
2025-06-06T02:19:41.4726293Z Downloading sentence_transformers-4.1.0-py3-none-any.whl (345 kB)
2025-06-06T02:19:41.4840236Z Downloading scikit_learn-1.7.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.5 MB)
2025-06-06T02:19:41.5561010Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 12.5/12.5 MB 176.3 MB/s eta 0:00:00
2025-06-06T02:19:41.5602301Z Downloading psutil-7.0.0-cp36-abi3-manylinux_2_12_x86_64.manylinux2010_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (277 kB)
2025-06-06T02:19:41.5666062Z Downloading prometheus_client-0.22.1-py3-none-any.whl (58 kB)
2025-06-06T02:19:41.5723663Z Downloading matplotlib-3.10.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (8.6 MB)
2025-06-06T02:19:41.6131321Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 8.6/8.6 MB 220.2 MB/s eta 0:00:00
2025-06-06T02:19:41.6169890Z Downloading pandas-2.3.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.0 MB)
2025-06-06T02:19:41.6699368Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 12.0/12.0 MB 234.2 MB/s eta 0:00:00
2025-06-06T02:19:41.6736905Z Downloading plotly-6.1.2-py3-none-any.whl (16.3 MB)
2025-06-06T02:19:41.7493736Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 16.3/16.3 MB 219.9 MB/s eta 0:00:00
2025-06-06T02:19:41.7531014Z Downloading aio_pika-9.5.5-py3-none-any.whl (54 kB)
2025-06-06T02:19:41.7585012Z Downloading aiormq-6.8.1-py3-none-any.whl (31 kB)
2025-06-06T02:19:41.7636687Z Downloading pamqp-3.3.0-py2.py3-none-any.whl (33 kB)
2025-06-06T02:19:41.7686263Z Downloading exceptiongroup-1.3.0-py3-none-any.whl (16 kB)
2025-06-06T02:19:41.7736136Z Downloading click_didyoumean-0.3.1-py3-none-any.whl (3.6 kB)
2025-06-06T02:19:41.7787457Z Downloading click_plugins-1.1.1-py2.py3-none-any.whl (7.5 kB)
2025-06-06T02:19:41.7836127Z Downloading click_repl-0.3.0-py3-none-any.whl (10 kB)
2025-06-06T02:19:41.7887181Z Downloading contourpy-1.3.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (323 kB)
2025-06-06T02:19:41.7955584Z Downloading cycler-0.12.1-py3-none-any.whl (8.3 kB)
2025-06-06T02:19:41.8003443Z Downloading grpcio_status-1.62.3-py3-none-any.whl (14 kB)
2025-06-06T02:19:41.8065180Z Downloading fireworks_ai-0.17.4-py3-none-any.whl (254 kB)
2025-06-06T02:19:41.8134917Z Downloading fonttools-4.58.1-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (4.9 MB)
2025-06-06T02:19:41.8373554Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 4.9/4.9 MB 216.8 MB/s eta 0:00:00
2025-06-06T02:19:41.8425349Z Downloading fsspec-2025.5.1-py3-none-any.whl (199 kB)
2025-06-06T02:19:41.8502713Z Downloading joblib-1.5.1-py3-none-any.whl (307 kB)
2025-06-06T02:19:41.8591129Z Downloading kiwisolver-1.4.8-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.5 MB)
2025-06-06T02:19:41.8714194Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.5/1.5 MB 130.6 MB/s eta 0:00:00
2025-06-06T02:19:41.8749894Z Downloading narwhals-1.41.0-py3-none-any.whl (357 kB)
2025-06-06T02:19:41.8818900Z Downloading nest_asyncio-1.6.0-py3-none-any.whl (5.2 kB)
2025-06-06T02:19:41.8881545Z Downloading python_socketio-5.13.0-py3-none-any.whl (77 kB)
2025-06-06T02:19:41.8937299Z Downloading bidict-0.23.1-py3-none-any.whl (32 kB)
2025-06-06T02:19:41.9004066Z Downloading python_engineio-4.12.2-py3-none-any.whl (59 kB)
2025-06-06T02:19:41.9060868Z Downloading regex-2024.11.6-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (796 kB)
2025-06-06T02:19:41.9131211Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 796.9/796.9 kB 133.7 MB/s eta 0:00:00
2025-06-06T02:19:41.9260992Z Downloading safetensors-0.5.3-cp38-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (471 kB)
2025-06-06T02:19:41.9378855Z Downloading scipy-1.15.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (37.3 MB)
2025-06-06T02:19:42.1988450Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 37.3/37.3 MB 143.4 MB/s eta 0:00:00
2025-06-06T02:19:42.2002053Z Using cached setuptools-80.9.0-py3-none-any.whl (1.2 MB)
2025-06-06T02:19:42.2209868Z Downloading simple_websocket-1.1.0-py3-none-any.whl (13 kB)
2025-06-06T02:19:42.2264039Z Downloading sympy-1.14.0-py3-none-any.whl (6.3 MB)
2025-06-06T02:19:42.2561555Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 6.3/6.3 MB 223.3 MB/s eta 0:00:00
2025-06-06T02:19:42.2599586Z Downloading mpmath-1.3.0-py3-none-any.whl (536 kB)
2025-06-06T02:19:42.2655247Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 536.2/536.2 kB 88.8 MB/s eta 0:00:00
2025-06-06T02:19:42.2694446Z Downloading threadpoolctl-3.6.0-py3-none-any.whl (18 kB)
2025-06-06T02:19:42.2745866Z Downloading tzdata-2025.2-py2.py3-none-any.whl (347 kB)
2025-06-06T02:19:42.2817770Z Downloading networkx-3.5-py3-none-any.whl (2.0 MB)
2025-06-06T02:19:42.2934695Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 2.0/2.0 MB 194.9 MB/s eta 0:00:00
2025-06-06T02:19:44.7503324Z Building wheels for collected packages: pyperclip
2025-06-06T02:19:44.7512300Z   Building wheel for pyperclip (pyproject.toml): started
2025-06-06T02:19:44.9720099Z   Building wheel for pyperclip (pyproject.toml): finished with status 'done'
2025-06-06T02:19:44.9725990Z   Created wheel for pyperclip: filename=pyperclip-1.9.0-py3-none-any.whl size=11103 sha256=c6ff4040c2245a550f4dc28dbd402ac972f3ea53c862919cf98be4685fdea6e4
2025-06-06T02:19:44.9728466Z   Stored in directory: /home/runner/.cache/pip/wheels/e0/e8/fc/8ab8aa326e33bc066ccd5f3ca9646eab4299881af933f94f09
2025-06-06T02:19:44.9748851Z Successfully built pyperclip
2025-06-06T02:19:45.3908023Z Installing collected packages: pytz, pyperclip, nvidia-cusparselt-cu12, mpmath, vine, uvicorn, tzdata, threadpoolctl, sympy, setuptools, scipy, safetensors, regex, redis, python-multipart, psutil, protobuf, prometheus_client, portalocker, pamqp, nvidia-nvtx-cu12, nvidia-nvjitlink-cu12, nvidia-nccl-cu12, nvidia-curand-cu12, nvidia-cufile-cu12, nvidia-cuda-runtime-cu12, nvidia-cuda-nvrtc-cu12, nvidia-cuda-cupti-cu12, nvidia-cublas-cu12, networkx, nest-asyncio, narwhals, kiwisolver, joblib, hf-xet, fsspec, fonttools, exceptiongroup, cycler, contourpy, click-plugins, click-didyoumean, billiard, bidict, triton, starlette, simple-websocket, scikit-learn, plotly, pandas, nvidia-cusparse-cu12, nvidia-cufft-cu12, nvidia-cudnn-cu12, matplotlib, huggingface-hub, grpcio-reflection, grpcio-health-checking, click-repl, amqp, aiormq, tokenizers, python-engineio, nvidia-cusolver-cu12, kombu, grpcio-status, fastapi, aio_pika, transformers, torch, qdrant-client, python-socketio, celery, sentence-transformers, mem0ai, flask-socketio, fireworks-ai
2025-06-06T02:19:59.2711114Z   Attempting uninstall: protobuf
2025-06-06T02:19:59.2780474Z     Found existing installation: protobuf 5.29.4
2025-06-06T02:19:59.2842657Z     Uninstalling protobuf-5.29.4:
2025-06-06T02:19:59.2859450Z       Successfully uninstalled protobuf-5.29.4
2025-06-06T02:20:37.4452356Z   Attempting uninstall: grpcio-status
2025-06-06T02:20:37.4498798Z     Found existing installation: grpcio-status 1.71.0
2025-06-06T02:20:37.4517766Z     Uninstalling grpcio-status-1.71.0:
2025-06-06T02:20:37.4525708Z       Successfully uninstalled grpcio-status-1.71.0
2025-06-06T02:20:59.9931313Z   Attempting uninstall: fireworks-ai
2025-06-06T02:20:59.9982482Z     Found existing installation: fireworks-ai 0.17.16
2025-06-06T02:21:00.0179748Z     Uninstalling fireworks-ai-0.17.16:
2025-06-06T02:21:00.0217687Z       Successfully uninstalled fireworks-ai-0.17.16
2025-06-06T02:21:00.2653166Z 
2025-06-06T02:21:00.2836423Z Successfully installed aio_pika-9.5.5 aiormq-6.8.1 amqp-5.3.1 bidict-0.23.1 billiard-4.2.1 celery-5.5.3 click-didyoumean-0.3.1 click-plugins-1.1.1 click-repl-0.3.0 contourpy-1.3.2 cycler-0.12.1 exceptiongroup-1.3.0 fastapi-0.115.12 fireworks-ai-0.17.4 flask-socketio-5.5.1 fonttools-4.58.1 fsspec-2025.5.1 grpcio-health-checking-1.62.3 grpcio-reflection-1.62.3 grpcio-status-1.62.3 hf-xet-1.1.3 huggingface-hub-0.32.4 joblib-1.5.1 kiwisolver-1.4.8 kombu-5.5.4 matplotlib-3.10.3 mem0ai-0.1.104 mpmath-1.3.0 narwhals-1.41.0 nest-asyncio-1.6.0 networkx-3.5 nvidia-cublas-cu12-12.6.4.1 nvidia-cuda-cupti-cu12-12.6.80 nvidia-cuda-nvrtc-cu12-12.6.77 nvidia-cuda-runtime-cu12-12.6.77 nvidia-cudnn-cu12-9.5.1.17 nvidia-cufft-cu12-11.3.0.4 nvidia-cufile-cu12-1.11.1.6 nvidia-curand-cu12-10.3.7.77 nvidia-cusolver-cu12-11.7.1.2 nvidia-cusparse-cu12-12.5.4.2 nvidia-cusparselt-cu12-0.6.3 nvidia-nccl-cu12-2.26.2 nvidia-nvjitlink-cu12-12.6.85 nvidia-nvtx-cu12-12.6.77 pamqp-3.3.0 pandas-2.3.0 plotly-6.1.2 portalocker-2.10.1 prometheus_client-0.22.1 protobuf-4.25.8 psutil-7.0.0 pyperclip-1.9.0 python-engineio-4.12.2 python-multipart-0.0.20 python-socketio-5.13.0 pytz-2025.2 qdrant-client-1.14.2 redis-6.2.0 regex-2024.11.6 safetensors-0.5.3 scikit-learn-1.7.0 scipy-1.15.3 sentence-transformers-4.1.0 setuptools-80.9.0 simple-websocket-1.1.0 starlette-0.46.2 sympy-1.14.0 threadpoolctl-3.6.0 tokenizers-0.21.1 torch-2.7.1 transformers-4.52.4 triton-3.3.1 tzdata-2025.2 uvicorn-0.34.3 vine-5.1.0
2025-06-06T02:21:01.3099472Z Installing MCP SDK using installation script...
2025-06-06T02:21:01.3437171Z Platform: Linux
2025-06-06T02:21:01.3438100Z Python version: 3.12.10 (main, Apr  8 2025, 22:38:13) [GCC 13.3.0]
2025-06-06T02:21:01.3439243Z Python executable: /opt/hostedtoolcache/Python/3.12.10/x64/bin/python
2025-06-06T02:21:01.3440411Z Looking for script at: /home/runner/work/pAIssive_income/pAIssive_income/scripts/setup/install_mcp_sdk.py
2025-06-06T02:21:01.3442547Z Absolute script path: /home/runner/work/pAIssive_income/pAIssive_income/scripts/setup/install_mcp_sdk.py
2025-06-06T02:21:01.3443782Z Expected directory 1: /home/runner/work/pAIssive_income/pAIssive_income/scripts/setup
2025-06-06T02:21:01.3444831Z Expected directory 2: /home/runner/work/pAIssive_income/pAIssive_income/scripts/setup
2025-06-06T02:21:01.3478273Z Running command: /opt/hostedtoolcache/Python/3.12.10/x64/bin/python /home/runner/work/pAIssive_income/pAIssive_income/scripts/setup/install_mcp_sdk.py
2025-06-06T02:21:06.9564389Z Platform: Linux
2025-06-06T02:21:06.9565085Z Python version: 3.12.10 (main, Apr  8 2025, 22:38:13) [GCC 13.3.0]
2025-06-06T02:21:06.9565898Z Python executable: /opt/hostedtoolcache/Python/3.12.10/x64/bin/python
2025-06-06T02:21:06.9566547Z Running in CI environment: True
2025-06-06T02:21:06.9566955Z MCP SDK is not installed
2025-06-06T02:21:06.9567431Z Installing MCP SDK from GitHub...
2025-06-06T02:21:06.9568361Z Cloning MCP SDK repository to /tmp/tmpwn587w2m...
2025-06-06T02:21:06.9569336Z Installing MCP SDK...
2025-06-06T02:21:06.9569778Z MCP SDK installed successfully
2025-06-06T02:21:06.9570591Z Running in CI environment, returning success regardless of installation result
2025-06-06T02:21:06.9571125Z 
2025-06-06T02:21:06.9692554Z ##[group]Run ruff check .
2025-06-06T02:21:06.9692857Z [36;1mruff check .[0m
2025-06-06T02:21:06.9693086Z [36;1mpyright .[0m
2025-06-06T02:21:06.9746141Z shell: /usr/bin/bash -e {0}
2025-06-06T02:21:06.9746459Z env:
2025-06-06T02:21:06.9746769Z   TOOL_API_KEY: ci-test-api-key-for-github-actions
2025-06-06T02:21:06.9747276Z   pythonLocation: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:21:06.9747980Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib/pkgconfig
2025-06-06T02:21:06.9748547Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:21:06.9749050Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:21:06.9749554Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:21:06.9750075Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib
2025-06-06T02:21:06.9750501Z ##[endgroup]
2025-06-06T02:21:07.0660309Z .github/scripts/ensure-codeql-configs.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.0661217Z   |
2025-06-06T02:21:07.0661575Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.0662002Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.0662448Z 2 | # ruff: noqa: N999
2025-06-06T02:21:07.0662799Z 3 | """
2025-06-06T02:21:07.0663083Z   |
2025-06-06T02:21:07.0663241Z 
2025-06-06T02:21:07.0663984Z .github/scripts/generate_ci_cd_dashboard.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.0664770Z   |
2025-06-06T02:21:07.0665107Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.0665542Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.0665940Z 2 | """
2025-06-06T02:21:07.0666543Z 3 | Generate CI/CD dashboard visualizations from workflow metrics.
2025-06-06T02:21:07.0667122Z   |
2025-06-06T02:21:07.0667309Z 
2025-06-06T02:21:07.0668130Z .github/scripts/validate_sarif.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.0668889Z   |
2025-06-06T02:21:07.0669230Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.0669669Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.0670061Z 2 | """
2025-06-06T02:21:07.0670629Z 3 | Validate SARIF files and create valid empty ones if needed.
2025-06-06T02:21:07.0671174Z   |
2025-06-06T02:21:07.0671328Z 
2025-06-06T02:21:07.0672032Z adk_demo/mem0_enhanced_adk_agents.py:317:13: TRY300 Consider moving this statement to an `else` block
2025-06-06T02:21:07.0672793Z     |
2025-06-06T02:21:07.0673262Z 315 |             if isinstance(search_result, list):
2025-06-06T02:21:07.0673877Z 316 |                 return search_result
2025-06-06T02:21:07.0674366Z 317 |             return []
2025-06-06T02:21:07.0674778Z     |             ^^^^^^^^^ TRY300
2025-06-06T02:21:07.0675254Z 318 |         except Exception:
2025-06-06T02:21:07.0675873Z 319 |             logger.exception("Error retrieving memories")
2025-06-06T02:21:07.0676390Z     |
2025-06-06T02:21:07.0676552Z 
2025-06-06T02:21:07.0677249Z agent_team/mem0_enhanced_agents.py:256:13: TRY300 Consider moving this statement to an `else` block
2025-06-06T02:21:07.0678176Z     |
2025-06-06T02:21:07.0678666Z 254 |             if isinstance(search_result, list):
2025-06-06T02:21:07.0679267Z 255 |                 return search_result
2025-06-06T02:21:07.0679733Z 256 |             return []
2025-06-06T02:21:07.0680135Z     |             ^^^^^^^^^ TRY300
2025-06-06T02:21:07.0680612Z 257 |         except Exception:
2025-06-06T02:21:07.0681228Z 258 |             logger.exception("Error retrieving memories")
2025-06-06T02:21:07.0681734Z     |
2025-06-06T02:21:07.0681898Z 
2025-06-06T02:21:07.0682802Z ai_models/adapters/mcp_adapter.py:25:17: D401 First line of docstring should be in imperative mood: "Placeholder connect method."
2025-06-06T02:21:07.0683702Z    |
2025-06-06T02:21:07.0684135Z 24 |             def connect(self) -> None:
2025-06-06T02:21:07.0685933Z 25 |                 """Placeholder connect method."""
2025-06-06T02:21:07.0686534Z    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ D401
2025-06-06T02:21:07.0686976Z 26 |
2025-06-06T02:21:07.0687752Z 27 |             def send_message(self, message: str) -> str:
2025-06-06T02:21:07.0688471Z    |
2025-06-06T02:21:07.0688636Z 
2025-06-06T02:21:07.0689198Z ai_models/adapters/mcp_adapter.py:27:36: ARG002 Unused method argument: `message`
2025-06-06T02:21:07.0689848Z    |
2025-06-06T02:21:07.0690312Z 25 |                 """Placeholder connect method."""
2025-06-06T02:21:07.0690771Z 26 |
2025-06-06T02:21:07.0691266Z 27 |             def send_message(self, message: str) -> str:
2025-06-06T02:21:07.0691842Z    |                                    ^^^^^^^ ARG002
2025-06-06T02:21:07.0692465Z 28 |                 """Placeholder send_message method."""
2025-06-06T02:21:07.0693014Z 29 |                 return ""
2025-06-06T02:21:07.0693373Z    |
2025-06-06T02:21:07.0693547Z 
2025-06-06T02:21:07.0694499Z ai_models/adapters/mcp_adapter.py:28:17: D401 First line of docstring should be in imperative mood: "Placeholder send_message method."
2025-06-06T02:21:07.0695414Z    |
2025-06-06T02:21:07.0695916Z 27 |             def send_message(self, message: str) -> str:
2025-06-06T02:21:07.0696583Z 28 |                 """Placeholder send_message method."""
2025-06-06T02:21:07.0697166Z    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ D401
2025-06-06T02:21:07.0697685Z 29 |                 return ""
2025-06-06T02:21:07.0698205Z    |
2025-06-06T02:21:07.0698370Z 
2025-06-06T02:21:07.0699295Z ai_models/adapters/mcp_adapter.py:32:17: D401 First line of docstring should be in imperative mood: "Placeholder disconnect method."
2025-06-06T02:21:07.0700215Z    |
2025-06-06T02:21:07.0700648Z 31 |             def disconnect(self) -> None:
2025-06-06T02:21:07.0701278Z 32 |                 """Placeholder disconnect method."""
2025-06-06T02:21:07.0701848Z    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ D401
2025-06-06T02:21:07.0702292Z    |
2025-06-06T02:21:07.0702452Z 
2025-06-06T02:21:07.0703073Z ai_models/artist_agent.py:70:9: C901 `extract_relevant_expression` is too complex (11 > 10)
2025-06-06T02:21:07.0703756Z    |
2025-06-06T02:21:07.0704087Z 68 |         return ""
2025-06-06T02:21:07.0704403Z 69 |
2025-06-06T02:21:07.0705096Z 70 |     def extract_relevant_expression(self, prompt: str, tool_name: str) -> str:
2025-06-06T02:21:07.0705819Z    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ C901
2025-06-06T02:21:07.0706232Z 71 |         """
2025-06-06T02:21:07.0706904Z 72 |         Extract the relevant expression from the prompt based on the tool.
2025-06-06T02:21:07.0707510Z    |
2025-06-06T02:21:07.0707677Z 
2025-06-06T02:21:07.0708331Z ai_models/artist_agent.py:70:9: PLR0911 Too many return statements (8 > 6)
2025-06-06T02:21:07.0708937Z    |
2025-06-06T02:21:07.0709242Z 68 |         return ""
2025-06-06T02:21:07.0709571Z 69 |
2025-06-06T02:21:07.0710252Z 70 |     def extract_relevant_expression(self, prompt: str, tool_name: str) -> str:
2025-06-06T02:21:07.0710993Z    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLR0911
2025-06-06T02:21:07.0711411Z 71 |         """
2025-06-06T02:21:07.0712085Z 72 |         Extract the relevant expression from the prompt based on the tool.
2025-06-06T02:21:07.0712685Z    |
2025-06-06T02:21:07.0712860Z 
2025-06-06T02:21:07.0713546Z ai_models/artist_agent.py:104:21: PLW2901 `for` loop variable `part` overwritten by assignment target
2025-06-06T02:21:07.0714278Z     |
2025-06-06T02:21:07.0714812Z 102 |                 # Take the longest match that contains operators
2025-06-06T02:21:07.0715603Z 103 |                 for part in sorted(math_parts, key=len, reverse=True):
2025-06-06T02:21:07.0716284Z 104 |                     part = part.strip()
2025-06-06T02:21:07.0716796Z     |                     ^^^^ PLW2901
2025-06-06T02:21:07.0717297Z 105 |                     if (
2025-06-06T02:21:07.0718101Z 106 |                         any(op in part for op in ["+", "-", "*", "/", "%"])
2025-06-06T02:21:07.0718849Z     |
2025-06-06T02:21:07.0719012Z 
2025-06-06T02:21:07.0719780Z ai_models/artist_rl/test_artist_rl.py:17:9: ANN201 Missing return type annotation for public function `setUp`
2025-06-06T02:21:07.0720760Z    |
2025-06-06T02:21:07.0721201Z 15 |     """Unit tests for ArtistRLEnv."""
2025-06-06T02:21:07.0721641Z 16 |
2025-06-06T02:21:07.0721965Z 17 |     def setUp(self):
2025-06-06T02:21:07.0722337Z    |         ^^^^^ ANN201
2025-06-06T02:21:07.0722799Z 18 |         self.env = ArtistRLEnv()
2025-06-06T02:21:07.0723225Z    |
2025-06-06T02:21:07.0723629Z    = help: Add return type annotation: `None`
2025-06-06T02:21:07.0723972Z 
2025-06-06T02:21:07.0724555Z ai_models/artist_rl/test_artist_rl.py:17:9: D102 Missing docstring in public method
2025-06-06T02:21:07.0725351Z    |
2025-06-06T02:21:07.0725801Z 15 |     """Unit tests for ArtistRLEnv."""
2025-06-06T02:21:07.0726239Z 16 |
2025-06-06T02:21:07.0726564Z 17 |     def setUp(self):
2025-06-06T02:21:07.0726932Z    |         ^^^^^ D102
2025-06-06T02:21:07.0727385Z 18 |         self.env = ArtistRLEnv()
2025-06-06T02:21:07.0727786Z    |
2025-06-06T02:21:07.0728127Z 
2025-06-06T02:21:07.0728905Z ai_models/artist_rl/test_artist_rl.py:20:9: ANN201 Missing return type annotation for public function `tearDown`
2025-06-06T02:21:07.0729732Z    |
2025-06-06T02:21:07.0730124Z 18 |         self.env = ArtistRLEnv()
2025-06-06T02:21:07.0730527Z 19 |
2025-06-06T02:21:07.0730851Z 20 |     def tearDown(self):
2025-06-06T02:21:07.0731226Z    |         ^^^^^^^^ ANN201
2025-06-06T02:21:07.0731629Z 21 |         self.env.close()
2025-06-06T02:21:07.0732037Z    |
2025-06-06T02:21:07.0732433Z    = help: Add return type annotation: `None`
2025-06-06T02:21:07.0732771Z 
2025-06-06T02:21:07.0733330Z ai_models/artist_rl/test_artist_rl.py:20:9: D102 Missing docstring in public method
2025-06-06T02:21:07.0734013Z    |
2025-06-06T02:21:07.0734398Z 18 |         self.env = ArtistRLEnv()
2025-06-06T02:21:07.0734812Z 19 |
2025-06-06T02:21:07.0735137Z 20 |     def tearDown(self):
2025-06-06T02:21:07.0735533Z    |         ^^^^^^^^ D102
2025-06-06T02:21:07.0735938Z 21 |         self.env.close()
2025-06-06T02:21:07.0736307Z    |
2025-06-06T02:21:07.0736464Z 
2025-06-06T02:21:07.0737439Z ai_models/artist_rl/test_artist_rl.py:23:9: ANN201 Missing return type annotation for public function `test_reset_returns_observation`
2025-06-06T02:21:07.0738552Z    |
2025-06-06T02:21:07.0738898Z 21 |         self.env.close()
2025-06-06T02:21:07.0739273Z 22 |
2025-06-06T02:21:07.0739726Z 23 |     def test_reset_returns_observation(self):
2025-06-06T02:21:07.0740296Z    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ANN201
2025-06-06T02:21:07.0740970Z 24 |         """reset() should return an initial observation."""
2025-06-06T02:21:07.0741588Z 25 |         obs = self.env.reset()
2025-06-06T02:21:07.0742001Z    |
2025-06-06T02:21:07.0742400Z    = help: Add return type annotation: `None`
2025-06-06T02:21:07.0742744Z 
2025-06-06T02:21:07.0743551Z ai_models/artist_rl/test_artist_rl.py:26:9: PT009 Use a regular `assert` instead of unittest-style `assertIsNotNone`
2025-06-06T02:21:07.0744427Z    |
2025-06-06T02:21:07.0744942Z 24 |         """reset() should return an initial observation."""
2025-06-06T02:21:07.0745552Z 25 |         obs = self.env.reset()
2025-06-06T02:21:07.0746090Z 26 |         self.assertIsNotNone(obs)
2025-06-06T02:21:07.0746582Z    |         ^^^^^^^^^^^^^^^^^^^^ PT009
2025-06-06T02:21:07.0746992Z 27 |
2025-06-06T02:21:07.0747416Z 28 |     def test_step_returns_tuple(self):
2025-06-06T02:21:07.0748005Z    |
2025-06-06T02:21:07.0748474Z    = help: Replace `assertIsNotNone(...)` with `assert ...`
2025-06-06T02:21:07.0748877Z 
2025-06-06T02:21:07.0749786Z ai_models/artist_rl/test_artist_rl.py:28:9: ANN201 Missing return type annotation for public function `test_step_returns_tuple`
2025-06-06T02:21:07.0750684Z    |
2025-06-06T02:21:07.0751080Z 26 |         self.assertIsNotNone(obs)
2025-06-06T02:21:07.0751509Z 27 |
2025-06-06T02:21:07.0751929Z 28 |     def test_step_returns_tuple(self):
2025-06-06T02:21:07.0752698Z    |         ^^^^^^^^^^^^^^^^^^^^^^^ ANN201
2025-06-06T02:21:07.0753362Z 29 |         """step() should return (obs, reward, done, info)."""
2025-06-06T02:21:07.0753921Z 30 |         self.env.reset()
2025-06-06T02:21:07.0754458Z    |
2025-06-06T02:21:07.0754842Z    = help: Add return type annotation: `None`
2025-06-06T02:21:07.0755161Z 
2025-06-06T02:21:07.0755896Z ai_models/artist_rl/test_artist_rl.py:33:9: PT009 Use a regular `assert` instead of unittest-style `assertEqual`
2025-06-06T02:21:07.0756699Z    |
2025-06-06T02:21:07.0757156Z 31 |         action = self.env.action_space.sample()
2025-06-06T02:21:07.0757760Z 32 |         result = self.env.step(action)
2025-06-06T02:21:07.0758542Z 33 |         self.assertEqual(len(result), 4)
2025-06-06T02:21:07.0759034Z    |         ^^^^^^^^^^^^^^^^ PT009
2025-06-06T02:21:07.0759552Z 34 |         obs, reward, done, info = result
2025-06-06T02:21:07.0760137Z 35 |         self.assertIsInstance(reward, float)
2025-06-06T02:21:07.0760579Z    |
2025-06-06T02:21:07.0761004Z    = help: Replace `assertEqual(...)` with `assert ...`
2025-06-06T02:21:07.0761369Z 
2025-06-06T02:21:07.0762165Z ai_models/artist_rl/test_artist_rl.py:35:9: PT009 Use a regular `assert` instead of unittest-style `assertIsInstance`
2025-06-06T02:21:07.0762975Z    |
2025-06-06T02:21:07.0763397Z 33 |         self.assertEqual(len(result), 4)
2025-06-06T02:21:07.0763933Z 34 |         obs, reward, done, info = result
2025-06-06T02:21:07.0764469Z 35 |         self.assertIsInstance(reward, float)
2025-06-06T02:21:07.0764943Z    |         ^^^^^^^^^^^^^^^^^^^^^ PT009
2025-06-06T02:21:07.0765452Z 36 |         self.assertIsInstance(done, bool)
2025-06-06T02:21:07.0765997Z 37 |         self.assertIsInstance(info, dict)
2025-06-06T02:21:07.0766393Z    |
2025-06-06T02:21:07.0766811Z    = help: Replace `assertIsInstance(...)` with `assert ...`
2025-06-06T02:21:07.0767168Z 
2025-06-06T02:21:07.0768109Z ai_models/artist_rl/test_artist_rl.py:36:9: PT009 Use a regular `assert` instead of unittest-style `assertIsInstance`
2025-06-06T02:21:07.0768899Z    |
2025-06-06T02:21:07.0769272Z 34 |         obs, reward, done, info = result
2025-06-06T02:21:07.0769871Z 35 |         self.assertIsInstance(reward, float)
2025-06-06T02:21:07.0770480Z 36 |         self.assertIsInstance(done, bool)
2025-06-06T02:21:07.0770985Z    |         ^^^^^^^^^^^^^^^^^^^^^ PT009
2025-06-06T02:21:07.0771531Z 37 |         self.assertIsInstance(info, dict)
2025-06-06T02:21:07.0771965Z    |
2025-06-06T02:21:07.0772415Z    = help: Replace `assertIsInstance(...)` with `assert ...`
2025-06-06T02:21:07.0772804Z 
2025-06-06T02:21:07.0773563Z ai_models/artist_rl/test_artist_rl.py:37:9: PT009 Use a regular `assert` instead of unittest-style `assertIsInstance`
2025-06-06T02:21:07.0774370Z    |
2025-06-06T02:21:07.0774800Z 35 |         self.assertIsInstance(reward, float)
2025-06-06T02:21:07.0775338Z 36 |         self.assertIsInstance(done, bool)
2025-06-06T02:21:07.0775866Z 37 |         self.assertIsInstance(info, dict)
2025-06-06T02:21:07.0776318Z    |         ^^^^^^^^^^^^^^^^^^^^^ PT009
2025-06-06T02:21:07.0776691Z 38 |
2025-06-06T02:21:07.0777091Z 39 |     def test_minimal_train_test_cycle(self):
2025-06-06T02:21:07.0777505Z    |
2025-06-06T02:21:07.0778085Z    = help: Replace `assertIsInstance(...)` with `assert ...`
2025-06-06T02:21:07.0778456Z 
2025-06-06T02:21:07.0779411Z ai_models/artist_rl/test_artist_rl.py:39:9: ANN201 Missing return type annotation for public function `test_minimal_train_test_cycle`
2025-06-06T02:21:07.0779924Z    |
2025-06-06T02:21:07.0780178Z 37 |         self.assertIsInstance(info, dict)
2025-06-06T02:21:07.0780428Z 38 |
2025-06-06T02:21:07.0780675Z 39 |     def test_minimal_train_test_cycle(self):
2025-06-06T02:21:07.0780974Z    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ANN201
2025-06-06T02:21:07.0781638Z 40 |         """Minimal train/test loop: run env for a few steps."""
2025-06-06T02:21:07.0782251Z 41 |         obs = self.env.reset()
2025-06-06T02:21:07.0782641Z    |
2025-06-06T02:21:07.0783018Z    = help: Add return type annotation: `None`
2025-06-06T02:21:07.0783431Z 
2025-06-06T02:21:07.0783879Z ai_models/artist_rl/test_artist_rl.py:49:9: PT009 Use a regular `assert` instead of unittest-style `assertIsInstance`
2025-06-06T02:21:07.0784450Z    |
2025-06-06T02:21:07.0784641Z 47 |             if done:
2025-06-06T02:21:07.0784863Z 48 |                 break
2025-06-06T02:21:07.0785178Z 49 |         self.assertIsInstance(total_reward, float)
2025-06-06T02:21:07.0785505Z    |         ^^^^^^^^^^^^^^^^^^^^^ PT009
2025-06-06T02:21:07.0785747Z    |
2025-06-06T02:21:07.0786017Z    = help: Replace `assertIsInstance(...)` with `assert ...`
2025-06-06T02:21:07.0786237Z 
2025-06-06T02:21:07.0786589Z artist_experiments/multi_api_orchestration.py:53:21: G004 Logging statement uses f-string
2025-06-06T02:21:07.0786984Z    |
2025-06-06T02:21:07.0787145Z 51 |         """
2025-06-06T02:21:07.0787406Z 52 |         # This is a mock implementation
2025-06-06T02:21:07.0788068Z 53 |         logger.info(f"Searching for products with query: {query}, limit: {limit}")
2025-06-06T02:21:07.0788537Z    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T02:21:07.0788803Z 54 |
2025-06-06T02:21:07.0789017Z 55 |         # Simulate API call
2025-06-06T02:21:07.0789244Z    |
2025-06-06T02:21:07.0789333Z 
2025-06-06T02:21:07.0789678Z artist_experiments/multi_api_orchestration.py:78:21: G004 Logging statement uses f-string
2025-06-06T02:21:07.0790068Z    |
2025-06-06T02:21:07.0790227Z 76 |         """
2025-06-06T02:21:07.0790475Z 77 |         # This is a mock implementation
2025-06-06T02:21:07.0790895Z 78 |         logger.info(f"Getting market trends for category: {category}")
2025-06-06T02:21:07.0791292Z    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T02:21:07.0791545Z 79 |
2025-06-06T02:21:07.0791756Z 80 |         # Simulate API call
2025-06-06T02:21:07.0791980Z    |
2025-06-06T02:21:07.0792076Z 
2025-06-06T02:21:07.0792427Z artist_experiments/multi_api_orchestration.py:107:21: G004 Logging statement uses f-string
2025-06-06T02:21:07.0792829Z     |
2025-06-06T02:21:07.0793006Z 105 |         """
2025-06-06T02:21:07.0793269Z 106 |         # This is a mock implementation
2025-06-06T02:21:07.0793717Z 107 |         logger.info(f"Analyzing competitors for company: {company_name}")
2025-06-06T02:21:07.0794130Z     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T02:21:07.0794384Z 108 |
2025-06-06T02:21:07.0794596Z 109 |         # Simulate API call
2025-06-06T02:21:07.0794817Z     |
2025-06-06T02:21:07.0794911Z 
2025-06-06T02:21:07.0795203Z artist_experiments/run_artist.py:86:18: S104 Possible binding to all interfaces
2025-06-06T02:21:07.0795559Z    |
2025-06-06T02:21:07.0795769Z 84 | if __name__ == "__main__":
2025-06-06T02:21:07.0796082Z 85 |     port = int(os.environ.get("PORT", 5000))
2025-06-06T02:21:07.0796457Z 86 |     app.run(host="0.0.0.0", port=port, debug=True)
2025-06-06T02:21:07.0796761Z    |                  ^^^^^^^^^ S104
2025-06-06T02:21:07.0796988Z    |
2025-06-06T02:21:07.0797077Z 
2025-06-06T02:21:07.0797395Z artist_experiments/run_artist.py:86:40: S201 Use of `debug=True` in Flask app detected
2025-06-06T02:21:07.0797762Z    |
2025-06-06T02:21:07.0798134Z 84 | if __name__ == "__main__":
2025-06-06T02:21:07.0798442Z 85 |     port = int(os.environ.get("PORT", 5000))
2025-06-06T02:21:07.0798810Z 86 |     app.run(host="0.0.0.0", port=port, debug=True)
2025-06-06T02:21:07.0799139Z    |                                        ^^^^^^^^^^ S201
2025-06-06T02:21:07.0799388Z    |
2025-06-06T02:21:07.0799484Z 
2025-06-06T02:21:07.0799792Z artist_experiments/test_artist_experiments.py:27:9: S101 Use of `assert` detected
2025-06-06T02:21:07.0800162Z    |
2025-06-06T02:21:07.0800437Z 25 |         math_tool = math_problem_solving.MathTool()
2025-06-06T02:21:07.0800820Z 26 |         result = math_tool.solve_equation("x = 2 + 3")
2025-06-06T02:21:07.0801158Z 27 |         assert result == "5"  # nosec
2025-06-06T02:21:07.0801411Z    |         ^^^^^^ S101
2025-06-06T02:21:07.0801735Z 28 |
2025-06-06T02:21:07.0801990Z 29 |     def test_factor_expression(self) -> None:
2025-06-06T02:21:07.0802251Z    |
2025-06-06T02:21:07.0802344Z 
2025-06-06T02:21:07.0802757Z artist_experiments/test_artist_experiments.py:33:9: S101 Use of `assert` detected
2025-06-06T02:21:07.0803132Z    |
2025-06-06T02:21:07.0803396Z 31 |         math_tool = math_problem_solving.MathTool()
2025-06-06T02:21:07.0803804Z 32 |         result = math_tool.factor_expression("x**2 - 5*x + 6")
2025-06-06T02:21:07.0804190Z 33 |         assert result == "(x - 2)*(x - 3)"  # nosec
2025-06-06T02:21:07.0804460Z    |         ^^^^^^ S101
2025-06-06T02:21:07.0804649Z 34 |
2025-06-06T02:21:07.0804904Z 35 |     def test_expand_expression(self) -> None:
2025-06-06T02:21:07.0805158Z    |
2025-06-06T02:21:07.0805254Z 
2025-06-06T02:21:07.0805559Z artist_experiments/test_artist_experiments.py:39:9: S101 Use of `assert` detected
2025-06-06T02:21:07.0805932Z    |
2025-06-06T02:21:07.0806195Z 37 |         math_tool = math_problem_solving.MathTool()
2025-06-06T02:21:07.0806613Z 38 |         result = math_tool.expand_expression("(x + 2)*(x - 3)")
2025-06-06T02:21:07.0807004Z 39 |         assert result == "x**2 - x - 6"  # nosec
2025-06-06T02:21:07.0807275Z    |         ^^^^^^ S101
2025-06-06T02:21:07.0807468Z 40 |
2025-06-06T02:21:07.0807755Z 41 |     @patch("ai_models.artist_agent.ArtistAgent.run")
2025-06-06T02:21:07.0808193Z    |
2025-06-06T02:21:07.0808284Z 
2025-06-06T02:21:07.0808602Z artist_experiments/test_artist_experiments.py:46:9: S101 Use of `assert` detected
2025-06-06T02:21:07.0808972Z    |
2025-06-06T02:21:07.0809195Z 44 |         mock_run.return_value = "5"
2025-06-06T02:21:07.0809593Z 45 |         result = math_problem_solving.run_experiment("Solve 2 + 3")
2025-06-06T02:21:07.0809965Z 46 |         assert result == "5"  # nosec
2025-06-06T02:21:07.0810216Z    |         ^^^^^^ S101
2025-06-06T02:21:07.0810529Z 47 |         mock_run.assert_called_once_with("Solve 2 + 3")
2025-06-06T02:21:07.0810807Z    |
2025-06-06T02:21:07.0810894Z 
2025-06-06T02:21:07.0811207Z artist_experiments/test_artist_experiments.py:58:9: S101 Use of `assert` detected
2025-06-06T02:21:07.0811572Z    |
2025-06-06T02:21:07.0811839Z 56 |         result = api_tool.search_products("test", 2)
2025-06-06T02:21:07.0812187Z 57 |         result_dict = json.loads(result)
2025-06-06T02:21:07.0812605Z 58 |         assert len(result_dict["results"]) == 2  # noqa: PLR2004  # nosec
2025-06-06T02:21:07.0812924Z    |         ^^^^^^ S101
2025-06-06T02:21:07.0813306Z 59 |         assert result_dict["results"][0]["name"] == "test Product 1"  # nosec
2025-06-06T02:21:07.0813630Z    |
2025-06-06T02:21:07.0813721Z 
2025-06-06T02:21:07.0814022Z artist_experiments/test_artist_experiments.py:59:9: S101 Use of `assert` detected
2025-06-06T02:21:07.0814384Z    |
2025-06-06T02:21:07.0814625Z 57 |         result_dict = json.loads(result)
2025-06-06T02:21:07.0815042Z 58 |         assert len(result_dict["results"]) == 2  # noqa: PLR2004  # nosec
2025-06-06T02:21:07.0815544Z 59 |         assert result_dict["results"][0]["name"] == "test Product 1"  # nosec
2025-06-06T02:21:07.0815876Z    |         ^^^^^^ S101
2025-06-06T02:21:07.0816074Z 60 |
2025-06-06T02:21:07.0816333Z 61 |     def test_get_market_trends(self) -> None:
2025-06-06T02:21:07.0816591Z    |
2025-06-06T02:21:07.0816686Z 
2025-06-06T02:21:07.0816994Z artist_experiments/test_artist_experiments.py:66:9: S101 Use of `assert` detected
2025-06-06T02:21:07.0817366Z    |
2025-06-06T02:21:07.0817656Z 64 |         result = api_tool.get_market_trends("electronics")
2025-06-06T02:21:07.0818266Z 65 |         result_dict = json.loads(result)
2025-06-06T02:21:07.0818675Z 66 |         assert result_dict["category"] == "electronics"  # nosec
2025-06-06T02:21:07.0818982Z    |         ^^^^^^ S101
2025-06-06T02:21:07.0819289Z 67 |         assert "growth_rate" in result_dict  # nosec
2025-06-06T02:21:07.0819554Z    |
2025-06-06T02:21:07.0819646Z 
2025-06-06T02:21:07.0819956Z artist_experiments/test_artist_experiments.py:67:9: S101 Use of `assert` detected
2025-06-06T02:21:07.0820472Z    |
2025-06-06T02:21:07.0820707Z 65 |         result_dict = json.loads(result)
2025-06-06T02:21:07.0821197Z 66 |         assert result_dict["category"] == "electronics"  # nosec
2025-06-06T02:21:07.0821599Z 67 |         assert "growth_rate" in result_dict  # nosec
2025-06-06T02:21:07.0821871Z    |         ^^^^^^ S101
2025-06-06T02:21:07.0822065Z 68 |
2025-06-06T02:21:07.0822326Z 69 |     def test_analyze_competitors(self) -> None:
2025-06-06T02:21:07.0822588Z    |
2025-06-06T02:21:07.0822676Z 
2025-06-06T02:21:07.0822984Z artist_experiments/test_artist_experiments.py:74:9: S101 Use of `assert` detected
2025-06-06T02:21:07.0823351Z    |
2025-06-06T02:21:07.0823652Z 72 |         result = api_tool.analyze_competitors("Test Company")
2025-06-06T02:21:07.0824024Z 73 |         result_dict = json.loads(result)
2025-06-06T02:21:07.0824413Z 74 |         assert result_dict["company"] == "Test Company"  # nosec
2025-06-06T02:21:07.0824712Z    |         ^^^^^^ S101
2025-06-06T02:21:07.0825036Z 75 |         assert "direct_competitors" in result_dict  # nosec
2025-06-06T02:21:07.0825319Z    |
2025-06-06T02:21:07.0825413Z 
2025-06-06T02:21:07.0825724Z artist_experiments/test_artist_experiments.py:75:9: S101 Use of `assert` detected
2025-06-06T02:21:07.0826086Z    |
2025-06-06T02:21:07.0826318Z 73 |         result_dict = json.loads(result)
2025-06-06T02:21:07.0826708Z 74 |         assert result_dict["company"] == "Test Company"  # nosec
2025-06-06T02:21:07.0827129Z 75 |         assert "direct_competitors" in result_dict  # nosec
2025-06-06T02:21:07.0827421Z    |         ^^^^^^ S101
2025-06-06T02:21:07.0827612Z 76 |
2025-06-06T02:21:07.0828071Z 77 |     @patch("ai_models.artist_agent.ArtistAgent.run")
2025-06-06T02:21:07.0828363Z    |
2025-06-06T02:21:07.0828453Z 
2025-06-06T02:21:07.0828755Z artist_experiments/test_artist_experiments.py:83:9: S101 Use of `assert` detected
2025-06-06T02:21:07.0829119Z    |
2025-06-06T02:21:07.0829364Z 81 |         mock_run.return_value = mock_result
2025-06-06T02:21:07.0829846Z 82 |         result = multi_api_orchestration.run_experiment("Search for test products")
2025-06-06T02:21:07.0830289Z 83 |         assert result == mock_result  # nosec
2025-06-06T02:21:07.0830555Z    |         ^^^^^^ S101
2025-06-06T02:21:07.0830915Z 84 |         mock_run.assert_called_once_with("Search for test products")
2025-06-06T02:21:07.0831224Z    |
2025-06-06T02:21:07.0831312Z 
2025-06-06T02:21:07.0831690Z common_utils/logging/__init__.py:1:1: A005 Module `logging` shadows a Python standard-library module
2025-06-06T02:21:07.0832387Z common_utils/secrets/__init__.py:1:1: A005 Module `secrets` shadows a Python standard-library module
2025-06-06T02:21:07.0833036Z common_utils/tooling.py:222:9: TRY300 Consider moving this statement to an `else` block
2025-06-06T02:21:07.0833407Z     |
2025-06-06T02:21:07.0833863Z 220 | …     char_count = len(text)
2025-06-06T02:21:07.0834106Z 221 | …
2025-06-06T02:21:07.0834939Z 222 | …     return f"Sentiment: {sentiment} | Words: {word_count} | Characters: {char_count} | Positive indicators: {positive_count} | Negative indicators: {negative_count}"
2025-06-06T02:21:07.0835712Z     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
2025-06-06T02:21:07.0836009Z 223 | …
2025-06-06T02:21:07.0836259Z 224 | … except Exception as e:
2025-06-06T02:21:07.0836555Z     |
2025-06-06T02:21:07.0836654Z 
2025-06-06T02:21:07.0836954Z common_utils/tooling.py:224:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.0837305Z     |
2025-06-06T02:21:07.0838446Z 222 |         return f"Sentiment: {sentiment} | Words: {word_count} | Characters: {char_count} | Positive indicators: {positive_count} | Ne…
2025-06-06T02:21:07.0838968Z 223 |
2025-06-06T02:21:07.0839193Z 224 |     except Exception as e:
2025-06-06T02:21:07.0839462Z     |            ^^^^^^^^^ BLE001
2025-06-06T02:21:07.0839775Z 225 |         return f"Error analyzing text: {e}"
2025-06-06T02:21:07.0840198Z     |
2025-06-06T02:21:07.0840290Z 
2025-06-06T02:21:07.0840595Z convert_bandit_to_sarif.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.0841068Z   |
2025-06-06T02:21:07.0841269Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.0841512Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.0841731Z 2 | """
2025-06-06T02:21:07.0841983Z 3 | Convert Bandit JSON output to SARIF format.
2025-06-06T02:21:07.0842241Z   |
2025-06-06T02:21:07.0842332Z 
2025-06-06T02:21:07.0842622Z create_bandit_files.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.0842970Z   |
2025-06-06T02:21:07.0843156Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.0843392Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.0843601Z 2 | """
2025-06-06T02:21:07.0843932Z 3 | Create Bandit configuration files for GitHub Actions workflows.
2025-06-06T02:21:07.0844253Z   |
2025-06-06T02:21:07.0844346Z 
2025-06-06T02:21:07.0844640Z create_empty_sarif.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.0844989Z   |
2025-06-06T02:21:07.0845176Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.0845413Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.0845637Z 2 | """
2025-06-06T02:21:07.0845930Z 3 | Create empty SARIF files for GitHub Advanced Security.
2025-06-06T02:21:07.0846217Z   |
2025-06-06T02:21:07.0846304Z 
2025-06-06T02:21:07.0846617Z demo_vector_rag.py:1:1: D205 1 blank line required between summary line and description
2025-06-06T02:21:07.0846974Z    |
2025-06-06T02:21:07.0847137Z  1 | / """
2025-06-06T02:21:07.0847484Z  2 | | Demo: Vector Database + RAG (Retrieval-Augmented Generation) using ChromaDB
2025-06-06T02:21:07.0848199Z  3 | | with a Unified Schema and Best Practices for Interoperability.
2025-06-06T02:21:07.0848519Z  4 | |
2025-06-06T02:21:07.0848695Z  5 | | Requirements:
2025-06-06T02:21:07.0848989Z  6 | |  1. uv pip install chromadb sentence-transformers
2025-06-06T02:21:07.0849318Z  7 | |  2. python demo_vector_rag.py
2025-06-06T02:21:07.0849549Z  8 | |
2025-06-06T02:21:07.0849755Z  9 | | This script demonstrates:
2025-06-06T02:21:07.0850198Z 10 | | - Unified schema for vector DB (id, content, user_id, metadata, embedding)
2025-06-06T02:21:07.0850667Z 11 | | - Canonicalization and deduplication before upsert
2025-06-06T02:21:07.0851098Z 12 | | - Context propagation and metadata filtering on retrieval
2025-06-06T02:21:07.0851504Z 13 | | - Clear comments and test block for reference
2025-06-06T02:21:07.0851769Z 14 | |
2025-06-06T02:21:07.0852049Z 15 | | For more details, see README_mem0_integration.md.
2025-06-06T02:21:07.0852323Z 16 | | """
2025-06-06T02:21:07.0852494Z    | |___^ D205
2025-06-06T02:21:07.0852670Z 17 |
2025-06-06T02:21:07.0852897Z 18 |   from __future__ import annotations
2025-06-06T02:21:07.0853140Z    |
2025-06-06T02:21:07.0853341Z    = help: Insert single blank line
2025-06-06T02:21:07.0853512Z 
2025-06-06T02:21:07.0853819Z demo_vector_rag.py:47:5: D205 1 blank line required between summary line and description
2025-06-06T02:21:07.0854186Z    |
2025-06-06T02:21:07.0854437Z 46 |   def canonicalize_text(text: str) -> str:
2025-06-06T02:21:07.0854701Z 47 | /     """
2025-06-06T02:21:07.0855015Z 48 | |     Normalize and canonicalize text for deduplication.
2025-06-06T02:21:07.0855531Z 49 | |     - Lowercase, strip, remove extra whitespace, apply NFC unicode normalization.
2025-06-06T02:21:07.0855893Z 50 | |     """
2025-06-06T02:21:07.0856076Z    | |_______^ D205
2025-06-06T02:21:07.0856418Z 51 |       text = unicodedata.normalize("NFC", text.lower().strip())
2025-06-06T02:21:07.0856789Z 52 |       text = " ".join(text.split())
2025-06-06T02:21:07.0857027Z    |
2025-06-06T02:21:07.0857223Z    = help: Insert single blank line
2025-06-06T02:21:07.0857392Z 
2025-06-06T02:21:07.0857720Z demo_vector_rag.py:53:12: RET504 Unnecessary assignment to `text` before `return` statement
2025-06-06T02:21:07.0858273Z    |
2025-06-06T02:21:07.0858625Z 51 |     text = unicodedata.normalize("NFC", text.lower().strip())
2025-06-06T02:21:07.0859135Z 52 |     text = " ".join(text.split())
2025-06-06T02:21:07.0859392Z 53 |     return text
2025-06-06T02:21:07.0859593Z    |            ^^^^ RET504
2025-06-06T02:21:07.0859938Z    |
2025-06-06T02:21:07.0860157Z    = help: Remove unnecessary assignment
2025-06-06T02:21:07.0860335Z 
2025-06-06T02:21:07.0860654Z demo_vector_rag.py:57:5: D205 1 blank line required between summary line and description
2025-06-06T02:21:07.0861013Z    |
2025-06-06T02:21:07.0861375Z 56 |   def canonical_doc_hash(user_id: str, content: str, metadata: dict) -> str:
2025-06-06T02:21:07.0861718Z 57 | /     """
2025-06-06T02:21:07.0861995Z 58 | |     Create a canonical hash for deduplication.
2025-06-06T02:21:07.0862467Z 59 | |     Uses user_id, canonicalized content, and metadata['source'] if present.
2025-06-06T02:21:07.0862805Z 60 | |     """
2025-06-06T02:21:07.0862984Z    | |_______^ D205
2025-06-06T02:21:07.0863264Z 61 |       content_canon = canonicalize_text(content)
2025-06-06T02:21:07.0863613Z 62 |       source = metadata.get("source", "")
2025-06-06T02:21:07.0863864Z    |
2025-06-06T02:21:07.0864062Z    = help: Insert single blank line
2025-06-06T02:21:07.0864223Z 
2025-06-06T02:21:07.0864507Z demo_vector_rag.py:71:25: UP006 Use `list` instead of `List` for type annotation
2025-06-06T02:21:07.0864845Z    |
2025-06-06T02:21:07.0865066Z 69 |     user_id: Optional[str] = None,
2025-06-06T02:21:07.0865399Z 70 |     default_metadata: Optional[dict] = None,
2025-06-06T02:21:07.0865746Z 71 |     embedding: Optional[List[float]] = None,
2025-06-06T02:21:07.0866039Z    |                         ^^^^ UP006
2025-06-06T02:21:07.0866274Z 72 | ) -> dict:
2025-06-06T02:21:07.0866454Z 73 |     """
2025-06-06T02:21:07.0866623Z    |
2025-06-06T02:21:07.0866820Z    = help: Replace with `list`
2025-06-06T02:21:07.0866973Z 
2025-06-06T02:21:07.0867285Z demo_vector_rag.py:73:5: D205 1 blank line required between summary line and description
2025-06-06T02:21:07.0867646Z    |
2025-06-06T02:21:07.0868097Z 71 |       embedding: Optional[List[float]] = None,
2025-06-06T02:21:07.0868386Z 72 |   ) -> dict:
2025-06-06T02:21:07.0868570Z 73 | /     """
2025-06-06T02:21:07.0868865Z 74 | |     Ensure the document follows the unified schema.
2025-06-06T02:21:07.0869248Z 75 | |     If fields are missing, fill with defaults.
2025-06-06T02:21:07.0869510Z 76 | |     """
2025-06-06T02:21:07.0869689Z    | |_______^ D205
2025-06-06T02:21:07.0869890Z 77 |       doc_out = {}
2025-06-06T02:21:07.0870111Z 78 |       doc_out["id"] = (
2025-06-06T02:21:07.0870324Z    |
2025-06-06T02:21:07.0870521Z    = help: Insert single blank line
2025-06-06T02:21:07.0870689Z 
2025-06-06T02:21:07.0870972Z demo_vector_rag.py:150:11: UP006 Use `list` instead of `List` for type annotation
2025-06-06T02:21:07.0871317Z     |
2025-06-06T02:21:07.0871692Z 148 | # 6. Canonicalization and deduplication logic before inserting documents
2025-06-06T02:21:07.0872141Z 149 | def embed_and_insert_documents_with_dedup(
2025-06-06T02:21:07.0872431Z 150 |     docs: List[dict],
2025-06-06T02:21:07.0872654Z     |           ^^^^ UP006
2025-06-06T02:21:07.0872942Z 151 |     embedder_model: SentenceTransformer,
2025-06-06T02:21:07.0873274Z 152 |     collection: chromadb.Collection,
2025-06-06T02:21:07.0873524Z     |
2025-06-06T02:21:07.0873724Z     = help: Replace with `list`
2025-06-06T02:21:07.0873873Z 
2025-06-06T02:21:07.0874164Z demo_vector_rag.py:154:6: UP006 Use `tuple` instead of `Tuple` for type annotation
2025-06-06T02:21:07.0874506Z     |
2025-06-06T02:21:07.0874742Z 152 |     collection: chromadb.Collection,
2025-06-06T02:21:07.0875056Z 153 |     user_id_default: str = "global",
2025-06-06T02:21:07.0875366Z 154 | ) -> Tuple[List[dict], List[str]]:
2025-06-06T02:21:07.0875619Z     |      ^^^^^ UP006
2025-06-06T02:21:07.0875809Z 155 |     """
2025-06-06T02:21:07.0876197Z 156 |     Embed documents, canonicalize, deduplicate, and insert into collection.
2025-06-06T02:21:07.0876548Z     |
2025-06-06T02:21:07.0876746Z     = help: Replace with `tuple`
2025-06-06T02:21:07.0877039Z 
2025-06-06T02:21:07.0877326Z demo_vector_rag.py:154:12: UP006 Use `list` instead of `List` for type annotation
2025-06-06T02:21:07.0877660Z     |
2025-06-06T02:21:07.0878038Z 152 |     collection: chromadb.Collection,
2025-06-06T02:21:07.0878489Z 153 |     user_id_default: str = "global",
2025-06-06T02:21:07.0878808Z 154 | ) -> Tuple[List[dict], List[str]]:
2025-06-06T02:21:07.0879061Z     |            ^^^^ UP006
2025-06-06T02:21:07.0879264Z 155 |     """
2025-06-06T02:21:07.0879646Z 156 |     Embed documents, canonicalize, deduplicate, and insert into collection.
2025-06-06T02:21:07.0879998Z     |
2025-06-06T02:21:07.0880207Z     = help: Replace with `list`
2025-06-06T02:21:07.0880361Z 
2025-06-06T02:21:07.0880643Z demo_vector_rag.py:154:24: UP006 Use `list` instead of `List` for type annotation
2025-06-06T02:21:07.0880981Z     |
2025-06-06T02:21:07.0881214Z 152 |     collection: chromadb.Collection,
2025-06-06T02:21:07.0881523Z 153 |     user_id_default: str = "global",
2025-06-06T02:21:07.0881839Z 154 | ) -> Tuple[List[dict], List[str]]:
2025-06-06T02:21:07.0882115Z     |                        ^^^^ UP006
2025-06-06T02:21:07.0882344Z 155 |     """
2025-06-06T02:21:07.0882730Z 156 |     Embed documents, canonicalize, deduplicate, and insert into collection.
2025-06-06T02:21:07.0883078Z     |
2025-06-06T02:21:07.0883275Z     = help: Replace with `list`
2025-06-06T02:21:07.0883424Z 
2025-06-06T02:21:07.0883742Z demo_vector_rag.py:155:5: D205 1 blank line required between summary line and description
2025-06-06T02:21:07.0884113Z     |
2025-06-06T02:21:07.0884351Z 153 |       user_id_default: str = "global",
2025-06-06T02:21:07.0884666Z 154 |   ) -> Tuple[List[dict], List[str]]:
2025-06-06T02:21:07.0884901Z 155 | /     """
2025-06-06T02:21:07.0885293Z 156 | |     Embed documents, canonicalize, deduplicate, and insert into collection.
2025-06-06T02:21:07.0885774Z 157 | |     Returns: (inserted_docs, skipped_duplicate_ids)
2025-06-06T02:21:07.0886055Z 158 | |     """
2025-06-06T02:21:07.0886236Z     | |_______^ D205
2025-06-06T02:21:07.0886482Z 159 |       stored_hashes = set()
2025-06-06T02:21:07.0886873Z 160 |       # Retrieve all existing documents' canonical hashes (if any)
2025-06-06T02:21:07.0887183Z     |
2025-06-06T02:21:07.0887388Z     = help: Insert single blank line
2025-06-06T02:21:07.0887554Z 
2025-06-06T02:21:07.0887799Z demo_vector_rag.py:155:5: D400 First line should end with a period
2025-06-06T02:21:07.0888325Z     |
2025-06-06T02:21:07.0888569Z 153 |       user_id_default: str = "global",
2025-06-06T02:21:07.0888892Z 154 |   ) -> Tuple[List[dict], List[str]]:
2025-06-06T02:21:07.0889136Z 155 | /     """
2025-06-06T02:21:07.0889528Z 156 | |     Embed documents, canonicalize, deduplicate, and insert into collection.
2025-06-06T02:21:07.0890009Z 157 | |     Returns: (inserted_docs, skipped_duplicate_ids)
2025-06-06T02:21:07.0890289Z 158 | |     """
2025-06-06T02:21:07.0890470Z     | |_______^ D400
2025-06-06T02:21:07.0890708Z 159 |       stored_hashes = set()
2025-06-06T02:21:07.0891098Z 160 |       # Retrieve all existing documents' canonical hashes (if any)
2025-06-06T02:21:07.0891412Z     |
2025-06-06T02:21:07.0891586Z     = help: Add period
2025-06-06T02:21:07.0891711Z 
2025-06-06T02:21:07.0892093Z demo_vector_rag.py:155:5: D415 First line should end with a period, question mark, or exclamation point
2025-06-06T02:21:07.0892502Z     |
2025-06-06T02:21:07.0892738Z 153 |       user_id_default: str = "global",
2025-06-06T02:21:07.0893054Z 154 |   ) -> Tuple[List[dict], List[str]]:
2025-06-06T02:21:07.0893300Z 155 | /     """
2025-06-06T02:21:07.0893690Z 156 | |     Embed documents, canonicalize, deduplicate, and insert into collection.
2025-06-06T02:21:07.0894165Z 157 | |     Returns: (inserted_docs, skipped_duplicate_ids)
2025-06-06T02:21:07.0894446Z 158 | |     """
2025-06-06T02:21:07.0894624Z     | |_______^ D415
2025-06-06T02:21:07.0894859Z 159 |       stored_hashes = set()
2025-06-06T02:21:07.0895246Z 160 |       # Retrieve all existing documents' canonical hashes (if any)
2025-06-06T02:21:07.0895682Z     |
2025-06-06T02:21:07.0895885Z     = help: Add closing punctuation
2025-06-06T02:21:07.0896056Z 
2025-06-06T02:21:07.0896354Z demo_vector_rag.py:169:13: F841 Local variable `source` is assigned to but never used
2025-06-06T02:21:07.0896813Z     |
2025-06-06T02:21:07.0897064Z 167 |             meta = existing["metadatas"][i]
2025-06-06T02:21:07.0897434Z 168 |             uid = meta.get("user_id", user_id_default)
2025-06-06T02:21:07.0897801Z 169 |             source = meta.get("source", "demo")
2025-06-06T02:21:07.0898234Z     |             ^^^^^^ F841
2025-06-06T02:21:07.0898494Z 170 |             content = doc
2025-06-06T02:21:07.0898843Z 171 |             doc_hash = canonical_doc_hash(uid, content, meta)
2025-06-06T02:21:07.0899127Z     |
2025-06-06T02:21:07.0899381Z     = help: Remove assignment to unused variable `source`
2025-06-06T02:21:07.0899594Z 
2025-06-06T02:21:07.0899936Z demo_vector_rag.py:173:5: S110 `try`-`except`-`pass` detected, consider logging the exception
2025-06-06T02:21:07.0900314Z     |
2025-06-06T02:21:07.0900611Z 171 |               doc_hash = canonical_doc_hash(uid, content, meta)
2025-06-06T02:21:07.0900980Z 172 |               stored_hashes.add(doc_hash)
2025-06-06T02:21:07.0901271Z 173 | /     except Exception:
2025-06-06T02:21:07.0901575Z 174 | |         pass  # Collection may be empty
2025-06-06T02:21:07.0901835Z     | |____________^ S110
2025-06-06T02:21:07.0902030Z 175 |
2025-06-06T02:21:07.0902235Z 176 |       inserted_docs = []
2025-06-06T02:21:07.0902448Z     |
2025-06-06T02:21:07.0902538Z 
2025-06-06T02:21:07.0902814Z demo_vector_rag.py:173:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.0903155Z     |
2025-06-06T02:21:07.0903442Z 171 |             doc_hash = canonical_doc_hash(uid, content, meta)
2025-06-06T02:21:07.0903804Z 172 |             stored_hashes.add(doc_hash)
2025-06-06T02:21:07.0904084Z 173 |     except Exception:
2025-06-06T02:21:07.0904323Z     |            ^^^^^^^^^ BLE001
2025-06-06T02:21:07.0904631Z 174 |         pass  # Collection may be empty
2025-06-06T02:21:07.0904892Z     |
2025-06-06T02:21:07.0904983Z 
2025-06-06T02:21:07.0905319Z demo_vector_rag.py:180:9: PLW2901 `for` loop variable `doc` overwritten by assignment target
2025-06-06T02:21:07.0905706Z     |
2025-06-06T02:21:07.0905893Z 179 |     for doc in docs:
2025-06-06T02:21:07.0906240Z 180 |         doc = prepare_document(doc, user_id=user_id_default)
2025-06-06T02:21:07.0906550Z     |         ^^^ PLW2901
2025-06-06T02:21:07.0906971Z 181 |         doc_hash = canonical_doc_hash(doc["user_id"], doc["content"], doc["metadata"])
2025-06-06T02:21:07.0907401Z 182 |         if doc_hash in stored_hashes:
2025-06-06T02:21:07.0907644Z     |
2025-06-06T02:21:07.0907743Z 
2025-06-06T02:21:07.0908158Z demo_vector_rag.py:184:17: G004 Logging statement uses f-string
2025-06-06T02:21:07.0923244Z     |
2025-06-06T02:21:07.0923560Z 182 |         if doc_hash in stored_hashes:
2025-06-06T02:21:07.0923891Z 183 |             logger.info(
2025-06-06T02:21:07.0924397Z 184 |                 f"Deduplication: Skipping duplicate doc id={doc['id']} (hash={doc_hash[:8]}...)"
2025-06-06T02:21:07.0924909Z     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T02:21:07.0925201Z 185 |             )
2025-06-06T02:21:07.0925489Z 186 |             skipped_ids.append(doc["id"])
2025-06-06T02:21:07.0925755Z     |
2025-06-06T02:21:07.0925858Z 
2025-06-06T02:21:07.0926100Z demo_vector_rag.py:208:21: G004 Logging statement uses f-string
2025-06-06T02:21:07.0926413Z     |
2025-06-06T02:21:07.0926595Z 206 |             ],
2025-06-06T02:21:07.0926792Z 207 |         )
2025-06-06T02:21:07.0927163Z 208 |         logger.info(f"Inserted doc id={doc['id']} (hash={doc_hash[:8]}...)")
2025-06-06T02:21:07.0927580Z     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T02:21:07.0928131Z 209 |         inserted_docs.append(doc)
2025-06-06T02:21:07.0928462Z 210 |         stored_hashes.add(doc_hash)
2025-06-06T02:21:07.0928891Z     |
2025-06-06T02:21:07.0928992Z 
2025-06-06T02:21:07.0929231Z demo_vector_rag.py:218:13: G004 Logging statement uses f-string
2025-06-06T02:21:07.0929543Z     |
2025-06-06T02:21:07.0929896Z 216 |     demo_documents, embedder, collection
2025-06-06T02:21:07.0930160Z 217 | )
2025-06-06T02:21:07.0930598Z 218 | logger.info(f"\nInserted {len(inserted)} documents, skipped {len(skipped)} duplicates.")
2025-06-06T02:21:07.0931099Z     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T02:21:07.0931372Z     |
2025-06-06T02:21:07.0931466Z 
2025-06-06T02:21:07.0931796Z demo_vector_rag.py:229:5: D205 1 blank line required between summary line and description
2025-06-06T02:21:07.0932164Z     |
2025-06-06T02:21:07.0932378Z 227 |       n_results: int = 3,
2025-06-06T02:21:07.0932616Z 228 |   ) -> dict:
2025-06-06T02:21:07.0932803Z 229 | /     """
2025-06-06T02:21:07.0933161Z 230 | |     Query the vector DB with optional user_id and metadata filter.
2025-06-06T02:21:07.0933561Z 231 | |     Returns the matching results.
2025-06-06T02:21:07.0933806Z 232 | |     """
2025-06-06T02:21:07.0933984Z     | |_______^ D205
2025-06-06T02:21:07.0934391Z 233 |       query_embedding = embedder.encode([canonicalize_text(query)])[0].tolist()
2025-06-06T02:21:07.0934766Z 234 |       where = {}
2025-06-06T02:21:07.0934952Z     |
2025-06-06T02:21:07.0935160Z     = help: Insert single blank line
2025-06-06T02:21:07.0935329Z 
2025-06-06T02:21:07.0935684Z demo_vector_rag.py:245:12: RET504 Unnecessary assignment to `results` before `return` statement
2025-06-06T02:21:07.0936088Z     |
2025-06-06T02:21:07.0936403Z 243 |         include=["documents", "metadatas", "distances", "ids"],
2025-06-06T02:21:07.0936705Z 244 |     )
2025-06-06T02:21:07.0936900Z 245 |     return results
2025-06-06T02:21:07.0937124Z     |            ^^^^^^^ RET504
2025-06-06T02:21:07.0937328Z     |
2025-06-06T02:21:07.0937539Z     = help: Remove unnecessary assignment
2025-06-06T02:21:07.0937718Z 
2025-06-06T02:21:07.0938161Z demo_vector_rag.py:256:13: G004 Logging statement uses f-string
2025-06-06T02:21:07.0938471Z     |
2025-06-06T02:21:07.0938631Z 254 | )
2025-06-06T02:21:07.0938785Z 255 |
2025-06-06T02:21:07.0939141Z 256 | logger.info(f"\nQuery: {query}\nFilter: {metadata_filter}\nResults:")
2025-06-06T02:21:07.0939550Z     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T02:21:07.0939866Z 257 | for doc, meta, dist in zip(
2025-06-06T02:21:07.0940299Z 258 |     results["documents"][0], results["metadatas"][0], results["distances"][0]
2025-06-06T02:21:07.0940638Z     |
2025-06-06T02:21:07.0940733Z 
2025-06-06T02:21:07.0940961Z demo_vector_rag.py:267:17: G004 Logging statement uses f-string
2025-06-06T02:21:07.0941263Z     |
2025-06-06T02:21:07.0941534Z 265 | for i, doc in enumerate(all_facts["documents"]):
2025-06-06T02:21:07.0941876Z 266 |     meta = all_facts["metadatas"][i]
2025-06-06T02:21:07.0942241Z 267 |     logger.info(f"Fact {i + 1}: {doc} [meta: {meta}]")
2025-06-06T02:21:07.0942594Z     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T02:21:07.0942840Z 268 |
2025-06-06T02:21:07.0943122Z 269 | # 8. Test block: Verify deduplication and filtering
2025-06-06T02:21:07.0943404Z     |
2025-06-06T02:21:07.0943503Z 
2025-06-06T02:21:07.0943939Z demo_vector_rag.py:272:5: ANN201 Missing return type annotation for public function `test_deduplication_and_metadata`
2025-06-06T02:21:07.0944399Z     |
2025-06-06T02:21:07.0944646Z 272 | def test_deduplication_and_metadata():
2025-06-06T02:21:07.0944947Z     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ANN201
2025-06-06T02:21:07.0945185Z 273 |     """
2025-06-06T02:21:07.0945485Z 274 |     Test deduplication (should not insert duplicates)
2025-06-06T02:21:07.0945761Z     |
2025-06-06T02:21:07.0945986Z     = help: Add return type annotation: `None`
2025-06-06T02:21:07.0946179Z 
2025-06-06T02:21:07.0946499Z demo_vector_rag.py:273:5: D205 1 blank line required between summary line and description
2025-06-06T02:21:07.0946999Z     |
2025-06-06T02:21:07.0947244Z 272 |   def test_deduplication_and_metadata():
2025-06-06T02:21:07.0947501Z 273 | /     """
2025-06-06T02:21:07.0947966Z 274 | |     Test deduplication (should not insert duplicates)
2025-06-06T02:21:07.0948608Z 275 | |     and metadata filtering (should return only filtered docs).
2025-06-06T02:21:07.0948925Z 276 | |     """
2025-06-06T02:21:07.0949103Z     | |_______^ D205
2025-06-06T02:21:07.0949373Z 277 |       # Try to re-insert a duplicate doc
2025-06-06T02:21:07.0949646Z 278 |       duplicate = {
2025-06-06T02:21:07.0949848Z     |
2025-06-06T02:21:07.0950056Z     = help: Insert single blank line
2025-06-06T02:21:07.0950224Z 
2025-06-06T02:21:07.0950428Z demo_vector_rag.py:287:5: S101 Use of `assert` detected
2025-06-06T02:21:07.0950700Z     |
2025-06-06T02:21:07.0950943Z 285 |         [duplicate], embedder, collection
2025-06-06T02:21:07.0951196Z 286 |     )
2025-06-06T02:21:07.0951577Z 287 |     assert len(inserted) == 0, "Deduplication failed: duplicate was inserted."
2025-06-06T02:21:07.0951934Z     |     ^^^^^^ S101
2025-06-06T02:21:07.0952328Z 288 |     assert len(skipped) == 1, "Deduplication test: duplicate was not skipped."
2025-06-06T02:21:07.0952783Z 289 |     logger.info("Deduplication test passed.")
2025-06-06T02:21:07.0953056Z     |
2025-06-06T02:21:07.0953148Z 
2025-06-06T02:21:07.0953353Z demo_vector_rag.py:288:5: S101 Use of `assert` detected
2025-06-06T02:21:07.0953632Z     |
2025-06-06T02:21:07.0953791Z 286 |     )
2025-06-06T02:21:07.0954159Z 287 |     assert len(inserted) == 0, "Deduplication failed: duplicate was inserted."
2025-06-06T02:21:07.0954708Z 288 |     assert len(skipped) == 1, "Deduplication test: duplicate was not skipped."
2025-06-06T02:21:07.0955047Z     |     ^^^^^^ S101
2025-06-06T02:21:07.0955327Z 289 |     logger.info("Deduplication test passed.")
2025-06-06T02:21:07.0955588Z     |
2025-06-06T02:21:07.0955685Z 
2025-06-06T02:21:07.0955876Z demo_vector_rag.py:301:5: S101 Use of `assert` detected
2025-06-06T02:21:07.0956149Z     |
2025-06-06T02:21:07.0956402Z 299 |         [new_doc], embedder, collection
2025-06-06T02:21:07.0956657Z 300 |     )
2025-06-06T02:21:07.0956990Z 301 |     assert len(inserted) == 1, "Unique document was not inserted."
2025-06-06T02:21:07.0957313Z     |     ^^^^^^ S101
2025-06-06T02:21:07.0957683Z 302 |     logger.info("Insertion of new doc with different source passed.")
2025-06-06T02:21:07.0958129Z     |
2025-06-06T02:21:07.0958229Z 
2025-06-06T02:21:07.0958448Z demo_vector_rag.py:307:5: S101 Use of `assert` detected
2025-06-06T02:21:07.0958717Z     |
2025-06-06T02:21:07.0958961Z 305 |     filter_meta = {"source": "wikipedia"}
2025-06-06T02:21:07.0959403Z 306 |     results = collection.get(where={"user_id": "global", **filter_meta})
2025-06-06T02:21:07.0959933Z 307 |     assert any(doc == new_doc["content"] for doc in results["documents"]), (
2025-06-06T02:21:07.0960273Z     |     ^^^^^^ S101
2025-06-06T02:21:07.0960536Z 308 |         "Metadata filtering failed."
2025-06-06T02:21:07.0960782Z 309 |     )
2025-06-06T02:21:07.0960949Z     |
2025-06-06T02:21:07.0961039Z 
2025-06-06T02:21:07.0961252Z demo_vector_rag.py:319:5: ERA001 Found commented-out code
2025-06-06T02:21:07.0961537Z     |
2025-06-06T02:21:07.0961763Z 318 |     # Cleanup for demo (optional):
2025-06-06T02:21:07.0962090Z 319 |     # client.delete_collection("demo_rag")
2025-06-06T02:21:07.0962402Z     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ERA001
2025-06-06T02:21:07.0962640Z     |
2025-06-06T02:21:07.0962845Z     = help: Remove commented-out code
2025-06-06T02:21:07.0963017Z 
2025-06-06T02:21:07.0963324Z dev_tools/health_check.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.0963680Z   |
2025-06-06T02:21:07.0963871Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.0964103Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.0964319Z 2 | """
2025-06-06T02:21:07.0964500Z 3 | health_check.py.
2025-06-06T02:21:07.0964691Z   |
2025-06-06T02:21:07.0964784Z 
2025-06-06T02:21:07.0965211Z examples/mem0_enhanced_agents_example.py:92:5: F841 Local variable `research_task` is assigned to but never used
2025-06-06T02:21:07.0965788Z    |
2025-06-06T02:21:07.0965968Z 91 |     # Add tasks
2025-06-06T02:21:07.0966227Z 92 |     research_task = team.add_task(
2025-06-06T02:21:07.0966575Z    |     ^^^^^^^^^^^^^ F841
2025-06-06T02:21:07.0966991Z 93 |         description="Research the market for AI-powered productivity tools",
2025-06-06T02:21:07.0967380Z 94 |         agent=researcher,
2025-06-06T02:21:07.0967590Z    |
2025-06-06T02:21:07.0967971Z    = help: Remove assignment to unused variable `research_task`
2025-06-06T02:21:07.0968207Z 
2025-06-06T02:21:07.0968645Z examples/mem0_enhanced_agents_example.py:97:5: F841 Local variable `development_task` is assigned to but never used
2025-06-06T02:21:07.0969099Z    |
2025-06-06T02:21:07.0969255Z 95 |     )
2025-06-06T02:21:07.0969416Z 96 |
2025-06-06T02:21:07.0969638Z 97 |     development_task = team.add_task(
2025-06-06T02:21:07.0969910Z    |     ^^^^^^^^^^^^^^^^ F841
2025-06-06T02:21:07.0970346Z 98 |         description="Design an AI tool based on the market research", agent=developer
2025-06-06T02:21:07.0970697Z 99 |     )
2025-06-06T02:21:07.0970857Z    |
2025-06-06T02:21:07.0971142Z    = help: Remove assignment to unused variable `development_task`
2025-06-06T02:21:07.0971385Z 
2025-06-06T02:21:07.0971834Z examples/mem0_enhanced_agents_example.py:101:5: F841 Local variable `monetization_task` is assigned to but never used
2025-06-06T02:21:07.0972294Z     |
2025-06-06T02:21:07.0972455Z  99 |     )
2025-06-06T02:21:07.0972616Z 100 |
2025-06-06T02:21:07.0972853Z 101 |     monetization_task = team.add_task(
2025-06-06T02:21:07.0973127Z     |     ^^^^^^^^^^^^^^^^^ F841
2025-06-06T02:21:07.0973598Z 102 |         description="Create a monetization strategy for the AI tool", agent=monetization
2025-06-06T02:21:07.0973974Z 103 |     )
2025-06-06T02:21:07.0974133Z     |
2025-06-06T02:21:07.0974422Z     = help: Remove assignment to unused variable `monetization_task`
2025-06-06T02:21:07.0974667Z 
2025-06-06T02:21:07.0975012Z examples/mem0_enhanced_agents_example.py:108:5: C901 `run_example` is too complex (12 > 10)
2025-06-06T02:21:07.0975398Z     |
2025-06-06T02:21:07.0975616Z 108 | def run_example() -> None:
2025-06-06T02:21:07.0975851Z     |     ^^^^^^^^^^^ C901
2025-06-06T02:21:07.0976212Z 109 |     """Run the example workflow with memory-enhanced agents."""
2025-06-06T02:21:07.0976563Z 110 |     # Check dependencies
2025-06-06T02:21:07.0976768Z     |
2025-06-06T02:21:07.0976860Z 
2025-06-06T02:21:07.0977178Z examples/mem0_enhanced_agents_example.py:126:21: G004 Logging statement uses f-string
2025-06-06T02:21:07.0977549Z     |
2025-06-06T02:21:07.0977756Z 124 |         result = team.run()
2025-06-06T02:21:07.0978253Z 125 |         logger.info("Workflow completed successfully")
2025-06-06T02:21:07.0978620Z 126 |         logger.info(f"Result: {result}")
2025-06-06T02:21:07.0978916Z     |                     ^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T02:21:07.0979206Z 127 |     except Exception as e:
2025-06-06T02:21:07.0979545Z 128 |         logger.error(f"Error running workflow: {e}")
2025-06-06T02:21:07.0979812Z     |
2025-06-06T02:21:07.0979901Z 
2025-06-06T02:21:07.0980267Z examples/mem0_enhanced_agents_example.py:127:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.0980672Z     |
2025-06-06T02:21:07.0980955Z 125 |         logger.info("Workflow completed successfully")
2025-06-06T02:21:07.0981317Z 126 |         logger.info(f"Result: {result}")
2025-06-06T02:21:07.0981613Z 127 |     except Exception as e:
2025-06-06T02:21:07.0981856Z     |            ^^^^^^^^^ BLE001
2025-06-06T02:21:07.0982182Z 128 |         logger.error(f"Error running workflow: {e}")
2025-06-06T02:21:07.0982447Z     |
2025-06-06T02:21:07.0982539Z 
2025-06-06T02:21:07.0982943Z examples/mem0_enhanced_agents_example.py:128:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T02:21:07.0983376Z     |
2025-06-06T02:21:07.0983610Z 126 |         logger.info(f"Result: {result}")
2025-06-06T02:21:07.0983903Z 127 |     except Exception as e:
2025-06-06T02:21:07.0984363Z 128 |         logger.error(f"Error running workflow: {e}")
2025-06-06T02:21:07.0984692Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T02:21:07.0985040Z 129 |
2025-06-06T02:21:07.0985325Z 130 |     # Demonstrate memory retrieval (old, direct use)
2025-06-06T02:21:07.0985595Z     |
2025-06-06T02:21:07.0985793Z     = help: Replace with `exception`
2025-06-06T02:21:07.0985964Z 
2025-06-06T02:21:07.0986287Z examples/mem0_enhanced_agents_example.py:128:22: G004 Logging statement uses f-string
2025-06-06T02:21:07.0986658Z     |
2025-06-06T02:21:07.0986894Z 126 |         logger.info(f"Result: {result}")
2025-06-06T02:21:07.0987187Z 127 |     except Exception as e:
2025-06-06T02:21:07.0987512Z 128 |         logger.error(f"Error running workflow: {e}")
2025-06-06T02:21:07.0988001Z     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T02:21:07.0988280Z 129 |
2025-06-06T02:21:07.0988550Z 130 |     # Demonstrate memory retrieval (old, direct use)
2025-06-06T02:21:07.0988823Z     |
2025-06-06T02:21:07.0988913Z 
2025-06-06T02:21:07.0989228Z examples/mem0_enhanced_agents_example.py:140:25: G004 Logging statement uses f-string
2025-06-06T02:21:07.0989598Z     |
2025-06-06T02:21:07.0989768Z 138 |             )
2025-06-06T02:21:07.0989944Z 139 |
2025-06-06T02:21:07.0990272Z 140 |             logger.info(f"Retrieved {len(memories)} memories (direct):")
2025-06-06T02:21:07.0990661Z     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T02:21:07.0991014Z 141 |             for i, memory in enumerate(memories):
2025-06-06T02:21:07.0991360Z 142 |                 if isinstance(memory, dict):
2025-06-06T02:21:07.0991602Z     |
2025-06-06T02:21:07.0991690Z 
2025-06-06T02:21:07.0992003Z examples/mem0_enhanced_agents_example.py:144:25: G004 Logging statement uses f-string
2025-06-06T02:21:07.0992369Z     |
2025-06-06T02:21:07.0992604Z 142 |                 if isinstance(memory, dict):
2025-06-06T02:21:07.0992910Z 143 |                     logger.info(
2025-06-06T02:21:07.0993316Z 144 |                         f"Memory {i + 1}: {memory.get('text', 'No text')[:100]}..."
2025-06-06T02:21:07.0993702Z     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T02:21:07.0993988Z 145 |                     )
2025-06-06T02:21:07.0994209Z 146 |                 else:
2025-06-06T02:21:07.0994401Z     |
2025-06-06T02:21:07.0994490Z 
2025-06-06T02:21:07.0994806Z examples/mem0_enhanced_agents_example.py:147:33: G004 Logging statement uses f-string
2025-06-06T02:21:07.0995170Z     |
2025-06-06T02:21:07.0995344Z 145 |                     )
2025-06-06T02:21:07.0995560Z 146 |                 else:
2025-06-06T02:21:07.0995906Z 147 |                     logger.info(f"Memory {i + 1}: {str(memory)[:100]}...")
2025-06-06T02:21:07.0996280Z     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T02:21:07.0996590Z 148 |         except Exception as e:
2025-06-06T02:21:07.0996958Z 149 |             logger.error(f"Error retrieving memories: {e}")
2025-06-06T02:21:07.0997238Z     |
2025-06-06T02:21:07.0997329Z 
2025-06-06T02:21:07.0997689Z examples/mem0_enhanced_agents_example.py:148:16: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.0998193Z     |
2025-06-06T02:21:07.0998369Z 146 |                 else:
2025-06-06T02:21:07.0998719Z 147 |                     logger.info(f"Memory {i + 1}: {str(memory)[:100]}...")
2025-06-06T02:21:07.0999064Z 148 |         except Exception as e:
2025-06-06T02:21:07.0999326Z     |                ^^^^^^^^^ BLE001
2025-06-06T02:21:07.0999676Z 149 |             logger.error(f"Error retrieving memories: {e}")
2025-06-06T02:21:07.0999949Z     |
2025-06-06T02:21:07.1000035Z 
2025-06-06T02:21:07.1000434Z examples/mem0_enhanced_agents_example.py:149:13: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T02:21:07.1000865Z     |
2025-06-06T02:21:07.1001177Z 147 |                     logger.info(f"Memory {i + 1}: {str(memory)[:100]}...")
2025-06-06T02:21:07.1001653Z 148 |         except Exception as e:
2025-06-06T02:21:07.1002006Z 149 |             logger.error(f"Error retrieving memories: {e}")
2025-06-06T02:21:07.1002474Z     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T02:21:07.1002733Z 150 |
2025-06-06T02:21:07.1003089Z 151 |     # --- New: Demonstrate retrieval using KnowledgeIntegrationLayer ---
2025-06-06T02:21:07.1003420Z     |
2025-06-06T02:21:07.1003617Z     = help: Replace with `exception`
2025-06-06T02:21:07.1003781Z 
2025-06-06T02:21:07.1004103Z examples/mem0_enhanced_agents_example.py:149:26: G004 Logging statement uses f-string
2025-06-06T02:21:07.1004475Z     |
2025-06-06T02:21:07.1004783Z 147 |                     logger.info(f"Memory {i + 1}: {str(memory)[:100]}...")
2025-06-06T02:21:07.1005126Z 148 |         except Exception as e:
2025-06-06T02:21:07.1005480Z 149 |             logger.error(f"Error retrieving memories: {e}")
2025-06-06T02:21:07.1005828Z     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T02:21:07.1006072Z 150 |
2025-06-06T02:21:07.1006424Z 151 |     # --- New: Demonstrate retrieval using KnowledgeIntegrationLayer ---
2025-06-06T02:21:07.1006750Z     |
2025-06-06T02:21:07.1006839Z 
2025-06-06T02:21:07.1007282Z examples/mem0_enhanced_agents_example.py:166:17: ANN202 Missing return type annotation for private function `search`
2025-06-06T02:21:07.1007743Z     |
2025-06-06T02:21:07.1008219Z 164 |         # Stub/mock clients for demonstration (replace with real clients as needed)
2025-06-06T02:21:07.1008626Z 165 |         class DummyMem0Client:
2025-06-06T02:21:07.1008966Z 166 |             def search(self, query, user_id, **kwargs):
2025-06-06T02:21:07.1009264Z     |                 ^^^^^^ ANN202
2025-06-06T02:21:07.1009670Z 167 |                 return [{"source": "mem0", "content": f"dummy mem0 for '{query}'"}]
2025-06-06T02:21:07.1009989Z     |
2025-06-06T02:21:07.1010195Z     = help: Add return type annotation
2025-06-06T02:21:07.1010370Z 
2025-06-06T02:21:07.1010778Z examples/mem0_enhanced_agents_example.py:166:30: ANN001 Missing type annotation for function argument `query`
2025-06-06T02:21:07.1011212Z     |
2025-06-06T02:21:07.1011590Z 164 |         # Stub/mock clients for demonstration (replace with real clients as needed)
2025-06-06T02:21:07.1011992Z 165 |         class DummyMem0Client:
2025-06-06T02:21:07.1012331Z 166 |             def search(self, query, user_id, **kwargs):
2025-06-06T02:21:07.1012641Z     |                              ^^^^^ ANN001
2025-06-06T02:21:07.1013061Z 167 |                 return [{"source": "mem0", "content": f"dummy mem0 for '{query}'"}]
2025-06-06T02:21:07.1013369Z     |
2025-06-06T02:21:07.1013461Z 
2025-06-06T02:21:07.1013877Z examples/mem0_enhanced_agents_example.py:166:37: ANN001 Missing type annotation for function argument `user_id`
2025-06-06T02:21:07.1014315Z     |
2025-06-06T02:21:07.1014685Z 164 |         # Stub/mock clients for demonstration (replace with real clients as needed)
2025-06-06T02:21:07.1015094Z 165 |         class DummyMem0Client:
2025-06-06T02:21:07.1015433Z 166 |             def search(self, query, user_id, **kwargs):
2025-06-06T02:21:07.1015756Z     |                                     ^^^^^^^ ANN001
2025-06-06T02:21:07.1016175Z 167 |                 return [{"source": "mem0", "content": f"dummy mem0 for '{query}'"}]
2025-06-06T02:21:07.1016494Z     |
2025-06-06T02:21:07.1016587Z 
2025-06-06T02:21:07.1016907Z examples/mem0_enhanced_agents_example.py:166:37: ARG002 Unused method argument: `user_id`
2025-06-06T02:21:07.1017278Z     |
2025-06-06T02:21:07.1017646Z 164 |         # Stub/mock clients for demonstration (replace with real clients as needed)
2025-06-06T02:21:07.1018140Z 165 |         class DummyMem0Client:
2025-06-06T02:21:07.1018476Z 166 |             def search(self, query, user_id, **kwargs):
2025-06-06T02:21:07.1018790Z     |                                     ^^^^^^^ ARG002
2025-06-06T02:21:07.1019343Z 167 |                 return [{"source": "mem0", "content": f"dummy mem0 for '{query}'"}]
2025-06-06T02:21:07.1019818Z     |
2025-06-06T02:21:07.1019907Z 
2025-06-06T02:21:07.1020354Z examples/mem0_enhanced_agents_example.py:166:46: ANN003 Missing type annotation for `**kwargs`
2025-06-06T02:21:07.1020755Z     |
2025-06-06T02:21:07.1021125Z 164 |         # Stub/mock clients for demonstration (replace with real clients as needed)
2025-06-06T02:21:07.1021525Z 165 |         class DummyMem0Client:
2025-06-06T02:21:07.1021855Z 166 |             def search(self, query, user_id, **kwargs):
2025-06-06T02:21:07.1022180Z     |                                              ^^^^^^^^ ANN003
2025-06-06T02:21:07.1022609Z 167 |                 return [{"source": "mem0", "content": f"dummy mem0 for '{query}'"}]
2025-06-06T02:21:07.1022920Z     |
2025-06-06T02:21:07.1023009Z 
2025-06-06T02:21:07.1023332Z examples/mem0_enhanced_agents_example.py:166:48: ARG002 Unused method argument: `kwargs`
2025-06-06T02:21:07.1023705Z     |
2025-06-06T02:21:07.1024077Z 164 |         # Stub/mock clients for demonstration (replace with real clients as needed)
2025-06-06T02:21:07.1024488Z 165 |         class DummyMem0Client:
2025-06-06T02:21:07.1024830Z 166 |             def search(self, query, user_id, **kwargs):
2025-06-06T02:21:07.1025157Z     |                                                ^^^^^^ ARG002
2025-06-06T02:21:07.1025589Z 167 |                 return [{"source": "mem0", "content": f"dummy mem0 for '{query}'"}]
2025-06-06T02:21:07.1025897Z     |
2025-06-06T02:21:07.1025989Z 
2025-06-06T02:21:07.1026413Z examples/mem0_enhanced_agents_example.py:169:17: ANN202 Missing return type annotation for private function `add`
2025-06-06T02:21:07.1026865Z     |
2025-06-06T02:21:07.1027207Z 167 |                 return [{"source": "mem0", "content": f"dummy mem0 for '{query}'"}]
2025-06-06T02:21:07.1027521Z 168 |
2025-06-06T02:21:07.1027790Z 169 |             def add(self, content, user_id, **kwargs):
2025-06-06T02:21:07.1028311Z     |                 ^^^ ANN202
2025-06-06T02:21:07.1028664Z 170 |                 return {"status": "added", "content": content}
2025-06-06T02:21:07.1028946Z     |
2025-06-06T02:21:07.1029160Z     = help: Add return type annotation
2025-06-06T02:21:07.1029335Z 
2025-06-06T02:21:07.1029762Z examples/mem0_enhanced_agents_example.py:169:27: ANN001 Missing type annotation for function argument `content`
2025-06-06T02:21:07.1030209Z     |
2025-06-06T02:21:07.1030557Z 167 |                 return [{"source": "mem0", "content": f"dummy mem0 for '{query}'"}]
2025-06-06T02:21:07.1030881Z 168 |
2025-06-06T02:21:07.1031161Z 169 |             def add(self, content, user_id, **kwargs):
2025-06-06T02:21:07.1031472Z     |                           ^^^^^^^ ANN001
2025-06-06T02:21:07.1031835Z 170 |                 return {"status": "added", "content": content}
2025-06-06T02:21:07.1032110Z     |
2025-06-06T02:21:07.1032200Z 
2025-06-06T02:21:07.1032617Z examples/mem0_enhanced_agents_example.py:169:36: ANN001 Missing type annotation for function argument `user_id`
2025-06-06T02:21:07.1033064Z     |
2025-06-06T02:21:07.1033409Z 167 |                 return [{"source": "mem0", "content": f"dummy mem0 for '{query}'"}]
2025-06-06T02:21:07.1033725Z 168 |
2025-06-06T02:21:07.1033998Z 169 |             def add(self, content, user_id, **kwargs):
2025-06-06T02:21:07.1034317Z     |                                    ^^^^^^^ ANN001
2025-06-06T02:21:07.1034678Z 170 |                 return {"status": "added", "content": content}
2025-06-06T02:21:07.1034948Z     |
2025-06-06T02:21:07.1035046Z 
2025-06-06T02:21:07.1035367Z examples/mem0_enhanced_agents_example.py:169:36: ARG002 Unused method argument: `user_id`
2025-06-06T02:21:07.1035744Z     |
2025-06-06T02:21:07.1036085Z 167 |                 return [{"source": "mem0", "content": f"dummy mem0 for '{query}'"}]
2025-06-06T02:21:07.1036392Z 168 |
2025-06-06T02:21:07.1036655Z 169 |             def add(self, content, user_id, **kwargs):
2025-06-06T02:21:07.1036970Z     |                                    ^^^^^^^ ARG002
2025-06-06T02:21:07.1037463Z 170 |                 return {"status": "added", "content": content}
2025-06-06T02:21:07.1037731Z     |
2025-06-06T02:21:07.1037925Z 
2025-06-06T02:21:07.1038390Z examples/mem0_enhanced_agents_example.py:169:45: ANN003 Missing type annotation for `**kwargs`
2025-06-06T02:21:07.1038791Z     |
2025-06-06T02:21:07.1039140Z 167 |                 return [{"source": "mem0", "content": f"dummy mem0 for '{query}'"}]
2025-06-06T02:21:07.1039459Z 168 |
2025-06-06T02:21:07.1039735Z 169 |             def add(self, content, user_id, **kwargs):
2025-06-06T02:21:07.1040071Z     |                                             ^^^^^^^^ ANN003
2025-06-06T02:21:07.1040447Z 170 |                 return {"status": "added", "content": content}
2025-06-06T02:21:07.1040718Z     |
2025-06-06T02:21:07.1040817Z 
2025-06-06T02:21:07.1041140Z examples/mem0_enhanced_agents_example.py:169:47: ARG002 Unused method argument: `kwargs`
2025-06-06T02:21:07.1041518Z     |
2025-06-06T02:21:07.1041864Z 167 |                 return [{"source": "mem0", "content": f"dummy mem0 for '{query}'"}]
2025-06-06T02:21:07.1042186Z 168 |
2025-06-06T02:21:07.1042455Z 169 |             def add(self, content, user_id, **kwargs):
2025-06-06T02:21:07.1042786Z     |                                               ^^^^^^ ARG002
2025-06-06T02:21:07.1043155Z 170 |                 return {"status": "added", "content": content}
2025-06-06T02:21:07.1043418Z     |
2025-06-06T02:21:07.1043515Z 
2025-06-06T02:21:07.1043947Z examples/mem0_enhanced_agents_example.py:173:17: ANN202 Missing return type annotation for private function `query`
2025-06-06T02:21:07.1044406Z     |
2025-06-06T02:21:07.1044634Z 172 |         class DummyVectorClient:
2025-06-06T02:21:07.1044980Z 173 |             def query(self, query, user_id, **kwargs):
2025-06-06T02:21:07.1045274Z     |                 ^^^^^ ANN202
2025-06-06T02:21:07.1045534Z 174 |                 return [
2025-06-06T02:21:07.1045932Z 175 |                     {"source": "vector_rag", "content": f"dummy vector for '{query}'"}
2025-06-06T02:21:07.1046254Z     |
2025-06-06T02:21:07.1046459Z     = help: Add return type annotation
2025-06-06T02:21:07.1046626Z 
2025-06-06T02:21:07.1047040Z examples/mem0_enhanced_agents_example.py:173:29: ANN001 Missing type annotation for function argument `query`
2025-06-06T02:21:07.1047479Z     |
2025-06-06T02:21:07.1047695Z 172 |         class DummyVectorClient:
2025-06-06T02:21:07.1048231Z 173 |             def query(self, query, user_id, **kwargs):
2025-06-06T02:21:07.1048540Z     |                             ^^^^^ ANN001
2025-06-06T02:21:07.1048817Z 174 |                 return [
2025-06-06T02:21:07.1049210Z 175 |                     {"source": "vector_rag", "content": f"dummy vector for '{query}'"}
2025-06-06T02:21:07.1049523Z     |
2025-06-06T02:21:07.1049622Z 
2025-06-06T02:21:07.1050038Z examples/mem0_enhanced_agents_example.py:173:36: ANN001 Missing type annotation for function argument `user_id`
2025-06-06T02:21:07.1050477Z     |
2025-06-06T02:21:07.1050693Z 172 |         class DummyVectorClient:
2025-06-06T02:21:07.1051041Z 173 |             def query(self, query, user_id, **kwargs):
2025-06-06T02:21:07.1051359Z     |                                    ^^^^^^^ ANN001
2025-06-06T02:21:07.1051642Z 174 |                 return [
2025-06-06T02:21:07.1052029Z 175 |                     {"source": "vector_rag", "content": f"dummy vector for '{query}'"}
2025-06-06T02:21:07.1052343Z     |
2025-06-06T02:21:07.1052438Z 
2025-06-06T02:21:07.1052761Z examples/mem0_enhanced_agents_example.py:173:36: ARG002 Unused method argument: `user_id`
2025-06-06T02:21:07.1053136Z     |
2025-06-06T02:21:07.1053354Z 172 |         class DummyVectorClient:
2025-06-06T02:21:07.1053694Z 173 |             def query(self, query, user_id, **kwargs):
2025-06-06T02:21:07.1054008Z     |                                    ^^^^^^^ ARG002
2025-06-06T02:21:07.1054286Z 174 |                 return [
2025-06-06T02:21:07.1054675Z 175 |                     {"source": "vector_rag", "content": f"dummy vector for '{query}'"}
2025-06-06T02:21:07.1055146Z     |
2025-06-06T02:21:07.1055238Z 
2025-06-06T02:21:07.1055598Z examples/mem0_enhanced_agents_example.py:173:45: ANN003 Missing type annotation for `**kwargs`
2025-06-06T02:21:07.1055988Z     |
2025-06-06T02:21:07.1056321Z 172 |         class DummyVectorClient:
2025-06-06T02:21:07.1056662Z 173 |             def query(self, query, user_id, **kwargs):
2025-06-06T02:21:07.1056986Z     |                                             ^^^^^^^^ ANN003
2025-06-06T02:21:07.1057273Z 174 |                 return [
2025-06-06T02:21:07.1057670Z 175 |                     {"source": "vector_rag", "content": f"dummy vector for '{query}'"}
2025-06-06T02:21:07.1058184Z     |
2025-06-06T02:21:07.1058279Z 
2025-06-06T02:21:07.1058626Z examples/mem0_enhanced_agents_example.py:173:47: ARG002 Unused method argument: `kwargs`
2025-06-06T02:21:07.1059000Z     |
2025-06-06T02:21:07.1059221Z 172 |         class DummyVectorClient:
2025-06-06T02:21:07.1059560Z 173 |             def query(self, query, user_id, **kwargs):
2025-06-06T02:21:07.1059890Z     |                                               ^^^^^^ ARG002
2025-06-06T02:21:07.1060178Z 174 |                 return [
2025-06-06T02:21:07.1060572Z 175 |                     {"source": "vector_rag", "content": f"dummy vector for '{query}'"}
2025-06-06T02:21:07.1060884Z     |
2025-06-06T02:21:07.1060976Z 
2025-06-06T02:21:07.1061397Z examples/mem0_enhanced_agents_example.py:178:17: ANN202 Missing return type annotation for private function `add`
2025-06-06T02:21:07.1061849Z     |
2025-06-06T02:21:07.1062024Z 176 |                 ]
2025-06-06T02:21:07.1062207Z 177 |
2025-06-06T02:21:07.1062469Z 178 |             def add(self, content, user_id, **kwargs):
2025-06-06T02:21:07.1062760Z     |                 ^^^ ANN202
2025-06-06T02:21:07.1063103Z 179 |                 return {"status": "added", "content": content}
2025-06-06T02:21:07.1063383Z     |
2025-06-06T02:21:07.1063591Z     = help: Add return type annotation
2025-06-06T02:21:07.1063759Z 
2025-06-06T02:21:07.1064172Z examples/mem0_enhanced_agents_example.py:178:27: ANN001 Missing type annotation for function argument `content`
2025-06-06T02:21:07.1064616Z     |
2025-06-06T02:21:07.1064786Z 176 |                 ]
2025-06-06T02:21:07.1064858Z 177 |
2025-06-06T02:21:07.1065041Z 178 |             def add(self, content, user_id, **kwargs):
2025-06-06T02:21:07.1065164Z     |                           ^^^^^^^ ANN001
2025-06-06T02:21:07.1065365Z 179 |                 return {"status": "added", "content": content}
2025-06-06T02:21:07.1065435Z     |
2025-06-06T02:21:07.1065443Z 
2025-06-06T02:21:07.1065855Z examples/mem0_enhanced_agents_example.py:178:36: ANN001 Missing type annotation for function argument `user_id`
2025-06-06T02:21:07.1065923Z     |
2025-06-06T02:21:07.1066015Z 176 |                 ]
2025-06-06T02:21:07.1066083Z 177 |
2025-06-06T02:21:07.1066267Z 178 |             def add(self, content, user_id, **kwargs):
2025-06-06T02:21:07.1066388Z     |                                    ^^^^^^^ ANN001
2025-06-06T02:21:07.1066587Z 179 |                 return {"status": "added", "content": content}
2025-06-06T02:21:07.1066661Z     |
2025-06-06T02:21:07.1066669Z 
2025-06-06T02:21:07.1067004Z examples/mem0_enhanced_agents_example.py:178:36: ARG002 Unused method argument: `user_id`
2025-06-06T02:21:07.1067074Z     |
2025-06-06T02:21:07.1067164Z 176 |                 ]
2025-06-06T02:21:07.1067232Z 177 |
2025-06-06T02:21:07.1067414Z 178 |             def add(self, content, user_id, **kwargs):
2025-06-06T02:21:07.1067534Z     |                                    ^^^^^^^ ARG002
2025-06-06T02:21:07.1067733Z 179 |                 return {"status": "added", "content": content}
2025-06-06T02:21:07.1067804Z     |
2025-06-06T02:21:07.1068185Z 
2025-06-06T02:21:07.1068699Z examples/mem0_enhanced_agents_example.py:178:45: ANN003 Missing type annotation for `**kwargs`
2025-06-06T02:21:07.1068778Z     |
2025-06-06T02:21:07.1068875Z 176 |                 ]
2025-06-06T02:21:07.1068943Z 177 |
2025-06-06T02:21:07.1069142Z 178 |             def add(self, content, user_id, **kwargs):
2025-06-06T02:21:07.1069458Z     |                                             ^^^^^^^^ ANN003
2025-06-06T02:21:07.1069665Z 179 |                 return {"status": "added", "content": content}
2025-06-06T02:21:07.1069850Z     |
2025-06-06T02:21:07.1069859Z 
2025-06-06T02:21:07.1070202Z examples/mem0_enhanced_agents_example.py:178:47: ARG002 Unused method argument: `kwargs`
2025-06-06T02:21:07.1070272Z     |
2025-06-06T02:21:07.1070362Z 176 |                 ]
2025-06-06T02:21:07.1070428Z 177 |
2025-06-06T02:21:07.1070614Z 178 |             def add(self, content, user_id, **kwargs):
2025-06-06T02:21:07.1070743Z     |                                               ^^^^^^ ARG002
2025-06-06T02:21:07.1070942Z 179 |                 return {"status": "added", "content": content}
2025-06-06T02:21:07.1071009Z     |
2025-06-06T02:21:07.1071020Z 
2025-06-06T02:21:07.1071336Z examples/mem0_enhanced_agents_example.py:191:21: G004 Logging statement uses f-string
2025-06-06T02:21:07.1071406Z     |
2025-06-06T02:21:07.1071620Z 189 |         query = "What agents were involved in the workflow?"
2025-06-06T02:21:07.1071904Z 190 |         results_fallback = integration_fallback.search(query, user_id=user_id)
2025-06-06T02:21:07.1072159Z 191 |         logger.info(f"Fallback strategy results: {results_fallback}")
2025-06-06T02:21:07.1072310Z     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T02:21:07.1072377Z 192 |
2025-06-06T02:21:07.1072645Z 193 |         # Example: aggregation strategy (combines results from all sources)
2025-06-06T02:21:07.1072712Z     |
2025-06-06T02:21:07.1072720Z 
2025-06-06T02:21:07.1073040Z examples/mem0_enhanced_agents_example.py:199:21: G004 Logging statement uses f-string
2025-06-06T02:21:07.1073107Z     |
2025-06-06T02:21:07.1073184Z 197 |         )
2025-06-06T02:21:07.1073470Z 198 |         results_aggregate = integration_aggregate.search(query, user_id=user_id)
2025-06-06T02:21:07.1073732Z 199 |         logger.info(f"Aggregation strategy results: {results_aggregate}")
2025-06-06T02:21:07.1073887Z     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T02:21:07.1073958Z 200 |
2025-06-06T02:21:07.1074245Z 201 |         # This is the new recommended pattern for agent/team knowledge retrieval:
2025-06-06T02:21:07.1074319Z     |
2025-06-06T02:21:07.1074327Z 
2025-06-06T02:21:07.1074694Z examples/mem0_enhanced_agents_example.py:203:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.1074766Z     |
2025-06-06T02:21:07.1075040Z 201 |         # This is the new recommended pattern for agent/team knowledge retrieval:
2025-06-06T02:21:07.1075431Z 202 |         # Use KnowledgeIntegrationLayer as a unified, extensible interface to search across all sources.
2025-06-06T02:21:07.1075559Z 203 |     except Exception as e:
2025-06-06T02:21:07.1075665Z     |            ^^^^^^^^^ BLE001
2025-06-06T02:21:07.1075915Z 204 |         logger.error(f"Error using KnowledgeIntegrationLayer: {e}")
2025-06-06T02:21:07.1075994Z     |
2025-06-06T02:21:07.1076002Z 
2025-06-06T02:21:07.1076408Z examples/mem0_enhanced_agents_example.py:204:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T02:21:07.1076475Z     |
2025-06-06T02:21:07.1076870Z 202 |         # Use KnowledgeIntegrationLayer as a unified, extensible interface to search across all sources.
2025-06-06T02:21:07.1076994Z 203 |     except Exception as e:
2025-06-06T02:21:07.1077243Z 204 |         logger.error(f"Error using KnowledgeIntegrationLayer: {e}")
2025-06-06T02:21:07.1077389Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T02:21:07.1077462Z     |
2025-06-06T02:21:07.1077579Z     = help: Replace with `exception`
2025-06-06T02:21:07.1077587Z 
2025-06-06T02:21:07.1078115Z examples/mem0_enhanced_agents_example.py:204:22: G004 Logging statement uses f-string
2025-06-06T02:21:07.1078190Z     |
2025-06-06T02:21:07.1078574Z 202 |         # Use KnowledgeIntegrationLayer as a unified, extensible interface to search across all sources.
2025-06-06T02:21:07.1078825Z 203 |     except Exception as e:
2025-06-06T02:21:07.1079085Z 204 |         logger.error(f"Error using KnowledgeIntegrationLayer: {e}")
2025-06-06T02:21:07.1079325Z     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T02:21:07.1079403Z     |
2025-06-06T02:21:07.1079411Z 
2025-06-06T02:21:07.1079878Z examples/mem0_enhanced_agents_example.py:208:5: D401 First line of docstring should be in imperative mood: "Main function."
2025-06-06T02:21:07.1079953Z     |
2025-06-06T02:21:07.1080052Z 207 | def main() -> None:
2025-06-06T02:21:07.1080173Z 208 |     """Main function."""
2025-06-06T02:21:07.1080274Z     |     ^^^^^^^^^^^^^^^^^^^^ D401
2025-06-06T02:21:07.1080489Z 209 |     logger.info("Starting mem0-enhanced agents example")
2025-06-06T02:21:07.1080586Z 210 |     run_example()
2025-06-06T02:21:07.1080658Z     |
2025-06-06T02:21:07.1080665Z 
2025-06-06T02:21:07.1080851Z examples/test_mem0_local.py:21:5: T201 `print` found
2025-06-06T02:21:07.1080929Z    |
2025-06-06T02:21:07.1081047Z 19 |     from mem0 import Memory
2025-06-06T02:21:07.1081150Z 20 | except ImportError:
2025-06-06T02:21:07.1081471Z 21 |     print("mem0ai package not installed. Please install it with: pip install mem0ai")
2025-06-06T02:21:07.1081557Z    |     ^^^^^ T201
2025-06-06T02:21:07.1081649Z 22 |     sys.exit(1)
2025-06-06T02:21:07.1081719Z    |
2025-06-06T02:21:07.1081806Z    = help: Remove `print`
2025-06-06T02:21:07.1081818Z 
2025-06-06T02:21:07.1082228Z examples/test_mem0_local.py:25:22: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `data`
2025-06-06T02:21:07.1082298Z    |
2025-06-06T02:21:07.1082446Z 25 | def print_json(data: Any) -> None:
2025-06-06T02:21:07.1082551Z    |                      ^^^ ANN401
2025-06-06T02:21:07.1082698Z 26 |     """Print data as formatted JSON."""
2025-06-06T02:21:07.1082848Z 27 |     print(json.dumps(data, indent=2))
2025-06-06T02:21:07.1082915Z    |
2025-06-06T02:21:07.1082922Z 
2025-06-06T02:21:07.1083119Z examples/test_mem0_local.py:27:5: T201 `print` found
2025-06-06T02:21:07.1083186Z    |
2025-06-06T02:21:07.1083327Z 25 | def print_json(data: Any) -> None:
2025-06-06T02:21:07.1083474Z 26 |     """Print data as formatted JSON."""
2025-06-06T02:21:07.1083618Z 27 |     print(json.dumps(data, indent=2))
2025-06-06T02:21:07.1083693Z    |     ^^^^^ T201
2025-06-06T02:21:07.1083764Z    |
2025-06-06T02:21:07.1083850Z    = help: Remove `print`
2025-06-06T02:21:07.1083857Z 
2025-06-06T02:21:07.1084044Z examples/test_mem0_local.py:32:5: T201 `print` found
2025-06-06T02:21:07.1084111Z    |
2025-06-06T02:21:07.1084276Z 30 | def test_basic_memory_operations() -> None:
2025-06-06T02:21:07.1084493Z 31 |     """Test basic memory operations: add, search, get_all."""
2025-06-06T02:21:07.1084696Z 32 |     print("\n=== Testing Basic Memory Operations ===\n")
2025-06-06T02:21:07.1084770Z    |     ^^^^^ T201
2025-06-06T02:21:07.1084841Z 33 |
2025-06-06T02:21:07.1084941Z 34 |     # Initialize memory
2025-06-06T02:21:07.1085019Z    |
2025-06-06T02:21:07.1085107Z    = help: Remove `print`
2025-06-06T02:21:07.1085114Z 
2025-06-06T02:21:07.1085298Z examples/test_mem0_local.py:39:5: T201 `print` found
2025-06-06T02:21:07.1085363Z    |
2025-06-06T02:21:07.1085500Z 38 |     # Test adding a simple memory
2025-06-06T02:21:07.1085644Z 39 |     print("Adding a simple memory...")
2025-06-06T02:21:07.1085722Z    |     ^^^^^ T201
2025-06-06T02:21:07.1085822Z 40 |     result = memory.add(
2025-06-06T02:21:07.1086116Z 41 |         "I prefer dark mode in my applications and use VSCode as my primary editor.",
2025-06-06T02:21:07.1086182Z    |
2025-06-06T02:21:07.1086269Z    = help: Remove `print`
2025-06-06T02:21:07.1086277Z 
2025-06-06T02:21:07.1086453Z examples/test_mem0_local.py:45:5: T201 `print` found
2025-06-06T02:21:07.1086523Z    |
2025-06-06T02:21:07.1086680Z 43 |         metadata={"category": "preferences"},
2025-06-06T02:21:07.1086753Z 44 |     )
2025-06-06T02:21:07.1086846Z 45 |     print("Result:")
2025-06-06T02:21:07.1086928Z    |     ^^^^^ T201
2025-06-06T02:21:07.1087115Z 46 |     print_json(result)
2025-06-06T02:21:07.1087187Z    |
2025-06-06T02:21:07.1087269Z    = help: Remove `print`
2025-06-06T02:21:07.1087277Z 
2025-06-06T02:21:07.1087534Z examples/test_mem0_local.py:49:5: T201 `print` found
2025-06-06T02:21:07.1087605Z    |
2025-06-06T02:21:07.1087758Z 48 |     # Test adding conversation messages
2025-06-06T02:21:07.1088035Z 49 |     print("\nAdding conversation messages...")
2025-06-06T02:21:07.1088116Z    |     ^^^^^ T201
2025-06-06T02:21:07.1088203Z 50 |     messages = [
2025-06-06T02:21:07.1088423Z 51 |         {"role": "user", "content": "I'm allergic to shellfish."},
2025-06-06T02:21:07.1088490Z    |
2025-06-06T02:21:07.1088579Z    = help: Remove `print`
2025-06-06T02:21:07.1088587Z 
2025-06-06T02:21:07.1088765Z examples/test_mem0_local.py:58:5: T201 `print` found
2025-06-06T02:21:07.1088836Z    |
2025-06-06T02:21:07.1088905Z 56 |     ]
2025-06-06T02:21:07.1089087Z 57 |     result = memory.add(messages, user_id=user_id)
2025-06-06T02:21:07.1089189Z 58 |     print("Result:")
2025-06-06T02:21:07.1089265Z    |     ^^^^^ T201
2025-06-06T02:21:07.1089359Z 59 |     print_json(result)
2025-06-06T02:21:07.1089428Z    |
2025-06-06T02:21:07.1089516Z    = help: Remove `print`
2025-06-06T02:21:07.1089522Z 
2025-06-06T02:21:07.1089712Z examples/test_mem0_local.py:62:5: T201 `print` found
2025-06-06T02:21:07.1089779Z    |
2025-06-06T02:21:07.1089919Z 61 |     # Test searching for memories
2025-06-06T02:21:07.1090125Z 62 |     print("\nSearching for memories about allergies...")
2025-06-06T02:21:07.1090204Z    |     ^^^^^ T201
2025-06-06T02:21:07.1090505Z 63 |     search_result = memory.search("What food allergies do I have?", user_id=user_id)
2025-06-06T02:21:07.1090632Z 64 |     print("Search result:")
2025-06-06T02:21:07.1090698Z    |
2025-06-06T02:21:07.1090788Z    = help: Remove `print`
2025-06-06T02:21:07.1090795Z 
2025-06-06T02:21:07.1090981Z examples/test_mem0_local.py:64:5: T201 `print` found
2025-06-06T02:21:07.1091047Z    |
2025-06-06T02:21:07.1091255Z 62 |     print("\nSearching for memories about allergies...")
2025-06-06T02:21:07.1091548Z 63 |     search_result = memory.search("What food allergies do I have?", user_id=user_id)
2025-06-06T02:21:07.1091677Z 64 |     print("Search result:")
2025-06-06T02:21:07.1091750Z    |     ^^^^^ T201
2025-06-06T02:21:07.1091878Z 65 |     print_json(search_result)
2025-06-06T02:21:07.1091944Z    |
2025-06-06T02:21:07.1092029Z    = help: Remove `print`
2025-06-06T02:21:07.1092036Z 
2025-06-06T02:21:07.1092211Z examples/test_mem0_local.py:68:5: T201 `print` found
2025-06-06T02:21:07.1092282Z    |
2025-06-06T02:21:07.1092410Z 67 |     # Test getting all memories
2025-06-06T02:21:07.1092561Z 68 |     print("\nGetting all memories...")
2025-06-06T02:21:07.1092634Z    |     ^^^^^ T201
2025-06-06T02:21:07.1092814Z 69 |     all_memories = memory.get_all(user_id=user_id)
2025-06-06T02:21:07.1092935Z 70 |     print("All memories:")
2025-06-06T02:21:07.1093007Z    |
2025-06-06T02:21:07.1093094Z    = help: Remove `print`
2025-06-06T02:21:07.1093105Z 
2025-06-06T02:21:07.1093293Z examples/test_mem0_local.py:70:5: T201 `print` found
2025-06-06T02:21:07.1093360Z    |
2025-06-06T02:21:07.1093515Z 68 |     print("\nGetting all memories...")
2025-06-06T02:21:07.1093688Z 69 |     all_memories = memory.get_all(user_id=user_id)
2025-06-06T02:21:07.1093811Z 70 |     print("All memories:")
2025-06-06T02:21:07.1093885Z    |     ^^^^^ T201
2025-06-06T02:21:07.1094012Z 71 |     print_json(all_memories)
2025-06-06T02:21:07.1094076Z    |
2025-06-06T02:21:07.1094159Z    = help: Remove `print`
2025-06-06T02:21:07.1094167Z 
2025-06-06T02:21:07.1094568Z examples/test_mem0_local.py:77:36: FA100 Add `from __future__ import annotations` to simplify `typing.Optional`
2025-06-06T02:21:07.1094638Z    |
2025-06-06T02:21:07.1094853Z 77 | def test_memory_updates(memory_id: Optional[str]) -> None:
2025-06-06T02:21:07.1094982Z    |                                    ^^^^^^^^ FA100
2025-06-06T02:21:07.1095164Z 78 |     """Test memory update and history operations."""
2025-06-06T02:21:07.1095401Z 79 |     if not memory_id:
2025-06-06T02:21:07.1095469Z    |
2025-06-06T02:21:07.1095478Z 
2025-06-06T02:21:07.1095663Z examples/test_mem0_local.py:80:9: T201 `print` found
2025-06-06T02:21:07.1095831Z    |
2025-06-06T02:21:07.1096020Z 78 |     """Test memory update and history operations."""
2025-06-06T02:21:07.1096115Z 79 |     if not memory_id:
2025-06-06T02:21:07.1096323Z 80 |         print("No memory ID available for update testing.")
2025-06-06T02:21:07.1096399Z    |         ^^^^^ T201
2025-06-06T02:21:07.1096488Z 81 |         return
2025-06-06T02:21:07.1096555Z    |
2025-06-06T02:21:07.1096644Z    = help: Remove `print`
2025-06-06T02:21:07.1096652Z 
2025-06-06T02:21:07.1096833Z examples/test_mem0_local.py:83:5: T201 `print` found
2025-06-06T02:21:07.1096906Z    |
2025-06-06T02:21:07.1096990Z 81 |         return
2025-06-06T02:21:07.1097061Z 82 |
2025-06-06T02:21:07.1097257Z 83 |     print("\n=== Testing Memory Updates and History ===\n")
2025-06-06T02:21:07.1097337Z    |     ^^^^^ T201
2025-06-06T02:21:07.1097402Z 84 |
2025-06-06T02:21:07.1097505Z 85 |     # Initialize memory
2025-06-06T02:21:07.1097572Z    |
2025-06-06T02:21:07.1097661Z    = help: Remove `print`
2025-06-06T02:21:07.1097671Z 
2025-06-06T02:21:07.1097953Z examples/test_mem0_local.py:89:5: T201 `print` found
2025-06-06T02:21:07.1098027Z    |
2025-06-06T02:21:07.1098153Z 88 |     # Test updating a memory
2025-06-06T02:21:07.1098323Z 89 |     print(f"Updating memory {memory_id}...")
2025-06-06T02:21:07.1098398Z    |     ^^^^^ T201
2025-06-06T02:21:07.1098544Z 90 |     update_result = memory.update(
2025-06-06T02:21:07.1098664Z 91 |         memory_id=memory_id,
2025-06-06T02:21:07.1098736Z    |
2025-06-06T02:21:07.1098821Z    = help: Remove `print`
2025-06-06T02:21:07.1098835Z 
2025-06-06T02:21:07.1099015Z examples/test_mem0_local.py:94:5: T201 `print` found
2025-06-06T02:21:07.1099092Z    |
2025-06-06T02:21:07.1099432Z 92 |         data="I prefer dark mode in all applications and use VSCode and PyCharm as my editors.",
2025-06-06T02:21:07.1099513Z 93 |     )
2025-06-06T02:21:07.1099638Z 94 |     print("Update result:")
2025-06-06T02:21:07.1099718Z    |     ^^^^^ T201
2025-06-06T02:21:07.1099845Z 95 |     print_json(update_result)
2025-06-06T02:21:07.1099913Z    |
2025-06-06T02:21:07.1099997Z    = help: Remove `print`
2025-06-06T02:21:07.1100004Z 
2025-06-06T02:21:07.1100184Z examples/test_mem0_local.py:98:5: T201 `print` found
2025-06-06T02:21:07.1100250Z     |
2025-06-06T02:21:07.1100369Z  97 |     # Test getting memory history
2025-06-06T02:21:07.1100500Z  98 |     print("\nGetting memory history...")
2025-06-06T02:21:07.1100584Z     |     ^^^^^ T201
2025-06-06T02:21:07.1100759Z  99 |     history_result = memory.history(memory_id=memory_id)
2025-06-06T02:21:07.1100890Z 100 |     print("History result:")
2025-06-06T02:21:07.1100959Z     |
2025-06-06T02:21:07.1101051Z     = help: Remove `print`
2025-06-06T02:21:07.1101059Z 
2025-06-06T02:21:07.1101250Z examples/test_mem0_local.py:100:5: T201 `print` found
2025-06-06T02:21:07.1101327Z     |
2025-06-06T02:21:07.1101458Z  98 |     print("\nGetting memory history...")
2025-06-06T02:21:07.1101631Z  99 |     history_result = memory.history(memory_id=memory_id)
2025-06-06T02:21:07.1101756Z 100 |     print("History result:")
2025-06-06T02:21:07.1101841Z     |     ^^^^^ T201
2025-06-06T02:21:07.1101967Z 101 |     print_json(history_result)
2025-06-06T02:21:07.1102041Z     |
2025-06-06T02:21:07.1102124Z     = help: Remove `print`
2025-06-06T02:21:07.1102131Z 
2025-06-06T02:21:07.1102324Z examples/test_mem0_local.py:106:5: T201 `print` found
2025-06-06T02:21:07.1102391Z     |
2025-06-06T02:21:07.1102574Z 104 | def test_memory_deletion(user_id: str) -> None:
2025-06-06T02:21:07.1102731Z 105 |     """Test memory deletion operations."""
2025-06-06T02:21:07.1102907Z 106 |     print("\n=== Testing Memory Deletion ===\n")
2025-06-06T02:21:07.1102981Z     |     ^^^^^ T201
2025-06-06T02:21:07.1103055Z 107 |
2025-06-06T02:21:07.1103155Z 108 |     # Initialize memory
2025-06-06T02:21:07.1103351Z     |
2025-06-06T02:21:07.1103438Z     = help: Remove `print`
2025-06-06T02:21:07.1103447Z 
2025-06-06T02:21:07.1103639Z examples/test_mem0_local.py:112:5: T201 `print` found
2025-06-06T02:21:07.1103807Z     |
2025-06-06T02:21:07.1103996Z 111 |     # Add a temporary memory for deletion testing
2025-06-06T02:21:07.1104228Z 112 |     print("Adding a temporary memory for deletion testing...")
2025-06-06T02:21:07.1104304Z     |     ^^^^^ T201
2025-06-06T02:21:07.1104419Z 113 |     result = memory.add(
2025-06-06T02:21:07.1104626Z 114 |         "This is a temporary memory that will be deleted.",
2025-06-06T02:21:07.1104691Z     |
2025-06-06T02:21:07.1104781Z     = help: Remove `print`
2025-06-06T02:21:07.1104789Z 
2025-06-06T02:21:07.1104974Z examples/test_mem0_local.py:121:9: T201 `print` found
2025-06-06T02:21:07.1105050Z     |
2025-06-06T02:21:07.1105146Z 120 |     if not memory_id:
2025-06-06T02:21:07.1105405Z 121 |         print("Failed to create temporary memory for deletion testing.")
2025-06-06T02:21:07.1105487Z     |         ^^^^^ T201
2025-06-06T02:21:07.1105581Z 122 |         return
2025-06-06T02:21:07.1105648Z     |
2025-06-06T02:21:07.1105736Z     = help: Remove `print`
2025-06-06T02:21:07.1105743Z 
2025-06-06T02:21:07.1105938Z examples/test_mem0_local.py:125:5: T201 `print` found
2025-06-06T02:21:07.1106005Z     |
2025-06-06T02:21:07.1106158Z 124 |     # Test deleting a specific memory
2025-06-06T02:21:07.1106324Z 125 |     print(f"\nDeleting memory {memory_id}...")
2025-06-06T02:21:07.1106404Z     |     ^^^^^ T201
2025-06-06T02:21:07.1106601Z 126 |     delete_result = memory.delete(memory_id=memory_id)
2025-06-06T02:21:07.1106723Z 127 |     print("Delete result:")
2025-06-06T02:21:07.1106791Z     |
2025-06-06T02:21:07.1106874Z     = help: Remove `print`
2025-06-06T02:21:07.1106882Z 
2025-06-06T02:21:07.1107062Z examples/test_mem0_local.py:127:5: T201 `print` found
2025-06-06T02:21:07.1107135Z     |
2025-06-06T02:21:07.1107311Z 125 |     print(f"\nDeleting memory {memory_id}...")
2025-06-06T02:21:07.1107518Z 126 |     delete_result = memory.delete(memory_id=memory_id)
2025-06-06T02:21:07.1107646Z 127 |     print("Delete result:")
2025-06-06T02:21:07.1107729Z     |     ^^^^^ T201
2025-06-06T02:21:07.1107957Z 128 |     print_json(delete_result)
2025-06-06T02:21:07.1108034Z     |
2025-06-06T02:21:07.1108122Z     = help: Remove `print`
2025-06-06T02:21:07.1108129Z 
2025-06-06T02:21:07.1108387Z examples/test_mem0_local.py:132:5: ERA001 Found commented-out code
2025-06-06T02:21:07.1108457Z     |
2025-06-06T02:21:07.1108626Z 130 |     # Test deleting all memories for a user
2025-06-06T02:21:07.1108859Z 131 |     # Commented out to avoid accidentally deleting all memories
2025-06-06T02:21:07.1109083Z 132 |     # print(f"\nDeleting all memories for user {user_id}...")
2025-06-06T02:21:07.1109225Z     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ERA001
2025-06-06T02:21:07.1109439Z 133 |     # delete_all_result = memory.delete_all(user_id=user_id)
2025-06-06T02:21:07.1109581Z 134 |     # print("Delete all result:")
2025-06-06T02:21:07.1109655Z     |
2025-06-06T02:21:07.1109775Z     = help: Remove commented-out code
2025-06-06T02:21:07.1109783Z 
2025-06-06T02:21:07.1110035Z examples/test_mem0_local.py:133:5: ERA001 Found commented-out code
2025-06-06T02:21:07.1110104Z     |
2025-06-06T02:21:07.1110335Z 131 |     # Commented out to avoid accidentally deleting all memories
2025-06-06T02:21:07.1110546Z 132 |     # print(f"\nDeleting all memories for user {user_id}...")
2025-06-06T02:21:07.1110759Z 133 |     # delete_all_result = memory.delete_all(user_id=user_id)
2025-06-06T02:21:07.1110898Z     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ERA001
2025-06-06T02:21:07.1111040Z 134 |     # print("Delete all result:")
2025-06-06T02:21:07.1111180Z 135 |     # print_json(delete_all_result)
2025-06-06T02:21:07.1111254Z     |
2025-06-06T02:21:07.1111372Z     = help: Remove commented-out code
2025-06-06T02:21:07.1111386Z 
2025-06-06T02:21:07.1111623Z examples/test_mem0_local.py:134:5: ERA001 Found commented-out code
2025-06-06T02:21:07.1111820Z     |
2025-06-06T02:21:07.1112034Z 132 |     # print(f"\nDeleting all memories for user {user_id}...")
2025-06-06T02:21:07.1112344Z 133 |     # delete_all_result = memory.delete_all(user_id=user_id)
2025-06-06T02:21:07.1112478Z 134 |     # print("Delete all result:")
2025-06-06T02:21:07.1112595Z     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ERA001
2025-06-06T02:21:07.1112732Z 135 |     # print_json(delete_all_result)
2025-06-06T02:21:07.1112800Z     |
2025-06-06T02:21:07.1112913Z     = help: Remove commented-out code
2025-06-06T02:21:07.1112921Z 
2025-06-06T02:21:07.1113165Z examples/test_mem0_local.py:135:5: ERA001 Found commented-out code
2025-06-06T02:21:07.1113234Z     |
2025-06-06T02:21:07.1113444Z 133 |     # delete_all_result = memory.delete_all(user_id=user_id)
2025-06-06T02:21:07.1113577Z 134 |     # print("Delete all result:")
2025-06-06T02:21:07.1113718Z 135 |     # print_json(delete_all_result)
2025-06-06T02:21:07.1113834Z     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ERA001
2025-06-06T02:21:07.1113915Z     |
2025-06-06T02:21:07.1114030Z     = help: Remove commented-out code
2025-06-06T02:21:07.1114037Z 
2025-06-06T02:21:07.1114514Z examples/test_mem0_local.py:139:5: D401 First line of docstring should be in imperative mood: "Main function to run all tests."
2025-06-06T02:21:07.1114583Z     |
2025-06-06T02:21:07.1114684Z 138 | def main() -> None:
2025-06-06T02:21:07.1114837Z 139 |     """Main function to run all tests."""
2025-06-06T02:21:07.1114962Z     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ D401
2025-06-06T02:21:07.1115103Z 140 |     # Check if OpenAI API key is set
2025-06-06T02:21:07.1115259Z 141 |     if "OPENAI_API_KEY" not in os.environ:
2025-06-06T02:21:07.1115324Z     |
2025-06-06T02:21:07.1115331Z 
2025-06-06T02:21:07.1115524Z examples/test_mem0_local.py:142:9: T201 `print` found
2025-06-06T02:21:07.1115592Z     |
2025-06-06T02:21:07.1115739Z 140 |     # Check if OpenAI API key is set
2025-06-06T02:21:07.1115891Z 141 |     if "OPENAI_API_KEY" not in os.environ:
2025-06-06T02:21:07.1116144Z 142 |         print("Error: OPENAI_API_KEY environment variable not set.")
2025-06-06T02:21:07.1116226Z     |         ^^^^^ T201
2025-06-06T02:21:07.1116482Z 143 |         print("mem0 requires an OpenAI API key to function properly.")
2025-06-06T02:21:07.1116714Z 144 |         print("Set it with: export OPENAI_API_KEY='your-api-key'")
2025-06-06T02:21:07.1116788Z     |
2025-06-06T02:21:07.1116877Z     = help: Remove `print`
2025-06-06T02:21:07.1116890Z 
2025-06-06T02:21:07.1117082Z examples/test_mem0_local.py:143:9: T201 `print` found
2025-06-06T02:21:07.1117150Z     |
2025-06-06T02:21:07.1117310Z 141 |     if "OPENAI_API_KEY" not in os.environ:
2025-06-06T02:21:07.1117549Z 142 |         print("Error: OPENAI_API_KEY environment variable not set.")
2025-06-06T02:21:07.1117798Z 143 |         print("mem0 requires an OpenAI API key to function properly.")
2025-06-06T02:21:07.1117980Z     |         ^^^^^ T201
2025-06-06T02:21:07.1118202Z 144 |         print("Set it with: export OPENAI_API_KEY='your-api-key'")
2025-06-06T02:21:07.1118296Z 145 |         return
2025-06-06T02:21:07.1118365Z     |
2025-06-06T02:21:07.1118455Z     = help: Remove `print`
2025-06-06T02:21:07.1118466Z 
2025-06-06T02:21:07.1118652Z examples/test_mem0_local.py:144:9: T201 `print` found
2025-06-06T02:21:07.1118724Z     |
2025-06-06T02:21:07.1118957Z 142 |         print("Error: OPENAI_API_KEY environment variable not set.")
2025-06-06T02:21:07.1119203Z 143 |         print("mem0 requires an OpenAI API key to function properly.")
2025-06-06T02:21:07.1119423Z 144 |         print("Set it with: export OPENAI_API_KEY='your-api-key'")
2025-06-06T02:21:07.1119506Z     |         ^^^^^ T201
2025-06-06T02:21:07.1119592Z 145 |         return
2025-06-06T02:21:07.1119664Z     |
2025-06-06T02:21:07.1119748Z     = help: Remove `print`
2025-06-06T02:21:07.1119756Z 
2025-06-06T02:21:07.1119946Z examples/test_mem0_local.py:153:5: T201 `print` found
2025-06-06T02:21:07.1120012Z     |
2025-06-06T02:21:07.1120273Z 151 |     test_memory_deletion(user_id)
2025-06-06T02:21:07.1120344Z 152 |
2025-06-06T02:21:07.1120513Z 153 |     print("\n=== All Tests Completed ===\n")
2025-06-06T02:21:07.1120588Z     |     ^^^^^ T201
2025-06-06T02:21:07.1120766Z     |
2025-06-06T02:21:07.1120856Z     = help: Remove `print`
2025-06-06T02:21:07.1120864Z 
2025-06-06T02:21:07.1121147Z fix_line_endings.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1121215Z   |
2025-06-06T02:21:07.1121319Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1121423Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1121558Z 2 | """Fix line endings in a file."""
2025-06-06T02:21:07.1121626Z   |
2025-06-06T02:21:07.1121633Z 
2025-06-06T02:21:07.1121938Z generate_bandit_config.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1122006Z   |
2025-06-06T02:21:07.1122110Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1122208Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1122284Z 2 | """
2025-06-06T02:21:07.1122534Z 3 | Generate Bandit configuration files for GitHub Actions workflows.
2025-06-06T02:21:07.1122607Z   |
2025-06-06T02:21:07.1122614Z 
2025-06-06T02:21:07.1122939Z generate_bandit_config_fixed.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1123011Z   |
2025-06-06T02:21:07.1123107Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1123209Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1123279Z 2 | """
2025-06-06T02:21:07.1123491Z 3 | Generate Bandit Configuration Files for GitHub Actions.
2025-06-06T02:21:07.1123564Z   |
2025-06-06T02:21:07.1123571Z 
2025-06-06T02:21:07.1123833Z init_agent_db.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1123899Z   |
2025-06-06T02:21:07.1124001Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1124097Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1124346Z 2 | """init_agent_db.py - Initialize the agent database with test data."""
2025-06-06T02:21:07.1124412Z   |
2025-06-06T02:21:07.1124429Z 
2025-06-06T02:21:07.1124664Z init_db.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1124736Z   |
2025-06-06T02:21:07.1124832Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1124936Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1125188Z 2 | """init_db.py - Initialize the database with tables and initial data."""
2025-06-06T02:21:07.1125259Z   |
2025-06-06T02:21:07.1125266Z 
2025-06-06T02:21:07.1125567Z install_crewai_for_tests.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1125640Z   |
2025-06-06T02:21:07.1125736Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1125838Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1125906Z 2 | """
2025-06-06T02:21:07.1126084Z 3 | Install CrewAI and its dependencies for tests.
2025-06-06T02:21:07.1126150Z   |
2025-06-06T02:21:07.1126157Z 
2025-06-06T02:21:07.1126430Z install_mcp_sdk.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1126502Z   |
2025-06-06T02:21:07.1126598Z 1 | #!/usr/bin/env python
2025-06-06T02:21:07.1126693Z   | ^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1126762Z 2 | """
2025-06-06T02:21:07.1126911Z 3 | Wrapper script to install the MCP SDK.
2025-06-06T02:21:07.1126984Z   |
2025-06-06T02:21:07.1126991Z 
2025-06-06T02:21:07.1127386Z interfaces/knowledge_interfaces.py:63:5: D205 1 blank line required between summary line and description
2025-06-06T02:21:07.1127460Z    |
2025-06-06T02:21:07.1127595Z 62 |   class KnowledgeSource(ABC):
2025-06-06T02:21:07.1127673Z 63 | /     """
2025-06-06T02:21:07.1128052Z 64 | |     Abstract base class for a knowledge source (e.g., mem0, vector database).
2025-06-06T02:21:07.1128328Z 65 | |     To add a new knowledge source, subclass this and implement all methods.
2025-06-06T02:21:07.1128401Z 66 | |     """
2025-06-06T02:21:07.1128482Z    | |_______^ D205
2025-06-06T02:21:07.1128549Z 67 |
2025-06-06T02:21:07.1128651Z 68 |       @abstractmethod
2025-06-06T02:21:07.1128718Z    |
2025-06-06T02:21:07.1128960Z    = help: Insert single blank line
2025-06-06T02:21:07.1128968Z 
2025-06-06T02:21:07.1129294Z interfaces/knowledge_interfaces.py:69:48: ANN003 Missing type annotation for `**kwargs`
2025-06-06T02:21:07.1129503Z    |
2025-06-06T02:21:07.1129604Z 68 |     @abstractmethod
2025-06-06T02:21:07.1129890Z 69 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T02:21:07.1130030Z    |                                                ^^^^^^^^ ANN003
2025-06-06T02:21:07.1130110Z 70 |         """
2025-06-06T02:21:07.1130355Z 71 |         Search for relevant information given a query and user context.
2025-06-06T02:21:07.1130428Z    |
2025-06-06T02:21:07.1130435Z 
2025-06-06T02:21:07.1130862Z interfaces/knowledge_interfaces.py:69:61: FA100 Add `from __future__ import annotations` to simplify `typing.List`
2025-06-06T02:21:07.1130935Z    |
2025-06-06T02:21:07.1131030Z 68 |     @abstractmethod
2025-06-06T02:21:07.1131310Z 69 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T02:21:07.1131459Z    |                                                             ^^^^ FA100
2025-06-06T02:21:07.1131530Z 70 |         """
2025-06-06T02:21:07.1131778Z 71 |         Search for relevant information given a query and user context.
2025-06-06T02:21:07.1131848Z    |
2025-06-06T02:21:07.1131855Z 
2025-06-06T02:21:07.1132287Z interfaces/knowledge_interfaces.py:69:66: FA100 Add `from __future__ import annotations` to simplify `typing.Dict`
2025-06-06T02:21:07.1132354Z    |
2025-06-06T02:21:07.1132453Z 68 |     @abstractmethod
2025-06-06T02:21:07.1132726Z 69 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T02:21:07.1132873Z    |                                                                  ^^^^ FA100
2025-06-06T02:21:07.1132942Z 70 |         """
2025-06-06T02:21:07.1133185Z 71 |         Search for relevant information given a query and user context.
2025-06-06T02:21:07.1133253Z    |
2025-06-06T02:21:07.1133264Z 
2025-06-06T02:21:07.1133591Z interfaces/knowledge_interfaces.py:84:47: ANN003 Missing type annotation for `**kwargs`
2025-06-06T02:21:07.1133658Z    |
2025-06-06T02:21:07.1133755Z 83 |     @abstractmethod
2025-06-06T02:21:07.1133979Z 84 |     def add(self, content: str, user_id: str, **kwargs) -> Any:
2025-06-06T02:21:07.1134121Z    |                                               ^^^^^^^^ ANN003
2025-06-06T02:21:07.1134193Z 85 |         """
2025-06-06T02:21:07.1134367Z 86 |         Add new knowledge/content to the source.
2025-06-06T02:21:07.1134435Z    |
2025-06-06T02:21:07.1134443Z 
2025-06-06T02:21:07.1134895Z interfaces/knowledge_interfaces.py:84:60: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `add`
2025-06-06T02:21:07.1134962Z    |
2025-06-06T02:21:07.1135062Z 83 |     @abstractmethod
2025-06-06T02:21:07.1135279Z 84 |     def add(self, content: str, user_id: str, **kwargs) -> Any:
2025-06-06T02:21:07.1135424Z    |                                                            ^^^ ANN401
2025-06-06T02:21:07.1135505Z 85 |         """
2025-06-06T02:21:07.1135679Z 86 |         Add new knowledge/content to the source.
2025-06-06T02:21:07.1135747Z    |
2025-06-06T02:21:07.1135754Z 
2025-06-06T02:21:07.1136085Z interfaces/knowledge_interfaces.py:98:71: ANN003 Missing type annotation for `**kwargs`
2025-06-06T02:21:07.1136155Z     |
2025-06-06T02:21:07.1136238Z  96 |         """
2025-06-06T02:21:07.1136309Z  97 |
2025-06-06T02:21:07.1136593Z  98 |     def update(self, content_id: str, new_content: str, user_id: str, **kwargs) -> Any:
2025-06-06T02:21:07.1136751Z     |                                                                       ^^^^^^^^ ANN003
2025-06-06T02:21:07.1136824Z  99 |         """
2025-06-06T02:21:07.1137019Z 100 |         Optionally update existing knowledge entry.
2025-06-06T02:21:07.1137089Z     |
2025-06-06T02:21:07.1137097Z 
2025-06-06T02:21:07.1137557Z interfaces/knowledge_interfaces.py:98:84: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `update`
2025-06-06T02:21:07.1137713Z     |
2025-06-06T02:21:07.1137789Z  96 |         """
2025-06-06T02:21:07.1137955Z  97 |
2025-06-06T02:21:07.1138332Z  98 |     def update(self, content_id: str, new_content: str, user_id: str, **kwargs) -> Any:
2025-06-06T02:21:07.1138503Z     |                                                                                    ^^^ ANN401
2025-06-06T02:21:07.1138583Z  99 |         """
2025-06-06T02:21:07.1138763Z 100 |         Optionally update existing knowledge entry.
2025-06-06T02:21:07.1138838Z     |
2025-06-06T02:21:07.1138847Z 
2025-06-06T02:21:07.1139276Z interfaces/knowledge_interfaces.py:112:35: EM101 Exception must not use a string literal, assign to variable first
2025-06-06T02:21:07.1139351Z     |
2025-06-06T02:21:07.1139431Z 111 |         """
2025-06-06T02:21:07.1139783Z 112 |         raise NotImplementedError("Update not implemented for this source.")
2025-06-06T02:21:07.1139966Z     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ EM101
2025-06-06T02:21:07.1140270Z 113 |
2025-06-06T02:21:07.1140571Z 114 |     def delete(self, content_id: str, user_id: str, **kwargs) -> Any:
2025-06-06T02:21:07.1140708Z     |
2025-06-06T02:21:07.1140893Z     = help: Assign to variable; remove string literal
2025-06-06T02:21:07.1140901Z 
2025-06-06T02:21:07.1141295Z interfaces/knowledge_interfaces.py:114:53: ANN003 Missing type annotation for `**kwargs`
2025-06-06T02:21:07.1141382Z     |
2025-06-06T02:21:07.1141831Z 112 |         raise NotImplementedError("Update not implemented for this source.")
2025-06-06T02:21:07.1141935Z 113 |
2025-06-06T02:21:07.1142249Z 114 |     def delete(self, content_id: str, user_id: str, **kwargs) -> Any:
2025-06-06T02:21:07.1142426Z     |                                                     ^^^^^^^^ ANN003
2025-06-06T02:21:07.1142560Z 115 |         """
2025-06-06T02:21:07.1142786Z 116 |         Optionally delete an entry.
2025-06-06T02:21:07.1142940Z     |
2025-06-06T02:21:07.1142948Z 
2025-06-06T02:21:07.1143439Z interfaces/knowledge_interfaces.py:114:66: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `delete`
2025-06-06T02:21:07.1143582Z     |
2025-06-06T02:21:07.1143895Z 112 |         raise NotImplementedError("Update not implemented for this source.")
2025-06-06T02:21:07.1144064Z 113 |
2025-06-06T02:21:07.1144388Z 114 |     def delete(self, content_id: str, user_id: str, **kwargs) -> Any:
2025-06-06T02:21:07.1144603Z     |                                                                  ^^^ ANN401
2025-06-06T02:21:07.1144716Z 115 |         """
2025-06-06T02:21:07.1144924Z 116 |         Optionally delete an entry.
2025-06-06T02:21:07.1145092Z     |
2025-06-06T02:21:07.1145100Z 
2025-06-06T02:21:07.1145583Z interfaces/knowledge_interfaces.py:127:35: EM101 Exception must not use a string literal, assign to variable first
2025-06-06T02:21:07.1145722Z     |
2025-06-06T02:21:07.1145836Z 126 |         """
2025-06-06T02:21:07.1146187Z 127 |         raise NotImplementedError("Delete not implemented for this source.")
2025-06-06T02:21:07.1146364Z     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ EM101
2025-06-06T02:21:07.1146602Z     |
2025-06-06T02:21:07.1146795Z     = help: Assign to variable; remove string literal
2025-06-06T02:21:07.1146803Z 
2025-06-06T02:21:07.1147207Z interfaces/knowledge_interfaces.py:131:5: D200 One-line docstring should fit on one line
2025-06-06T02:21:07.1147310Z     |
2025-06-06T02:21:07.1147545Z 130 |   class Mem0KnowledgeSource(KnowledgeSource):
2025-06-06T02:21:07.1147699Z 131 | /     """
2025-06-06T02:21:07.1148219Z 132 | |     Concrete implementation of KnowledgeSource for mem0 (Memory API).
2025-06-06T02:21:07.1148329Z 133 | |     """
2025-06-06T02:21:07.1148475Z     | |_______^ D200
2025-06-06T02:21:07.1148578Z 134 |
2025-06-06T02:21:07.1148877Z 135 |       def __init__(self, mem0_client: Any):
2025-06-06T02:21:07.1148998Z     |
2025-06-06T02:21:07.1149181Z     = help: Reformat to one line
2025-06-06T02:21:07.1149190Z 
2025-06-06T02:21:07.1149779Z interfaces/knowledge_interfaces.py:135:9: ANN204 Missing return type annotation for special method `__init__`
2025-06-06T02:21:07.1149923Z     |
2025-06-06T02:21:07.1150014Z 133 |     """
2025-06-06T02:21:07.1159919Z 134 |
2025-06-06T02:21:07.1160318Z 135 |     def __init__(self, mem0_client: Any):
2025-06-06T02:21:07.1160429Z     |         ^^^^^^^^ ANN204
2025-06-06T02:21:07.1160520Z 136 |         """
2025-06-06T02:21:07.1160614Z 137 |         Args:
2025-06-06T02:21:07.1160687Z     |
2025-06-06T02:21:07.1160840Z     = help: Add return type annotation: `None`
2025-06-06T02:21:07.1160851Z 
2025-06-06T02:21:07.1161361Z interfaces/knowledge_interfaces.py:135:37: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `mem0_client`
2025-06-06T02:21:07.1161439Z     |
2025-06-06T02:21:07.1161512Z 133 |     """
2025-06-06T02:21:07.1161586Z 134 |
2025-06-06T02:21:07.1161756Z 135 |     def __init__(self, mem0_client: Any):
2025-06-06T02:21:07.1161891Z     |                                     ^^^ ANN401
2025-06-06T02:21:07.1161983Z 136 |         """
2025-06-06T02:21:07.1162073Z 137 |         Args:
2025-06-06T02:21:07.1162143Z     |
2025-06-06T02:21:07.1162151Z 
2025-06-06T02:21:07.1162580Z interfaces/knowledge_interfaces.py:136:9: D205 1 blank line required between summary line and description
2025-06-06T02:21:07.1162652Z     |
2025-06-06T02:21:07.1162828Z 135 |       def __init__(self, mem0_client: Any):
2025-06-06T02:21:07.1162912Z 136 | /         """
2025-06-06T02:21:07.1163005Z 137 | |         Args:
2025-06-06T02:21:07.1163251Z 138 | |             mem0_client: Initialized client for mem0's Memory API.
2025-06-06T02:21:07.1163327Z 139 | |
2025-06-06T02:21:07.1163412Z 140 | |         """
2025-06-06T02:21:07.1163502Z     | |___________^ D205
2025-06-06T02:21:07.1163800Z 141 |           self.mem0_client = mem0_client  # Stub: Replace with actual mem0 client
2025-06-06T02:21:07.1163875Z     |
2025-06-06T02:21:07.1163997Z     = help: Insert single blank line
2025-06-06T02:21:07.1164012Z 
2025-06-06T02:21:07.1164342Z interfaces/knowledge_interfaces.py:143:34: ARG002 Unused method argument: `user_id`
2025-06-06T02:21:07.1164412Z     |
2025-06-06T02:21:07.1164699Z 141 |         self.mem0_client = mem0_client  # Stub: Replace with actual mem0 client
2025-06-06T02:21:07.1164775Z 142 |
2025-06-06T02:21:07.1165063Z 143 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T02:21:07.1165197Z     |                                  ^^^^^^^ ARG002
2025-06-06T02:21:07.1165281Z 144 |         """
2025-06-06T02:21:07.1165448Z 145 |         Search mem0 for relevant memories.
2025-06-06T02:21:07.1165521Z     |
2025-06-06T02:21:07.1165529Z 
2025-06-06T02:21:07.1165868Z interfaces/knowledge_interfaces.py:143:48: ANN003 Missing type annotation for `**kwargs`
2025-06-06T02:21:07.1165938Z     |
2025-06-06T02:21:07.1166216Z 141 |         self.mem0_client = mem0_client  # Stub: Replace with actual mem0 client
2025-06-06T02:21:07.1166285Z 142 |
2025-06-06T02:21:07.1166584Z 143 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T02:21:07.1166733Z     |                                                ^^^^^^^^ ANN003
2025-06-06T02:21:07.1166822Z 144 |         """
2025-06-06T02:21:07.1166983Z 145 |         Search mem0 for relevant memories.
2025-06-06T02:21:07.1167058Z     |
2025-06-06T02:21:07.1167065Z 
2025-06-06T02:21:07.1167390Z interfaces/knowledge_interfaces.py:143:50: ARG002 Unused method argument: `kwargs`
2025-06-06T02:21:07.1167463Z     |
2025-06-06T02:21:07.1167734Z 141 |         self.mem0_client = mem0_client  # Stub: Replace with actual mem0 client
2025-06-06T02:21:07.1167931Z 142 |
2025-06-06T02:21:07.1168224Z 143 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T02:21:07.1168426Z     |                                                  ^^^^^^ ARG002
2025-06-06T02:21:07.1168508Z 144 |         """
2025-06-06T02:21:07.1168669Z 145 |         Search mem0 for relevant memories.
2025-06-06T02:21:07.1168738Z     |
2025-06-06T02:21:07.1168875Z 
2025-06-06T02:21:07.1169327Z interfaces/knowledge_interfaces.py:143:61: FA100 Add `from __future__ import annotations` to simplify `typing.List`
2025-06-06T02:21:07.1169397Z     |
2025-06-06T02:21:07.1169782Z 141 |         self.mem0_client = mem0_client  # Stub: Replace with actual mem0 client
2025-06-06T02:21:07.1169856Z 142 |
2025-06-06T02:21:07.1170149Z 143 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T02:21:07.1170296Z     |                                                             ^^^^ FA100
2025-06-06T02:21:07.1170380Z 144 |         """
2025-06-06T02:21:07.1170534Z 145 |         Search mem0 for relevant memories.
2025-06-06T02:21:07.1170606Z     |
2025-06-06T02:21:07.1170614Z 
2025-06-06T02:21:07.1171047Z interfaces/knowledge_interfaces.py:143:66: FA100 Add `from __future__ import annotations` to simplify `typing.Dict`
2025-06-06T02:21:07.1171115Z     |
2025-06-06T02:21:07.1171392Z 141 |         self.mem0_client = mem0_client  # Stub: Replace with actual mem0 client
2025-06-06T02:21:07.1171465Z 142 |
2025-06-06T02:21:07.1171752Z 143 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T02:21:07.1171905Z     |                                                                  ^^^^ FA100
2025-06-06T02:21:07.1171992Z 144 |         """
2025-06-06T02:21:07.1172143Z 145 |         Search mem0 for relevant memories.
2025-06-06T02:21:07.1172217Z     |
2025-06-06T02:21:07.1172224Z 
2025-06-06T02:21:07.1172554Z interfaces/knowledge_interfaces.py:144:9: D200 One-line docstring should fit on one line
2025-06-06T02:21:07.1172628Z     |
2025-06-06T02:21:07.1173014Z 143 |       def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T02:21:07.1173110Z 144 | /         """
2025-06-06T02:21:07.1173292Z 145 | |         Search mem0 for relevant memories.
2025-06-06T02:21:07.1173455Z 146 | |         """
2025-06-06T02:21:07.1173597Z     | |___________^ D200
2025-06-06T02:21:07.1173864Z 147 |           # Stub: Replace with actual call to mem0's Memory API
2025-06-06T02:21:07.1173959Z 148 |           # Example:
2025-06-06T02:21:07.1174030Z     |
2025-06-06T02:21:07.1174146Z     = help: Reformat to one line
2025-06-06T02:21:07.1174158Z 
2025-06-06T02:21:07.1174446Z interfaces/knowledge_interfaces.py:149:9: ERA001 Found commented-out code
2025-06-06T02:21:07.1174516Z     |
2025-06-06T02:21:07.1174728Z 147 |         # Stub: Replace with actual call to mem0's Memory API
2025-06-06T02:21:07.1174819Z 148 |         # Example:
2025-06-06T02:21:07.1175052Z 149 |         # return self.mem0_client.search(query, user_id, **kwargs)
2025-06-06T02:21:07.1175196Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ERA001
2025-06-06T02:21:07.1175453Z 150 |         return [{"source": "mem0", "content": f"Stub memory for '{query}'"}]
2025-06-06T02:21:07.1175521Z     |
2025-06-06T02:21:07.1175647Z     = help: Remove commented-out code
2025-06-06T02:21:07.1175655Z 
2025-06-06T02:21:07.1175971Z interfaces/knowledge_interfaces.py:152:33: ARG002 Unused method argument: `user_id`
2025-06-06T02:21:07.1176048Z     |
2025-06-06T02:21:07.1176296Z 150 |         return [{"source": "mem0", "content": f"Stub memory for '{query}'"}]
2025-06-06T02:21:07.1176374Z 151 |
2025-06-06T02:21:07.1176610Z 152 |     def add(self, content: str, user_id: str, **kwargs) -> Any:
2025-06-06T02:21:07.1176746Z     |                                 ^^^^^^^ ARG002
2025-06-06T02:21:07.1176835Z 153 |         """
2025-06-06T02:21:07.1176969Z 154 |         Add new content to mem0.
2025-06-06T02:21:07.1177044Z     |
2025-06-06T02:21:07.1177052Z 
2025-06-06T02:21:07.1177378Z interfaces/knowledge_interfaces.py:152:47: ANN003 Missing type annotation for `**kwargs`
2025-06-06T02:21:07.1177454Z     |
2025-06-06T02:21:07.1177701Z 150 |         return [{"source": "mem0", "content": f"Stub memory for '{query}'"}]
2025-06-06T02:21:07.1177775Z 151 |
2025-06-06T02:21:07.1178127Z 152 |     def add(self, content: str, user_id: str, **kwargs) -> Any:
2025-06-06T02:21:07.1178414Z     |                                               ^^^^^^^^ ANN003
2025-06-06T02:21:07.1178497Z 153 |         """
2025-06-06T02:21:07.1178635Z 154 |         Add new content to mem0.
2025-06-06T02:21:07.1178805Z     |
2025-06-06T02:21:07.1178814Z 
2025-06-06T02:21:07.1179128Z interfaces/knowledge_interfaces.py:152:49: ARG002 Unused method argument: `kwargs`
2025-06-06T02:21:07.1179196Z     |
2025-06-06T02:21:07.1179445Z 150 |         return [{"source": "mem0", "content": f"Stub memory for '{query}'"}]
2025-06-06T02:21:07.1179512Z 151 |
2025-06-06T02:21:07.1179734Z 152 |     def add(self, content: str, user_id: str, **kwargs) -> Any:
2025-06-06T02:21:07.1179866Z     |                                                 ^^^^^^ ARG002
2025-06-06T02:21:07.1179954Z 153 |         """
2025-06-06T02:21:07.1180084Z 154 |         Add new content to mem0.
2025-06-06T02:21:07.1180159Z     |
2025-06-06T02:21:07.1180167Z 
2025-06-06T02:21:07.1180614Z interfaces/knowledge_interfaces.py:152:60: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `add`
2025-06-06T02:21:07.1180696Z     |
2025-06-06T02:21:07.1180949Z 150 |         return [{"source": "mem0", "content": f"Stub memory for '{query}'"}]
2025-06-06T02:21:07.1181026Z 151 |
2025-06-06T02:21:07.1181243Z 152 |     def add(self, content: str, user_id: str, **kwargs) -> Any:
2025-06-06T02:21:07.1181390Z     |                                                            ^^^ ANN401
2025-06-06T02:21:07.1181471Z 153 |         """
2025-06-06T02:21:07.1181604Z 154 |         Add new content to mem0.
2025-06-06T02:21:07.1181673Z     |
2025-06-06T02:21:07.1181680Z 
2025-06-06T02:21:07.1182011Z interfaces/knowledge_interfaces.py:153:9: D200 One-line docstring should fit on one line
2025-06-06T02:21:07.1182078Z     |
2025-06-06T02:21:07.1182310Z 152 |       def add(self, content: str, user_id: str, **kwargs) -> Any:
2025-06-06T02:21:07.1182394Z 153 | /         """
2025-06-06T02:21:07.1182534Z 154 | |         Add new content to mem0.
2025-06-06T02:21:07.1182621Z 155 | |         """
2025-06-06T02:21:07.1182707Z     | |___________^ D200
2025-06-06T02:21:07.1182912Z 156 |           # Stub: Replace with actual call to mem0's add API
2025-06-06T02:21:07.1183015Z 157 |           # Example:
2025-06-06T02:21:07.1183085Z     |
2025-06-06T02:21:07.1183201Z     = help: Reformat to one line
2025-06-06T02:21:07.1183209Z 
2025-06-06T02:21:07.1183497Z interfaces/knowledge_interfaces.py:158:9: ERA001 Found commented-out code
2025-06-06T02:21:07.1183568Z     |
2025-06-06T02:21:07.1183774Z 156 |         # Stub: Replace with actual call to mem0's add API
2025-06-06T02:21:07.1183866Z 157 |         # Example:
2025-06-06T02:21:07.1184092Z 158 |         # return self.mem0_client.add(content, user_id, **kwargs)
2025-06-06T02:21:07.1184237Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ERA001
2025-06-06T02:21:07.1184481Z 159 |         return {"source": "mem0", "status": "added", "content": content}
2025-06-06T02:21:07.1184549Z     |
2025-06-06T02:21:07.1184675Z     = help: Remove commented-out code
2025-06-06T02:21:07.1184683Z 
2025-06-06T02:21:07.1185010Z interfaces/knowledge_interfaces.py:163:5: D200 One-line docstring should fit on one line
2025-06-06T02:21:07.1185085Z     |
2025-06-06T02:21:07.1185287Z 162 |   class VectorRAGKnowledgeSource(KnowledgeSource):
2025-06-06T02:21:07.1185365Z 163 | /     """
2025-06-06T02:21:07.1185709Z 164 | |     Concrete implementation of KnowledgeSource for vector database RAG (e.g., ChromaDB).
2025-06-06T02:21:07.1185789Z 165 | |     """
2025-06-06T02:21:07.1185866Z     | |_______^ D200
2025-06-06T02:21:07.1185941Z 166 |
2025-06-06T02:21:07.1186109Z 167 |       def __init__(self, vector_client: Any):
2025-06-06T02:21:07.1186187Z     |
2025-06-06T02:21:07.1186298Z     = help: Reformat to one line
2025-06-06T02:21:07.1186305Z 
2025-06-06T02:21:07.1186737Z interfaces/knowledge_interfaces.py:167:9: ANN204 Missing return type annotation for special method `__init__`
2025-06-06T02:21:07.1186808Z     |
2025-06-06T02:21:07.1187014Z 165 |     """
2025-06-06T02:21:07.1187084Z 166 |
2025-06-06T02:21:07.1187253Z 167 |     def __init__(self, vector_client: Any):
2025-06-06T02:21:07.1187335Z     |         ^^^^^^^^ ANN204
2025-06-06T02:21:07.1187491Z 168 |         """
2025-06-06T02:21:07.1187578Z 169 |         Args:
2025-06-06T02:21:07.1187651Z     |
2025-06-06T02:21:07.1187787Z     = help: Add return type annotation: `None`
2025-06-06T02:21:07.1187796Z 
2025-06-06T02:21:07.1188458Z interfaces/knowledge_interfaces.py:167:39: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `vector_client`
2025-06-06T02:21:07.1188532Z     |
2025-06-06T02:21:07.1188609Z 165 |     """
2025-06-06T02:21:07.1188682Z 166 |
2025-06-06T02:21:07.1188848Z 167 |     def __init__(self, vector_client: Any):
2025-06-06T02:21:07.1188974Z     |                                       ^^^ ANN401
2025-06-06T02:21:07.1189061Z 168 |         """
2025-06-06T02:21:07.1189146Z 169 |         Args:
2025-06-06T02:21:07.1189223Z     |
2025-06-06T02:21:07.1189236Z 
2025-06-06T02:21:07.1189631Z interfaces/knowledge_interfaces.py:168:9: D205 1 blank line required between summary line and description
2025-06-06T02:21:07.1189706Z     |
2025-06-06T02:21:07.1189876Z 167 |       def __init__(self, vector_client: Any):
2025-06-06T02:21:07.1189965Z 168 | /         """
2025-06-06T02:21:07.1190054Z 169 | |         Args:
2025-06-06T02:21:07.1190311Z 170 | |             vector_client: Initialized vector DB client (e.g., ChromaDB).
2025-06-06T02:21:07.1190381Z 171 | |
2025-06-06T02:21:07.1190465Z 172 | |         """
2025-06-06T02:21:07.1190543Z     | |___________^ D205
2025-06-06T02:21:07.1190867Z 173 |           self.vector_client = vector_client  # Stub: Replace with actual vector DB client
2025-06-06T02:21:07.1190937Z     |
2025-06-06T02:21:07.1191060Z     = help: Insert single blank line
2025-06-06T02:21:07.1191067Z 
2025-06-06T02:21:07.1191381Z interfaces/knowledge_interfaces.py:175:34: ARG002 Unused method argument: `user_id`
2025-06-06T02:21:07.1191451Z     |
2025-06-06T02:21:07.1191770Z 173 |         self.vector_client = vector_client  # Stub: Replace with actual vector DB client
2025-06-06T02:21:07.1191840Z 174 |
2025-06-06T02:21:07.1192134Z 175 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T02:21:07.1192259Z     |                                  ^^^^^^^ ARG002
2025-06-06T02:21:07.1192348Z 176 |         """
2025-06-06T02:21:07.1192518Z 177 |         Search vector DB for relevant documents.
2025-06-06T02:21:07.1192593Z     |
2025-06-06T02:21:07.1192600Z 
2025-06-06T02:21:07.1192924Z interfaces/knowledge_interfaces.py:175:48: ANN003 Missing type annotation for `**kwargs`
2025-06-06T02:21:07.1192999Z     |
2025-06-06T02:21:07.1193305Z 173 |         self.vector_client = vector_client  # Stub: Replace with actual vector DB client
2025-06-06T02:21:07.1193379Z 174 |
2025-06-06T02:21:07.1193660Z 175 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T02:21:07.1193805Z     |                                                ^^^^^^^^ ANN003
2025-06-06T02:21:07.1193891Z 176 |         """
2025-06-06T02:21:07.1194067Z 177 |         Search vector DB for relevant documents.
2025-06-06T02:21:07.1194133Z     |
2025-06-06T02:21:07.1194144Z 
2025-06-06T02:21:07.1194457Z interfaces/knowledge_interfaces.py:175:50: ARG002 Unused method argument: `kwargs`
2025-06-06T02:21:07.1194524Z     |
2025-06-06T02:21:07.1194831Z 173 |         self.vector_client = vector_client  # Stub: Replace with actual vector DB client
2025-06-06T02:21:07.1194899Z 174 |
2025-06-06T02:21:07.1195186Z 175 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T02:21:07.1195321Z     |                                                  ^^^^^^ ARG002
2025-06-06T02:21:07.1195411Z 176 |         """
2025-06-06T02:21:07.1195579Z 177 |         Search vector DB for relevant documents.
2025-06-06T02:21:07.1195653Z     |
2025-06-06T02:21:07.1195660Z 
2025-06-06T02:21:07.1196091Z interfaces/knowledge_interfaces.py:175:61: FA100 Add `from __future__ import annotations` to simplify `typing.List`
2025-06-06T02:21:07.1196291Z     |
2025-06-06T02:21:07.1196707Z 173 |         self.vector_client = vector_client  # Stub: Replace with actual vector DB client
2025-06-06T02:21:07.1196780Z 174 |
2025-06-06T02:21:07.1197065Z 175 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T02:21:07.1197210Z     |                                                             ^^^^ FA100
2025-06-06T02:21:07.1197297Z 176 |         """
2025-06-06T02:21:07.1197465Z 177 |         Search vector DB for relevant documents.
2025-06-06T02:21:07.1197536Z     |
2025-06-06T02:21:07.1197543Z 
2025-06-06T02:21:07.1198073Z interfaces/knowledge_interfaces.py:175:66: FA100 Add `from __future__ import annotations` to simplify `typing.Dict`
2025-06-06T02:21:07.1198148Z     |
2025-06-06T02:21:07.1198465Z 173 |         self.vector_client = vector_client  # Stub: Replace with actual vector DB client
2025-06-06T02:21:07.1198545Z 174 |
2025-06-06T02:21:07.1198831Z 175 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T02:21:07.1198985Z     |                                                                  ^^^^ FA100
2025-06-06T02:21:07.1199067Z 176 |         """
2025-06-06T02:21:07.1199243Z 177 |         Search vector DB for relevant documents.
2025-06-06T02:21:07.1199313Z     |
2025-06-06T02:21:07.1199320Z 
2025-06-06T02:21:07.1199659Z interfaces/knowledge_interfaces.py:176:9: D200 One-line docstring should fit on one line
2025-06-06T02:21:07.1199728Z     |
2025-06-06T02:21:07.1200025Z 175 |       def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T02:21:07.1200107Z 176 | /         """
2025-06-06T02:21:07.1200289Z 177 | |         Search vector DB for relevant documents.
2025-06-06T02:21:07.1200371Z 178 | |         """
2025-06-06T02:21:07.1200453Z     | |___________^ D200
2025-06-06T02:21:07.1200638Z 179 |           # Stub: Replace with actual vector DB search
2025-06-06T02:21:07.1200743Z 180 |           # Example:
2025-06-06T02:21:07.1200812Z     |
2025-06-06T02:21:07.1200931Z     = help: Reformat to one line
2025-06-06T02:21:07.1200939Z 
2025-06-06T02:21:07.1201226Z interfaces/knowledge_interfaces.py:181:9: ERA001 Found commented-out code
2025-06-06T02:21:07.1201301Z     |
2025-06-06T02:21:07.1201483Z 179 |         # Stub: Replace with actual vector DB search
2025-06-06T02:21:07.1201583Z 180 |         # Example:
2025-06-06T02:21:07.1201813Z 181 |         # return self.vector_client.query(query, user_id, **kwargs)
2025-06-06T02:21:07.1201965Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ERA001
2025-06-06T02:21:07.1202261Z 182 |         return [{"source": "vector_rag", "content": f"Stub vector match for '{query}'"}]
2025-06-06T02:21:07.1202338Z     |
2025-06-06T02:21:07.1202465Z     = help: Remove commented-out code
2025-06-06T02:21:07.1202473Z 
2025-06-06T02:21:07.1202783Z interfaces/knowledge_interfaces.py:184:33: ARG002 Unused method argument: `user_id`
2025-06-06T02:21:07.1202858Z     |
2025-06-06T02:21:07.1203148Z 182 |         return [{"source": "vector_rag", "content": f"Stub vector match for '{query}'"}]
2025-06-06T02:21:07.1203219Z 183 |
2025-06-06T02:21:07.1203448Z 184 |     def add(self, content: str, user_id: str, **kwargs) -> Any:
2025-06-06T02:21:07.1203575Z     |                                 ^^^^^^^ ARG002
2025-06-06T02:21:07.1203658Z 185 |         """
2025-06-06T02:21:07.1203808Z 186 |         Add new content to vector DB.
2025-06-06T02:21:07.1203878Z     |
2025-06-06T02:21:07.1203885Z 
2025-06-06T02:21:07.1204221Z interfaces/knowledge_interfaces.py:184:47: ANN003 Missing type annotation for `**kwargs`
2025-06-06T02:21:07.1204291Z     |
2025-06-06T02:21:07.1204586Z 182 |         return [{"source": "vector_rag", "content": f"Stub vector match for '{query}'"}]
2025-06-06T02:21:07.1204655Z 183 |
2025-06-06T02:21:07.1204883Z 184 |     def add(self, content: str, user_id: str, **kwargs) -> Any:
2025-06-06T02:21:07.1205154Z     |                                               ^^^^^^^^ ANN003
2025-06-06T02:21:07.1205245Z 185 |         """
2025-06-06T02:21:07.1205387Z 186 |         Add new content to vector DB.
2025-06-06T02:21:07.1205461Z     |
2025-06-06T02:21:07.1205575Z 
2025-06-06T02:21:07.1205889Z interfaces/knowledge_interfaces.py:184:49: ARG002 Unused method argument: `kwargs`
2025-06-06T02:21:07.1205968Z     |
2025-06-06T02:21:07.1206260Z 182 |         return [{"source": "vector_rag", "content": f"Stub vector match for '{query}'"}]
2025-06-06T02:21:07.1206328Z 183 |
2025-06-06T02:21:07.1206560Z 184 |     def add(self, content: str, user_id: str, **kwargs) -> Any:
2025-06-06T02:21:07.1206686Z     |                                                 ^^^^^^ ARG002
2025-06-06T02:21:07.1206771Z 185 |         """
2025-06-06T02:21:07.1206913Z 186 |         Add new content to vector DB.
2025-06-06T02:21:07.1206987Z     |
2025-06-06T02:21:07.1206994Z 
2025-06-06T02:21:07.1207447Z interfaces/knowledge_interfaces.py:184:60: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `add`
2025-06-06T02:21:07.1207527Z     |
2025-06-06T02:21:07.1207916Z 182 |         return [{"source": "vector_rag", "content": f"Stub vector match for '{query}'"}]
2025-06-06T02:21:07.1207995Z 183 |
2025-06-06T02:21:07.1208214Z 184 |     def add(self, content: str, user_id: str, **kwargs) -> Any:
2025-06-06T02:21:07.1208365Z     |                                                            ^^^ ANN401
2025-06-06T02:21:07.1208447Z 185 |         """
2025-06-06T02:21:07.1208593Z 186 |         Add new content to vector DB.
2025-06-06T02:21:07.1208662Z     |
2025-06-06T02:21:07.1208670Z 
2025-06-06T02:21:07.1209002Z interfaces/knowledge_interfaces.py:185:9: D200 One-line docstring should fit on one line
2025-06-06T02:21:07.1209071Z     |
2025-06-06T02:21:07.1209300Z 184 |       def add(self, content: str, user_id: str, **kwargs) -> Any:
2025-06-06T02:21:07.1209383Z 185 | /         """
2025-06-06T02:21:07.1209537Z 186 | |         Add new content to vector DB.
2025-06-06T02:21:07.1209626Z 187 | |         """
2025-06-06T02:21:07.1209708Z     | |___________^ D200
2025-06-06T02:21:07.1209885Z 188 |           # Stub: Replace with actual vector DB add
2025-06-06T02:21:07.1209986Z 189 |           # Example:
2025-06-06T02:21:07.1210054Z     |
2025-06-06T02:21:07.1210169Z     = help: Reformat to one line
2025-06-06T02:21:07.1210177Z 
2025-06-06T02:21:07.1210454Z interfaces/knowledge_interfaces.py:190:9: ERA001 Found commented-out code
2025-06-06T02:21:07.1210531Z     |
2025-06-06T02:21:07.1210703Z 188 |         # Stub: Replace with actual vector DB add
2025-06-06T02:21:07.1210801Z 189 |         # Example:
2025-06-06T02:21:07.1211031Z 190 |         # return self.vector_client.add(content, user_id, **kwargs)
2025-06-06T02:21:07.1211182Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ERA001
2025-06-06T02:21:07.1211443Z 191 |         return {"source": "vector_rag", "status": "added", "content": content}
2025-06-06T02:21:07.1211520Z     |
2025-06-06T02:21:07.1211646Z     = help: Remove commented-out code
2025-06-06T02:21:07.1211658Z 
2025-06-06T02:21:07.1211984Z interfaces/knowledge_interfaces.py:195:5: D200 One-line docstring should fit on one line
2025-06-06T02:21:07.1212065Z     |
2025-06-06T02:21:07.1212210Z 194 |   class KnowledgeStrategy(Enum):
2025-06-06T02:21:07.1212291Z 195 | /     """
2025-06-06T02:21:07.1212509Z 196 | |     Enum for strategy options in KnowledgeIntegrationLayer.
2025-06-06T02:21:07.1212581Z 197 | |     """
2025-06-06T02:21:07.1212657Z     | |_______^ D200
2025-06-06T02:21:07.1212729Z 198 |
2025-06-06T02:21:07.1212855Z 199 |       FALLBACK = "fallback"
2025-06-06T02:21:07.1212928Z     |
2025-06-06T02:21:07.1213035Z     = help: Reformat to one line
2025-06-06T02:21:07.1213043Z 
2025-06-06T02:21:07.1213464Z interfaces/knowledge_interfaces.py:213:9: ANN204 Missing return type annotation for special method `__init__`
2025-06-06T02:21:07.1213533Z     |
2025-06-06T02:21:07.1213611Z 211 |     """
2025-06-06T02:21:07.1213679Z 212 |
2025-06-06T02:21:07.1213903Z 213 |     def __init__(
2025-06-06T02:21:07.1213986Z     |         ^^^^^^^^ ANN204
2025-06-06T02:21:07.1214076Z 214 |         self,
2025-06-06T02:21:07.1214333Z 215 |         sources: List[KnowledgeSource],
2025-06-06T02:21:07.1214411Z     |
2025-06-06T02:21:07.1214545Z     = help: Add return type annotation: `None`
2025-06-06T02:21:07.1214553Z 
2025-06-06T02:21:07.1214991Z interfaces/knowledge_interfaces.py:215:18: FA100 Add `from __future__ import annotations` to simplify `typing.List`
2025-06-06T02:21:07.1215061Z     |
2025-06-06T02:21:07.1215159Z 213 |     def __init__(
2025-06-06T02:21:07.1215242Z 214 |         self,
2025-06-06T02:21:07.1215399Z 215 |         sources: List[KnowledgeSource],
2025-06-06T02:21:07.1215495Z     |                  ^^^^ FA100
2025-06-06T02:21:07.1215740Z 216 |         strategy: "KnowledgeStrategy" = KnowledgeStrategy.FALLBACK,
2025-06-06T02:21:07.1215812Z 217 |     ):
2025-06-06T02:21:07.1215886Z     |
2025-06-06T02:21:07.1215893Z 
2025-06-06T02:21:07.1216293Z interfaces/knowledge_interfaces.py:218:9: D205 1 blank line required between summary line and description
2025-06-06T02:21:07.1216366Z     |
2025-06-06T02:21:07.1216614Z 216 |           strategy: "KnowledgeStrategy" = KnowledgeStrategy.FALLBACK,
2025-06-06T02:21:07.1216693Z 217 |       ):
2025-06-06T02:21:07.1216776Z 218 | /         """
2025-06-06T02:21:07.1216871Z 219 | |         Args:
2025-06-06T02:21:07.1217083Z 220 | |             sources: List of KnowledgeSource implementations.
2025-06-06T02:21:07.1217261Z 221 | |             strategy: Aggregation logic. One of:
2025-06-06T02:21:07.1217600Z 222 | |                 - KnowledgeStrategy.FALLBACK: Try sources in order, return first with results.
2025-06-06T02:21:07.1218000Z 223 | |                 - KnowledgeStrategy.AGGREGATE: Query all sources and merge results.
2025-06-06T02:21:07.1218076Z 224 | |
2025-06-06T02:21:07.1218163Z 225 | |         """
2025-06-06T02:21:07.1218241Z     | |___________^ D205
2025-06-06T02:21:07.1218381Z 226 |           self.sources = sources
2025-06-06T02:21:07.1218535Z 227 |           if isinstance(strategy, str):
2025-06-06T02:21:07.1218609Z     |
2025-06-06T02:21:07.1218724Z     = help: Insert single blank line
2025-06-06T02:21:07.1218732Z 
2025-06-06T02:21:07.1219467Z interfaces/knowledge_interfaces.py:232:17: B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
2025-06-06T02:21:07.1219538Z     |
2025-06-06T02:21:07.1219762Z 230 |                 self.strategy = KnowledgeStrategy(strategy.lower())
2025-06-06T02:21:07.1219888Z 231 |             except ValueError:
2025-06-06T02:21:07.1220144Z 232 |                 raise ValueError(f"Unknown integration strategy: {strategy}")
2025-06-06T02:21:07.1220297Z     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ B904
2025-06-06T02:21:07.1220490Z 233 |         elif isinstance(strategy, KnowledgeStrategy):
2025-06-06T02:21:07.1220635Z 234 |             self.strategy = strategy
2025-06-06T02:21:07.1220709Z     |
2025-06-06T02:21:07.1220716Z 
2025-06-06T02:21:07.1221134Z interfaces/knowledge_interfaces.py:232:23: TRY003 Avoid specifying long messages outside the exception class
2025-06-06T02:21:07.1221206Z     |
2025-06-06T02:21:07.1221439Z 230 |                 self.strategy = KnowledgeStrategy(strategy.lower())
2025-06-06T02:21:07.1221565Z 231 |             except ValueError:
2025-06-06T02:21:07.1221820Z 232 |                 raise ValueError(f"Unknown integration strategy: {strategy}")
2025-06-06T02:21:07.1221975Z     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY003
2025-06-06T02:21:07.1222175Z 233 |         elif isinstance(strategy, KnowledgeStrategy):
2025-06-06T02:21:07.1222314Z 234 |             self.strategy = strategy
2025-06-06T02:21:07.1222389Z     |
2025-06-06T02:21:07.1222397Z 
2025-06-06T02:21:07.1222843Z interfaces/knowledge_interfaces.py:232:34: EM102 Exception must not use an f-string literal, assign to variable first
2025-06-06T02:21:07.1223041Z     |
2025-06-06T02:21:07.1223262Z 230 |                 self.strategy = KnowledgeStrategy(strategy.lower())
2025-06-06T02:21:07.1223393Z 231 |             except ValueError:
2025-06-06T02:21:07.1223744Z 232 |                 raise ValueError(f"Unknown integration strategy: {strategy}")
2025-06-06T02:21:07.1223905Z     |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ EM102
2025-06-06T02:21:07.1224095Z 233 |         elif isinstance(strategy, KnowledgeStrategy):
2025-06-06T02:21:07.1224242Z 234 |             self.strategy = strategy
2025-06-06T02:21:07.1224309Z     |
2025-06-06T02:21:07.1224473Z     = help: Assign to variable; remove f-string literal
2025-06-06T02:21:07.1224482Z 
2025-06-06T02:21:07.1224896Z interfaces/knowledge_interfaces.py:236:19: TRY003 Avoid specifying long messages outside the exception class
2025-06-06T02:21:07.1224966Z     |
2025-06-06T02:21:07.1225109Z 234 |             self.strategy = strategy
2025-06-06T02:21:07.1225199Z 235 |         else:
2025-06-06T02:21:07.1225446Z 236 |             raise TypeError(f"Invalid strategy type: {type(strategy)}")
2025-06-06T02:21:07.1225594Z     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY003
2025-06-06T02:21:07.1225666Z 237 |
2025-06-06T02:21:07.1225948Z 238 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T02:21:07.1226016Z     |
2025-06-06T02:21:07.1226023Z 
2025-06-06T02:21:07.1226462Z interfaces/knowledge_interfaces.py:236:29: EM102 Exception must not use an f-string literal, assign to variable first
2025-06-06T02:21:07.1226534Z     |
2025-06-06T02:21:07.1226674Z 234 |             self.strategy = strategy
2025-06-06T02:21:07.1226762Z 235 |         else:
2025-06-06T02:21:07.1227001Z 236 |             raise TypeError(f"Invalid strategy type: {type(strategy)}")
2025-06-06T02:21:07.1227149Z     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ EM102
2025-06-06T02:21:07.1227223Z 237 |
2025-06-06T02:21:07.1227514Z 238 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T02:21:07.1227582Z     |
2025-06-06T02:21:07.1227746Z     = help: Assign to variable; remove f-string literal
2025-06-06T02:21:07.1227754Z 
2025-06-06T02:21:07.1228234Z interfaces/knowledge_interfaces.py:238:48: ANN003 Missing type annotation for `**kwargs`
2025-06-06T02:21:07.1228311Z     |
2025-06-06T02:21:07.1228552Z 236 |             raise TypeError(f"Invalid strategy type: {type(strategy)}")
2025-06-06T02:21:07.1228628Z 237 |
2025-06-06T02:21:07.1228908Z 238 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T02:21:07.1229050Z     |                                                ^^^^^^^^ ANN003
2025-06-06T02:21:07.1229134Z 239 |         """
2025-06-06T02:21:07.1229336Z 240 |         Search using the configured integration strategy.
2025-06-06T02:21:07.1229405Z     |
2025-06-06T02:21:07.1229416Z 
2025-06-06T02:21:07.1229844Z interfaces/knowledge_interfaces.py:238:61: FA100 Add `from __future__ import annotations` to simplify `typing.List`
2025-06-06T02:21:07.1229923Z     |
2025-06-06T02:21:07.1230164Z 236 |             raise TypeError(f"Invalid strategy type: {type(strategy)}")
2025-06-06T02:21:07.1230237Z 237 |
2025-06-06T02:21:07.1230519Z 238 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T02:21:07.1230667Z     |                                                             ^^^^ FA100
2025-06-06T02:21:07.1230751Z 239 |         """
2025-06-06T02:21:07.1230956Z 240 |         Search using the configured integration strategy.
2025-06-06T02:21:07.1231026Z     |
2025-06-06T02:21:07.1231033Z 
2025-06-06T02:21:07.1231459Z interfaces/knowledge_interfaces.py:238:66: FA100 Add `from __future__ import annotations` to simplify `typing.Dict`
2025-06-06T02:21:07.1231527Z     |
2025-06-06T02:21:07.1231768Z 236 |             raise TypeError(f"Invalid strategy type: {type(strategy)}")
2025-06-06T02:21:07.1231962Z 237 |
2025-06-06T02:21:07.1232249Z 238 |     def search(self, query: str, user_id: str, **kwargs) -> List[Dict[str, Any]]:
2025-06-06T02:21:07.1232492Z     |                                                                  ^^^^ FA100
2025-06-06T02:21:07.1232579Z 239 |         """
2025-06-06T02:21:07.1232776Z 240 |         Search using the configured integration strategy.
2025-06-06T02:21:07.1232846Z     |
2025-06-06T02:21:07.1232853Z 
2025-06-06T02:21:07.1233269Z interfaces/knowledge_interfaces.py:253:25: FA100 Add `from __future__ import annotations` to simplify `typing.List`
2025-06-06T02:21:07.1233343Z     |
2025-06-06T02:21:07.1233441Z 251 |             return []
2025-06-06T02:21:07.1233655Z 252 |         if self.strategy == KnowledgeStrategy.AGGREGATE:
2025-06-06T02:21:07.1233822Z 253 |             aggregated: List[Dict[str, Any]] = []
2025-06-06T02:21:07.1233935Z     |                         ^^^^ FA100
2025-06-06T02:21:07.1234086Z 254 |             for source in self.sources:
2025-06-06T02:21:07.1234342Z 255 |                 aggregated.extend(source.search(query, user_id, **kwargs))
2025-06-06T02:21:07.1234410Z     |
2025-06-06T02:21:07.1234416Z 
2025-06-06T02:21:07.1234844Z interfaces/knowledge_interfaces.py:253:30: FA100 Add `from __future__ import annotations` to simplify `typing.Dict`
2025-06-06T02:21:07.1234913Z     |
2025-06-06T02:21:07.1235014Z 251 |             return []
2025-06-06T02:21:07.1235219Z 252 |         if self.strategy == KnowledgeStrategy.AGGREGATE:
2025-06-06T02:21:07.1235393Z 253 |             aggregated: List[Dict[str, Any]] = []
2025-06-06T02:21:07.1235511Z     |                              ^^^^ FA100
2025-06-06T02:21:07.1235656Z 254 |             for source in self.sources:
2025-06-06T02:21:07.1235905Z 255 |                 aggregated.extend(source.search(query, user_id, **kwargs))
2025-06-06T02:21:07.1235971Z     |
2025-06-06T02:21:07.1235978Z 
2025-06-06T02:21:07.1236389Z interfaces/knowledge_interfaces.py:257:15: TRY003 Avoid specifying long messages outside the exception class
2025-06-06T02:21:07.1236461Z     |
2025-06-06T02:21:07.1236704Z 255 |                 aggregated.extend(source.search(query, user_id, **kwargs))
2025-06-06T02:21:07.1236831Z 256 |             return aggregated
2025-06-06T02:21:07.1237099Z 257 |         raise ValueError(f"Unknown integration strategy: {self.strategy}")
2025-06-06T02:21:07.1237245Z     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY003
2025-06-06T02:21:07.1237318Z 258 |
2025-06-06T02:21:07.1237561Z 259 |     def add(self, content: str, user_id: str, **kwargs) -> List[Any]:
2025-06-06T02:21:07.1237637Z     |
2025-06-06T02:21:07.1237644Z 
2025-06-06T02:21:07.1238238Z interfaces/knowledge_interfaces.py:257:26: EM102 Exception must not use an f-string literal, assign to variable first
2025-06-06T02:21:07.1238316Z     |
2025-06-06T02:21:07.1238565Z 255 |                 aggregated.extend(source.search(query, user_id, **kwargs))
2025-06-06T02:21:07.1238693Z 256 |             return aggregated
2025-06-06T02:21:07.1238956Z 257 |         raise ValueError(f"Unknown integration strategy: {self.strategy}")
2025-06-06T02:21:07.1239103Z     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ EM102
2025-06-06T02:21:07.1239174Z 258 |
2025-06-06T02:21:07.1239414Z 259 |     def add(self, content: str, user_id: str, **kwargs) -> List[Any]:
2025-06-06T02:21:07.1239480Z     |
2025-06-06T02:21:07.1239634Z     = help: Assign to variable; remove f-string literal
2025-06-06T02:21:07.1239642Z 
2025-06-06T02:21:07.1239967Z interfaces/knowledge_interfaces.py:259:47: ANN003 Missing type annotation for `**kwargs`
2025-06-06T02:21:07.1240044Z     |
2025-06-06T02:21:07.1240309Z 257 |         raise ValueError(f"Unknown integration strategy: {self.strategy}")
2025-06-06T02:21:07.1240378Z 258 |
2025-06-06T02:21:07.1240621Z 259 |     def add(self, content: str, user_id: str, **kwargs) -> List[Any]:
2025-06-06T02:21:07.1240761Z     |                                               ^^^^^^^^ ANN003
2025-06-06T02:21:07.1240978Z 260 |         """
2025-06-06T02:21:07.1241122Z 261 |         Add content to all sources.
2025-06-06T02:21:07.1241196Z     |
2025-06-06T02:21:07.1241203Z 
2025-06-06T02:21:07.1241722Z interfaces/knowledge_interfaces.py:259:60: FA100 Add `from __future__ import annotations` to simplify `typing.List`
2025-06-06T02:21:07.1241801Z     |
2025-06-06T02:21:07.1242062Z 257 |         raise ValueError(f"Unknown integration strategy: {self.strategy}")
2025-06-06T02:21:07.1242137Z 258 |
2025-06-06T02:21:07.1242373Z 259 |     def add(self, content: str, user_id: str, **kwargs) -> List[Any]:
2025-06-06T02:21:07.1242513Z     |                                                            ^^^^ FA100
2025-06-06T02:21:07.1242597Z 260 |         """
2025-06-06T02:21:07.1242739Z 261 |         Add content to all sources.
2025-06-06T02:21:07.1242806Z     |
2025-06-06T02:21:07.1242813Z 
2025-06-06T02:21:07.1243214Z interfaces/knowledge_interfaces.py:269:13: PERF401 Use a list comprehension to create a transformed list
2025-06-06T02:21:07.1243287Z     |
2025-06-06T02:21:07.1243391Z 267 |         results = []
2025-06-06T02:21:07.1243531Z 268 |         for source in self.sources:
2025-06-06T02:21:07.1243772Z 269 |             results.append(source.add(content, user_id, **kwargs))
2025-06-06T02:21:07.1243915Z     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PERF401
2025-06-06T02:21:07.1244019Z 270 |         return results
2025-06-06T02:21:07.1244087Z     |
2025-06-06T02:21:07.1244243Z     = help: Replace for loop with list comprehension
2025-06-06T02:21:07.1244251Z 
2025-06-06T02:21:07.1244614Z main_agents.py:179:40: FA100 Add `from __future__ import annotations` to simplify `typing.Optional`
2025-06-06T02:21:07.1244688Z     |
2025-06-06T02:21:07.1244788Z 178 | def create_agents(
2025-06-06T02:21:07.1245008Z 179 |     use_memory: bool = False, user_id: Optional[str] = None
2025-06-06T02:21:07.1245141Z     |                                        ^^^^^^^^ FA100
2025-06-06T02:21:07.1245270Z 180 | ) -> tuple[Agent, Agent]:
2025-06-06T02:21:07.1245346Z 181 |     """
2025-06-06T02:21:07.1245421Z     |
2025-06-06T02:21:07.1245428Z 
2025-06-06T02:21:07.1245796Z main_agents.py:180:6: FA102 Missing `from __future__ import annotations`, but uses PEP 585 collection
2025-06-06T02:21:07.1245865Z     |
2025-06-06T02:21:07.1245968Z 178 | def create_agents(
2025-06-06T02:21:07.1246175Z 179 |     use_memory: bool = False, user_id: Optional[str] = None
2025-06-06T02:21:07.1246299Z 180 | ) -> tuple[Agent, Agent]:
2025-06-06T02:21:07.1246402Z     |      ^^^^^^^^^^^^^^^^^^^ FA102
2025-06-06T02:21:07.1246476Z 181 |     """
2025-06-06T02:21:07.1246755Z 182 |     Create and return a pair of agents, optionally using memory enhancement.
2025-06-06T02:21:07.1246829Z     |
2025-06-06T02:21:07.1246979Z     = help: Add `from __future__ import annotations`
2025-06-06T02:21:07.1246986Z 
2025-06-06T02:21:07.1247202Z main_agents.py:197:21: G004 Logging statement uses f-string
2025-06-06T02:21:07.1247271Z     |
2025-06-06T02:21:07.1247524Z 195 |             logger.warning("No user_id provided, using 'default_user'")
2025-06-06T02:21:07.1247599Z 196 |
2025-06-06T02:21:07.1247994Z 197 |         logger.info(f"Creating memory-enhanced agents with user_id: {user_id}")
2025-06-06T02:21:07.1248157Z     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T02:21:07.1248370Z 198 |         data_gatherer = MemoryEnhancedDataGathererAgent(
2025-06-06T02:21:07.1248536Z 199 |             name="data_gatherer", user_id=user_id
2025-06-06T02:21:07.1248611Z     |
2025-06-06T02:21:07.1248618Z 
2025-06-06T02:21:07.1248992Z main_crewai_agents.py:49:40: FA100 Add `from __future__ import annotations` to simplify `typing.Optional`
2025-06-06T02:21:07.1249065Z    |
2025-06-06T02:21:07.1249158Z 48 | def create_team(
2025-06-06T02:21:07.1249374Z 49 |     use_memory: bool = False, user_id: Optional[str] = None
2025-06-06T02:21:07.1249501Z    |                                        ^^^^^^^^ FA100
2025-06-06T02:21:07.1249607Z 50 | ) -> TeamProtocol:
2025-06-06T02:21:07.1249800Z 51 |     """
2025-06-06T02:21:07.1249881Z    |
2025-06-06T02:21:07.1249889Z 
2025-06-06T02:21:07.1250126Z main_crewai_agents.py:67:21: G004 Logging statement uses f-string
2025-06-06T02:21:07.1250334Z    |
2025-06-06T02:21:07.1250580Z 65 |             logger.warning("No user_id provided, using 'default_user'")
2025-06-06T02:21:07.1250655Z 66 |
2025-06-06T02:21:07.1250924Z 67 |         logger.info(f"Creating memory-enhanced team with user_id: {user_id}")
2025-06-06T02:21:07.1251077Z    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T02:21:07.1251296Z 68 |         team = MemoryEnhancedCrewAIAgentTeam(user_id=user_id)
2025-06-06T02:21:07.1251373Z    |
2025-06-06T02:21:07.1251381Z 
2025-06-06T02:21:07.1251771Z main_crewai_agents.py:143:12: RET504 Unnecessary assignment to `reporting_team` before `return` statement
2025-06-06T02:21:07.1251842Z     |
2025-06-06T02:21:07.1252044Z 141 |         tasks=[task_collect, task_analyze, task_report],
2025-06-06T02:21:07.1252121Z 142 |     )
2025-06-06T02:21:07.1252249Z 143 |     return reporting_team
2025-06-06T02:21:07.1252359Z     |            ^^^^^^^^^^^^^^ RET504
2025-06-06T02:21:07.1252435Z     |
2025-06-06T02:21:07.1252560Z     = help: Remove unnecessary assignment
2025-06-06T02:21:07.1252567Z 
2025-06-06T02:21:07.1252822Z main_crewai_agents.py:155:9: PLR1722 Use `sys.exit()` instead of `exit`
2025-06-06T02:21:07.1252888Z     |
2025-06-06T02:21:07.1253022Z 153 |     if not CREWAI_AVAILABLE:
2025-06-06T02:21:07.1253330Z 154 |         logger.error("CrewAI is not installed. Install with: pip install '.[agents]'")
2025-06-06T02:21:07.1253426Z 155 |         exit(1)
2025-06-06T02:21:07.1253509Z     |         ^^^^ PLR1722
2025-06-06T02:21:07.1253582Z 156 |
2025-06-06T02:21:07.1253704Z 157 |     if not MEM0_AVAILABLE:
2025-06-06T02:21:07.1253777Z     |
2025-06-06T02:21:07.1253906Z     = help: Replace `exit` with `sys.exit()`
2025-06-06T02:21:07.1253914Z 
2025-06-06T02:21:07.1254156Z main_crewai_agents.py:170:21: G004 Logging statement uses f-string
2025-06-06T02:21:07.1254234Z     |
2025-06-06T02:21:07.1254363Z 168 |         result = team.run()
2025-06-06T02:21:07.1254587Z 169 |         logger.info("CrewAI workflow completed successfully")
2025-06-06T02:21:07.1254745Z 170 |         logger.info(f"Result: {result}")
2025-06-06T02:21:07.1254865Z     |                     ^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T02:21:07.1254993Z 171 |     except Exception as e:
2025-06-06T02:21:07.1255200Z 172 |         logger.error(f"Error running CrewAI workflow: {e}")
2025-06-06T02:21:07.1255272Z     |
2025-06-06T02:21:07.1255280Z 
2025-06-06T02:21:07.1255552Z main_crewai_agents.py:171:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.1255624Z     |
2025-06-06T02:21:07.1255839Z 169 |         logger.info("CrewAI workflow completed successfully")
2025-06-06T02:21:07.1255996Z 170 |         logger.info(f"Result: {result}")
2025-06-06T02:21:07.1256117Z 171 |     except Exception as e:
2025-06-06T02:21:07.1256227Z     |            ^^^^^^^^^ BLE001
2025-06-06T02:21:07.1256432Z 172 |         logger.error(f"Error running CrewAI workflow: {e}")
2025-06-06T02:21:07.1256505Z     |
2025-06-06T02:21:07.1256512Z 
2025-06-06T02:21:07.1256823Z main_crewai_agents.py:172:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T02:21:07.1256899Z     |
2025-06-06T02:21:07.1257058Z 170 |         logger.info(f"Result: {result}")
2025-06-06T02:21:07.1257182Z 171 |     except Exception as e:
2025-06-06T02:21:07.1257387Z 172 |         logger.error(f"Error running CrewAI workflow: {e}")
2025-06-06T02:21:07.1257532Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T02:21:07.1257600Z 173 |
2025-06-06T02:21:07.1257695Z 174 | # Next steps:
2025-06-06T02:21:07.1257762Z     |
2025-06-06T02:21:07.1257982Z     = help: Replace with `exception`
2025-06-06T02:21:07.1257991Z 
2025-06-06T02:21:07.1258235Z main_crewai_agents.py:172:22: G004 Logging statement uses f-string
2025-06-06T02:21:07.1258426Z     |
2025-06-06T02:21:07.1258614Z 170 |         logger.info(f"Result: {result}")
2025-06-06T02:21:07.1258735Z 171 |     except Exception as e:
2025-06-06T02:21:07.1259047Z 172 |         logger.error(f"Error running CrewAI workflow: {e}")
2025-06-06T02:21:07.1259187Z     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T02:21:07.1259266Z 173 |
2025-06-06T02:21:07.1259356Z 174 | # Next steps:
2025-06-06T02:21:07.1259430Z     |
2025-06-06T02:21:07.1259438Z 
2025-06-06T02:21:07.1259711Z main_health_check.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1259784Z   |
2025-06-06T02:21:07.1259885Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1259992Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1260066Z 2 | """
2025-06-06T02:21:07.1260166Z 3 | health_check.py.
2025-06-06T02:21:07.1260234Z   |
2025-06-06T02:21:07.1260242Z 
2025-06-06T02:21:07.1260479Z manage.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1260550Z   |
2025-06-06T02:21:07.1260658Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1260757Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1260833Z 2 | """
2025-06-06T02:21:07.1261027Z 3 | Unified project management script for developers.
2025-06-06T02:21:07.1261103Z   |
2025-06-06T02:21:07.1261111Z 
2025-06-06T02:21:07.1261494Z mock_adk/adk/agent.py:14:28: FA100 Add `from __future__ import annotations` to simplify `typing.Optional`
2025-06-06T02:21:07.1261568Z    |
2025-06-06T02:21:07.1261706Z 12 |         """Initialize an agent."""
2025-06-06T02:21:07.1261813Z 13 |         self.name = name
2025-06-06T02:21:07.1262031Z 14 |         self.communicator: Optional[AgentCommunicator] = None
2025-06-06T02:21:07.1262155Z    |                            ^^^^^^^^ FA100
2025-06-06T02:21:07.1262225Z 15 |
2025-06-06T02:21:07.1262500Z 16 |     def set_communicator(self, communicator: AgentCommunicator) -> None:
2025-06-06T02:21:07.1262570Z    |
2025-06-06T02:21:07.1262578Z 
2025-06-06T02:21:07.1262831Z mock_adk/adk/agent.py:23:30: ARG002 Unused method argument: `message`
2025-06-06T02:21:07.1262904Z    |
2025-06-06T02:21:07.1263091Z 21 |         """Start the agent. Override in subclasses."""
2025-06-06T02:21:07.1263161Z 22 |
2025-06-06T02:21:07.1263418Z 23 |     def handle_message(self, message: Message) -> Optional[Message]:
2025-06-06T02:21:07.1263536Z    |                              ^^^^^^^ ARG002
2025-06-06T02:21:07.1263758Z 24 |         """Handle a received message. Override in subclasses."""
2025-06-06T02:21:07.1263852Z 25 |         return None
2025-06-06T02:21:07.1263927Z    |
2025-06-06T02:21:07.1263934Z 
2025-06-06T02:21:07.1264311Z mock_adk/adk/agent.py:23:51: FA100 Add `from __future__ import annotations` to simplify `typing.Optional`
2025-06-06T02:21:07.1264384Z    |
2025-06-06T02:21:07.1264562Z 21 |         """Start the agent. Override in subclasses."""
2025-06-06T02:21:07.1264635Z 22 |
2025-06-06T02:21:07.1264884Z 23 |     def handle_message(self, message: Message) -> Optional[Message]:
2025-06-06T02:21:07.1265029Z    |                                                   ^^^^^^^^ FA100
2025-06-06T02:21:07.1265240Z 24 |         """Handle a received message. Override in subclasses."""
2025-06-06T02:21:07.1265332Z 25 |         return None
2025-06-06T02:21:07.1265411Z    |
2025-06-06T02:21:07.1265419Z 
2025-06-06T02:21:07.1265820Z mock_adk/adk/communication.py:12:14: FA100 Add `from __future__ import annotations` to simplify `typing.Dict`
2025-06-06T02:21:07.1265894Z    |
2025-06-06T02:21:07.1265981Z 11 |     type: str
2025-06-06T02:21:07.1266109Z 12 |     payload: Dict[str, Any]
2025-06-06T02:21:07.1266191Z    |              ^^^^ FA100
2025-06-06T02:21:07.1266286Z 13 |     sender: str
2025-06-06T02:21:07.1266353Z    |
2025-06-06T02:21:07.1266360Z 
2025-06-06T02:21:07.1266755Z mock_adk/adk/communication.py:21:24: FA100 Add `from __future__ import annotations` to simplify `typing.List`
2025-06-06T02:21:07.1266825Z    |
2025-06-06T02:21:07.1266969Z 19 |     def __init__(self) -> None:
2025-06-06T02:21:07.1267116Z 20 |         """Initialize communicator."""
2025-06-06T02:21:07.1267364Z 21 |         self.messages: List[Message] = []
2025-06-06T02:21:07.1267470Z    |                        ^^^^ FA100
2025-06-06T02:21:07.1267545Z 22 |
2025-06-06T02:21:07.1267947Z 23 |     def send_message(self, message: Message) -> None:
2025-06-06T02:21:07.1268037Z    |
2025-06-06T02:21:07.1268045Z 
2025-06-06T02:21:07.1268458Z mock_adk/adk/communication.py:27:34: FA100 Add `from __future__ import annotations` to simplify `typing.Optional`
2025-06-06T02:21:07.1268532Z    |
2025-06-06T02:21:07.1268681Z 25 |         self.messages.append(message)
2025-06-06T02:21:07.1268754Z 26 |
2025-06-06T02:21:07.1268939Z 27 |     def receive_message(self) -> Optional[Message]:
2025-06-06T02:21:07.1269071Z    |                                  ^^^^^^^^ FA100
2025-06-06T02:21:07.1269238Z 28 |         """Receive a message (pop from list)."""
2025-06-06T02:21:07.1269462Z 29 |         return self.messages.pop(0) if self.messages else None
2025-06-06T02:21:07.1269535Z    |
2025-06-06T02:21:07.1269542Z 
2025-06-06T02:21:07.1269908Z mock_adk/adk/memory.py:11:23: FA100 Add `from __future__ import annotations` to simplify `typing.Dict`
2025-06-06T02:21:07.1269977Z    |
2025-06-06T02:21:07.1270099Z  9 |     def __init__(self) -> None:
2025-06-06T02:21:07.1270233Z 10 |         """Initialize memory."""
2025-06-06T02:21:07.1270401Z 11 |         self.storage: Dict[str, List[Any]] = {}
2025-06-06T02:21:07.1270505Z    |                       ^^^^ FA100
2025-06-06T02:21:07.1270580Z 12 |
2025-06-06T02:21:07.1270760Z 13 |     def store(self, key: str, value: Any) -> None:
2025-06-06T02:21:07.1270835Z    |
2025-06-06T02:21:07.1270843Z 
2025-06-06T02:21:07.1271200Z mock_adk/adk/memory.py:11:33: FA100 Add `from __future__ import annotations` to simplify `typing.List`
2025-06-06T02:21:07.1271277Z    |
2025-06-06T02:21:07.1271388Z  9 |     def __init__(self) -> None:
2025-06-06T02:21:07.1271523Z 10 |         """Initialize memory."""
2025-06-06T02:21:07.1271683Z 11 |         self.storage: Dict[str, List[Any]] = {}
2025-06-06T02:21:07.1271809Z    |                                 ^^^^ FA100
2025-06-06T02:21:07.1271883Z 12 |
2025-06-06T02:21:07.1272059Z 13 |     def store(self, key: str, value: Any) -> None:
2025-06-06T02:21:07.1272139Z    |
2025-06-06T02:21:07.1272147Z 
2025-06-06T02:21:07.1272537Z mock_adk/adk/memory.py:13:38: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `value`
2025-06-06T02:21:07.1272609Z    |
2025-06-06T02:21:07.1272769Z 11 |         self.storage: Dict[str, List[Any]] = {}
2025-06-06T02:21:07.1272840Z 12 |
2025-06-06T02:21:07.1273014Z 13 |     def store(self, key: str, value: Any) -> None:
2025-06-06T02:21:07.1273135Z    |                                      ^^^ ANN401
2025-06-06T02:21:07.1273255Z 14 |         """Store a value."""
2025-06-06T02:21:07.1273398Z 15 |         if key not in self.storage:
2025-06-06T02:21:07.1273466Z    |
2025-06-06T02:21:07.1273473Z 
2025-06-06T02:21:07.1273835Z mock_adk/adk/memory.py:19:37: FA100 Add `from __future__ import annotations` to simplify `typing.List`
2025-06-06T02:21:07.1273908Z    |
2025-06-06T02:21:07.1274063Z 17 |         self.storage[key].append(value)
2025-06-06T02:21:07.1274132Z 18 |
2025-06-06T02:21:07.1274308Z 19 |     def retrieve(self, key: str) -> List[Any]:
2025-06-06T02:21:07.1274427Z    |                                     ^^^^ FA100
2025-06-06T02:21:07.1274580Z 20 |         """Retrieve values for a key."""
2025-06-06T02:21:07.1274728Z 21 |         return self.storage.get(key, [])
2025-06-06T02:21:07.1274806Z    |
2025-06-06T02:21:07.1274813Z 
2025-06-06T02:21:07.1275194Z mock_adk/adk/skill.py:9:26: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`
2025-06-06T02:21:07.1275268Z    |
2025-06-06T02:21:07.1275376Z  7 |     """Base skill class."""
2025-06-06T02:21:07.1275453Z  8 |
2025-06-06T02:21:07.1275611Z  9 |     def run(self, *args: Any, **kwargs: Any) -> Any:
2025-06-06T02:21:07.1275722Z    |                          ^^^ ANN401
2025-06-06T02:21:07.1275909Z 10 |         """Execute the skill. Override in subclasses."""
2025-06-06T02:21:07.1276110Z    |
2025-06-06T02:21:07.1276118Z 
2025-06-06T02:21:07.1276620Z mock_adk/adk/skill.py:9:41: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`
2025-06-06T02:21:07.1276699Z    |
2025-06-06T02:21:07.1276805Z  7 |     """Base skill class."""
2025-06-06T02:21:07.1276878Z  8 |
2025-06-06T02:21:07.1277030Z  9 |     def run(self, *args: Any, **kwargs: Any) -> Any:
2025-06-06T02:21:07.1277160Z    |                                         ^^^ ANN401
2025-06-06T02:21:07.1277346Z 10 |         """Execute the skill. Override in subclasses."""
2025-06-06T02:21:07.1277419Z    |
2025-06-06T02:21:07.1277427Z 
2025-06-06T02:21:07.1277805Z mock_adk/adk/skill.py:9:49: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `run`
2025-06-06T02:21:07.1277981Z    |
2025-06-06T02:21:07.1278093Z  7 |     """Base skill class."""
2025-06-06T02:21:07.1278161Z  8 |
2025-06-06T02:21:07.1278313Z  9 |     def run(self, *args: Any, **kwargs: Any) -> Any:
2025-06-06T02:21:07.1278451Z    |                                                 ^^^ ANN401
2025-06-06T02:21:07.1278642Z 10 |         """Execute the skill. Override in subclasses."""
2025-06-06T02:21:07.1278713Z    |
2025-06-06T02:21:07.1278721Z 
2025-06-06T02:21:07.1279096Z mock_crewai/agent.py:33:34: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `task`
2025-06-06T02:21:07.1279165Z    |
2025-06-06T02:21:07.1279291Z 31 |         self.kwargs = kwargs
2025-06-06T02:21:07.1279359Z 32 |
2025-06-06T02:21:07.1279532Z 33 |     def execute_task(self, task: Any) -> str:
2025-06-06T02:21:07.1279647Z    |                                  ^^^ ANN401
2025-06-06T02:21:07.1279724Z 34 |         """
2025-06-06T02:21:07.1279872Z 35 |         Execute a task and return a result.
2025-06-06T02:21:07.1279948Z    |
2025-06-06T02:21:07.1279955Z 
2025-06-06T02:21:07.1280267Z mock_crewai/types.py:1:1: A005 Module `types` shadows a Python standard-library module
2025-06-06T02:21:07.1280554Z run_bandit_scan.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1280623Z   |
2025-06-06T02:21:07.1280730Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1280835Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1280911Z 2 | """
2025-06-06T02:21:07.1281124Z 3 | Run Bandit security scan with appropriate configuration.
2025-06-06T02:21:07.1281195Z   |
2025-06-06T02:21:07.1281202Z 
2025-06-06T02:21:07.1281470Z run_bandit_scan.py:71:14: PTH123 `open()` should be replaced by `Path.open()`
2025-06-06T02:21:07.1281544Z    |
2025-06-06T02:21:07.1281691Z 70 |         # Write to bandit-results.json
2025-06-06T02:21:07.1281939Z 71 |         with open("security-reports/bandit-results.json", "w") as f:
2025-06-06T02:21:07.1282022Z    |              ^^^^ PTH123
2025-06-06T02:21:07.1282201Z 72 |             json.dump(empty_json_data, f, indent=2)
2025-06-06T02:21:07.1282399Z 73 |         logger.info("Created empty bandit-results.json")
2025-06-06T02:21:07.1282475Z    |
2025-06-06T02:21:07.1282487Z 
2025-06-06T02:21:07.1282750Z run_bandit_scan.py:76:14: PTH123 `open()` should be replaced by `Path.open()`
2025-06-06T02:21:07.1282827Z    |
2025-06-06T02:21:07.1282988Z 75 |         # Write to bandit-results-ini.json
2025-06-06T02:21:07.1283245Z 76 |         with open("security-reports/bandit-results-ini.json", "w") as f:
2025-06-06T02:21:07.1283330Z    |              ^^^^ PTH123
2025-06-06T02:21:07.1283506Z 77 |             json.dump(empty_json_data, f, indent=2)
2025-06-06T02:21:07.1283720Z 78 |         logger.info("Created empty bandit-results-ini.json")
2025-06-06T02:21:07.1283796Z    |
2025-06-06T02:21:07.1283802Z 
2025-06-06T02:21:07.1284075Z run_bandit_scan.py:100:14: PTH123 `open()` should be replaced by `Path.open()`
2025-06-06T02:21:07.1284144Z     |
2025-06-06T02:21:07.1284280Z  99 |         # Write to bandit-results.sarif
2025-06-06T02:21:07.1284526Z 100 |         with open("security-reports/bandit-results.sarif", "w") as f:
2025-06-06T02:21:07.1284633Z     |              ^^^^ PTH123
2025-06-06T02:21:07.1284936Z 101 |             json.dump(empty_sarif, f, indent=2)
2025-06-06T02:21:07.1285150Z 102 |         logger.info("Created empty bandit-results.sarif")
2025-06-06T02:21:07.1285220Z     |
2025-06-06T02:21:07.1285326Z 
2025-06-06T02:21:07.1285602Z run_bandit_scan.py:105:14: PTH123 `open()` should be replaced by `Path.open()`
2025-06-06T02:21:07.1285674Z     |
2025-06-06T02:21:07.1285843Z 104 |         # Write to bandit-results-ini.sarif
2025-06-06T02:21:07.1286107Z 105 |         with open("security-reports/bandit-results-ini.sarif", "w") as f:
2025-06-06T02:21:07.1286211Z     |              ^^^^ PTH123
2025-06-06T02:21:07.1286381Z 106 |             json.dump(empty_sarif, f, indent=2)
2025-06-06T02:21:07.1286607Z 107 |         logger.info("Created empty bandit-results-ini.sarif")
2025-06-06T02:21:07.1286675Z     |
2025-06-06T02:21:07.1286682Z 
2025-06-06T02:21:07.1286979Z run_bandit_scan.py:109:9: TRY300 Consider moving this statement to an `else` block
2025-06-06T02:21:07.1287055Z     |
2025-06-06T02:21:07.1287281Z 107 |         logger.info("Created empty bandit-results-ini.sarif")
2025-06-06T02:21:07.1287350Z 108 |
2025-06-06T02:21:07.1287455Z 109 |         return True
2025-06-06T02:21:07.1287560Z     |         ^^^^^^^^^^^ TRY300
2025-06-06T02:21:07.1287688Z 110 |     except Exception as e:
2025-06-06T02:21:07.1287999Z 111 |         logger.error("Failed to create empty files: %s", e)
2025-06-06T02:21:07.1288077Z     |
2025-06-06T02:21:07.1288085Z 
2025-06-06T02:21:07.1288348Z run_bandit_scan.py:110:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.1288424Z     |
2025-06-06T02:21:07.1288519Z 109 |         return True
2025-06-06T02:21:07.1288648Z 110 |     except Exception as e:
2025-06-06T02:21:07.1288750Z     |            ^^^^^^^^^ BLE001
2025-06-06T02:21:07.1288963Z 111 |         logger.error("Failed to create empty files: %s", e)
2025-06-06T02:21:07.1289057Z 112 |         return False
2025-06-06T02:21:07.1289134Z     |
2025-06-06T02:21:07.1289141Z 
2025-06-06T02:21:07.1289440Z run_bandit_scan.py:111:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T02:21:07.1289516Z     |
2025-06-06T02:21:07.1289609Z 109 |         return True
2025-06-06T02:21:07.1289737Z 110 |     except Exception as e:
2025-06-06T02:21:07.1289942Z 111 |         logger.error("Failed to create empty files: %s", e)
2025-06-06T02:21:07.1290092Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T02:21:07.1290191Z 112 |         return False
2025-06-06T02:21:07.1290260Z     |
2025-06-06T02:21:07.1290379Z     = help: Replace with `exception`
2025-06-06T02:21:07.1290388Z 
2025-06-06T02:21:07.1290609Z run_bandit_scan.py:137:5: C901 `main` is too complex (11 > 10)
2025-06-06T02:21:07.1290685Z     |
2025-06-06T02:21:07.1290782Z 137 | def main() -> int:
2025-06-06T02:21:07.1290866Z     |     ^^^^ C901
2025-06-06T02:21:07.1290939Z 138 |     """
2025-06-06T02:21:07.1291169Z 139 |     Run Bandit security scan with appropriate configuration.
2025-06-06T02:21:07.1291241Z     |
2025-06-06T02:21:07.1291248Z 
2025-06-06T02:21:07.1291513Z run_bandit_scan.py:180:16: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.1291583Z     |
2025-06-06T02:21:07.1291768Z 178 |             # Update bandit path after installation
2025-06-06T02:21:07.1291941Z 179 |             bandit_path = find_bandit_executable()
2025-06-06T02:21:07.1292073Z 180 |         except Exception as e:
2025-06-06T02:21:07.1292179Z     |                ^^^^^^^^^ BLE001
2025-06-06T02:21:07.1292390Z 181 |             logger.warning("Failed to install bandit: %s", e)
2025-06-06T02:21:07.1292459Z     |
2025-06-06T02:21:07.1292467Z 
2025-06-06T02:21:07.1292724Z run_bandit_scan.py:212:20: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.1292793Z     |
2025-06-06T02:21:07.1292885Z 210 |                 )
2025-06-06T02:21:07.1293136Z 211 |                 logger.info("Bandit scan completed with configuration file")
2025-06-06T02:21:07.1293280Z 212 |             except Exception as e:
2025-06-06T02:21:07.1293520Z     |                    ^^^^^^^^^ BLE001
2025-06-06T02:21:07.1293811Z 213 |                 logger.warning("Bandit scan with configuration file failed: %s", e)
2025-06-06T02:21:07.1293994Z 214 |         else:
2025-06-06T02:21:07.1294071Z     |
2025-06-06T02:21:07.1294078Z 
2025-06-06T02:21:07.1294337Z run_bandit_scan.py:239:20: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.1294410Z     |
2025-06-06T02:21:07.1294500Z 237 |                 )
2025-06-06T02:21:07.1294764Z 238 |                 logger.info("Bandit scan completed with default configuration")
2025-06-06T02:21:07.1294901Z 239 |             except Exception as e:
2025-06-06T02:21:07.1295013Z     |                    ^^^^^^^^^ BLE001
2025-06-06T02:21:07.1295301Z 240 |                 logger.warning("Bandit scan with default configuration failed: %s", e)
2025-06-06T02:21:07.1295430Z 241 |     except Exception as e:
2025-06-06T02:21:07.1295498Z     |
2025-06-06T02:21:07.1295510Z 
2025-06-06T02:21:07.1295770Z run_bandit_scan.py:241:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.1295839Z     |
2025-06-06T02:21:07.1295979Z 239 |             except Exception as e:
2025-06-06T02:21:07.1296273Z 240 |                 logger.warning("Bandit scan with default configuration failed: %s", e)
2025-06-06T02:21:07.1296394Z 241 |     except Exception as e:
2025-06-06T02:21:07.1296498Z     |            ^^^^^^^^^ BLE001
2025-06-06T02:21:07.1296681Z 242 |         logger.error("Error running bandit: %s", e)
2025-06-06T02:21:07.1296764Z     |
2025-06-06T02:21:07.1296771Z 
2025-06-06T02:21:07.1297061Z run_bandit_scan.py:242:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T02:21:07.1297133Z     |
2025-06-06T02:21:07.1297418Z 240 |                 logger.warning("Bandit scan with default configuration failed: %s", e)
2025-06-06T02:21:07.1297545Z 241 |     except Exception as e:
2025-06-06T02:21:07.1297723Z 242 |         logger.error("Error running bandit: %s", e)
2025-06-06T02:21:07.1297968Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T02:21:07.1298040Z 243 |
2025-06-06T02:21:07.1298183Z 244 |     # Convert JSON to SARIF format
2025-06-06T02:21:07.1298251Z     |
2025-06-06T02:21:07.1298372Z     = help: Replace with `exception`
2025-06-06T02:21:07.1298380Z 
2025-06-06T02:21:07.1298636Z run_bandit_scan.py:258:20: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.1298711Z     |
2025-06-06T02:21:07.1298798Z 256 |                 )
2025-06-06T02:21:07.1299031Z 257 |                 logger.info("Converted Bandit results to SARIF format")
2025-06-06T02:21:07.1299166Z 258 |             except Exception as e:
2025-06-06T02:21:07.1299277Z     |                    ^^^^^^^^^ BLE001
2025-06-06T02:21:07.1299402Z 259 |                 logger.warning(
2025-06-06T02:21:07.1299643Z 260 |                     "Failed to convert Bandit results to SARIF format: %s", e
2025-06-06T02:21:07.1299712Z     |
2025-06-06T02:21:07.1299719Z 
2025-06-06T02:21:07.1299982Z run_bandit_scan.py:262:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.1300051Z     |
2025-06-06T02:21:07.1300293Z 260 |                     "Failed to convert Bandit results to SARIF format: %s", e
2025-06-06T02:21:07.1300382Z 261 |                 )
2025-06-06T02:21:07.1300511Z 262 |     except Exception as e:
2025-06-06T02:21:07.1300610Z     |            ^^^^^^^^^ BLE001
2025-06-06T02:21:07.1300817Z 263 |         logger.error("Error converting to SARIF: %s", e)
2025-06-06T02:21:07.1300892Z     |
2025-06-06T02:21:07.1300899Z 
2025-06-06T02:21:07.1301192Z run_bandit_scan.py:263:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T02:21:07.1301260Z     |
2025-06-06T02:21:07.1301353Z 261 |                 )
2025-06-06T02:21:07.1301474Z 262 |     except Exception as e:
2025-06-06T02:21:07.1301675Z 263 |         logger.error("Error converting to SARIF: %s", e)
2025-06-06T02:21:07.1301812Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T02:21:07.1302012Z 264 |
2025-06-06T02:21:07.1302211Z 265 |     logger.info("Bandit scan completed successfully")
2025-06-06T02:21:07.1302288Z     |
2025-06-06T02:21:07.1302399Z     = help: Replace with `exception`
2025-06-06T02:21:07.1302511Z 
2025-06-06T02:21:07.1302784Z run_crewai_tests.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1302856Z   |
2025-06-06T02:21:07.1302958Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1303060Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1303130Z 2 | """
2025-06-06T02:21:07.1303261Z 3 | Run CrewAI-specific tests.
2025-06-06T02:21:07.1303329Z   |
2025-06-06T02:21:07.1303336Z 
2025-06-06T02:21:07.1303598Z run_mcp_tests.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1303667Z   |
2025-06-06T02:21:07.1303770Z 1 | #!/usr/bin/env python
2025-06-06T02:21:07.1303867Z   | ^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1303940Z 2 | """
2025-06-06T02:21:07.1304097Z 3 | Wrapper script to run MCP adapter tests.
2025-06-06T02:21:07.1304175Z   |
2025-06-06T02:21:07.1304182Z 
2025-06-06T02:21:07.1304435Z run_pre_commit.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1304508Z   |
2025-06-06T02:21:07.1304609Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1304711Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1304779Z 2 |
2025-06-06T02:21:07.1304857Z 3 | """
2025-06-06T02:21:07.1304925Z   |
2025-06-06T02:21:07.1304932Z 
2025-06-06T02:21:07.1305235Z run_pre_commit_on_all_files.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1305304Z   |
2025-06-06T02:21:07.1305403Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1305498Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1305572Z 2 |
2025-06-06T02:21:07.1305640Z 3 | """
2025-06-06T02:21:07.1305714Z   |
2025-06-06T02:21:07.1305721Z 
2025-06-06T02:21:07.1305959Z run_tests.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1306037Z   |
2025-06-06T02:21:07.1306138Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1306236Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1306305Z 2 | """
2025-06-06T02:21:07.1306656Z 3 | Optimized test runner script that adjusts the number of pytest workers based on test count.
2025-06-06T02:21:07.1306727Z   |
2025-06-06T02:21:07.1306733Z 
2025-06-06T02:21:07.1306963Z run_tests.py:117:5: C901 `count_tests` is too complex (14 > 10)
2025-06-06T02:21:07.1307031Z     |
2025-06-06T02:21:07.1307231Z 117 | def count_tests(validated_args: list[str]) -> int:
2025-06-06T02:21:07.1307309Z     |     ^^^^^^^^^^^ C901
2025-06-06T02:21:07.1307385Z 118 |     """
2025-06-06T02:21:07.1307557Z 119 |     Count the number of tests that will be run.
2025-06-06T02:21:07.1307631Z     |
2025-06-06T02:21:07.1307638Z 
2025-06-06T02:21:07.1307964Z run_tests.py:117:5: PLR0912 Too many branches (13 > 12)
2025-06-06T02:21:07.1308040Z     |
2025-06-06T02:21:07.1308233Z 117 | def count_tests(validated_args: list[str]) -> int:
2025-06-06T02:21:07.1308320Z     |     ^^^^^^^^^^^ PLR0912
2025-06-06T02:21:07.1308397Z 118 |     """
2025-06-06T02:21:07.1308572Z 119 |     Count the number of tests that will be run.
2025-06-06T02:21:07.1308639Z     |
2025-06-06T02:21:07.1308647Z 
2025-06-06T02:21:07.1308941Z run_tests.py:140:18: S603 `subprocess` call: check for execution of untrusted input
2025-06-06T02:21:07.1309011Z     |
2025-06-06T02:21:07.1309326Z 138 |         # nosec B603 - subprocess call is used with shell=False and validated arguments
2025-06-06T02:21:07.1309586Z 139 |         # nosec B607 - subprocess call is used with a fixed executable path
2025-06-06T02:21:07.1309797Z 140 |         result = subprocess.run(  # nosec B603 # nosec B607
2025-06-06T02:21:07.1309916Z     |                  ^^^^^^^^^^^^^^ S603
2025-06-06T02:21:07.1310185Z 141 |             [sys.executable, "-m", "pytest", "--collect-only", *validated_args],
2025-06-06T02:21:07.1310304Z 142 |             check=False,
2025-06-06T02:21:07.1310372Z     |
2025-06-06T02:21:07.1310379Z 
2025-06-06T02:21:07.1310789Z run_tests.py:201:9: TRY300 Consider moving this statement to an `else` block
2025-06-06T02:21:07.1310860Z     |
2025-06-06T02:21:07.1311054Z 200 |         logger.info("Collected %d tests", test_count)
2025-06-06T02:21:07.1311278Z 201 |         return test_count
2025-06-06T02:21:07.1311395Z     |         ^^^^^^^^^^^^^^^^^ TRY300
2025-06-06T02:21:07.1311465Z 202 |
2025-06-06T02:21:07.1311639Z 203 |     except subprocess.TimeoutExpired as e:
2025-06-06T02:21:07.1311706Z     |
2025-06-06T02:21:07.1311714Z 
2025-06-06T02:21:07.1311965Z run_tests.py:214:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.1312036Z     |
2025-06-06T02:21:07.1312246Z 212 |         return default_test_count if has_test_files else 0
2025-06-06T02:21:07.1312315Z 213 |
2025-06-06T02:21:07.1312445Z 214 |     except Exception as e:
2025-06-06T02:21:07.1312544Z     |            ^^^^^^^^^ BLE001
2025-06-06T02:21:07.1312652Z 215 |         logger.warning(
2025-06-06T02:21:07.1312963Z 216 |             "Unexpected error collecting tests: %s. Falling back to single worker.", e
2025-06-06T02:21:07.1313068Z     |
2025-06-06T02:21:07.1313076Z 
2025-06-06T02:21:07.1313354Z run_tests.py:221:5: C901 `ensure_security_reports_dir` is too complex (12 > 10)
2025-06-06T02:21:07.1313431Z     |
2025-06-06T02:21:07.1313597Z 221 | def ensure_security_reports_dir() -> None:
2025-06-06T02:21:07.1313716Z     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ C901
2025-06-06T02:21:07.1313788Z 222 |     """
2025-06-06T02:21:07.1313977Z 223 |     Ensure the security-reports directory exists.
2025-06-06T02:21:07.1314047Z     |
2025-06-06T02:21:07.1314054Z 
2025-06-06T02:21:07.1314249Z run_tests.py:221:5: PLR0912 Too many branches (13 > 12)
2025-06-06T02:21:07.1314318Z     |
2025-06-06T02:21:07.1314492Z 221 | def ensure_security_reports_dir() -> None:
2025-06-06T02:21:07.1314610Z     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLR0912
2025-06-06T02:21:07.1314687Z 222 |     """
2025-06-06T02:21:07.1314867Z 223 |     Ensure the security-reports directory exists.
2025-06-06T02:21:07.1314943Z     |
2025-06-06T02:21:07.1314950Z 
2025-06-06T02:21:07.1315210Z run_tests.py:240:9: TRY300 Consider moving this statement to an `else` block
2025-06-06T02:21:07.1315285Z     |
2025-06-06T02:21:07.1315485Z 238 |         reports_dir.mkdir(parents=True, exist_ok=True)
2025-06-06T02:21:07.1315697Z 239 |         logger.info("Created security-reports directory")
2025-06-06T02:21:07.1315783Z 240 |         return
2025-06-06T02:21:07.1315870Z     |         ^^^^^^ TRY300
2025-06-06T02:21:07.1316039Z 241 |     except (PermissionError, OSError) as e:
2025-06-06T02:21:07.1316320Z 242 |         logger.warning("Failed to create security-reports directory: %s", e)
2025-06-06T02:21:07.1316389Z     |
2025-06-06T02:21:07.1316401Z 
2025-06-06T02:21:07.1316690Z run_tests.py:259:25: S603 `subprocess` call: check for execution of untrusted input
2025-06-06T02:21:07.1316765Z     |
2025-06-06T02:21:07.1317103Z 257 |                         # nosec B603 - subprocess call is used with shell=False and validated arguments
2025-06-06T02:21:07.1317392Z 258 |                         # nosec B607 - subprocess call is used with a fixed executable path
2025-06-06T02:21:07.1317594Z 259 |                         subprocess.run(  # nosec B603 # nosec B607
2025-06-06T02:21:07.1317714Z     |                         ^^^^^^^^^^^^^^ S603
2025-06-06T02:21:07.1317957Z 260 |                             [
2025-06-06T02:21:07.1318113Z 261 |                                 cmd_path,
2025-06-06T02:21:07.1318182Z     |
2025-06-06T02:21:07.1318190Z 
2025-06-06T02:21:07.1318460Z run_tests.py:275:17: TRY300 Consider moving this statement to an `else` block
2025-06-06T02:21:07.1318530Z     |
2025-06-06T02:21:07.1318681Z 273 |                     # Use symlink on Unix
2025-06-06T02:21:07.1318893Z 274 |                     os.symlink(alt_reports_dir, "security-reports")
2025-06-06T02:21:07.1318994Z 275 |                 return
2025-06-06T02:21:07.1319097Z     |                 ^^^^^^ TRY300
2025-06-06T02:21:07.1319269Z 276 |             except Exception as symlink_error:
2025-06-06T02:21:07.1319522Z 277 |                 logger.warning(
2025-06-06T02:21:07.1319597Z     |
2025-06-06T02:21:07.1319605Z 
2025-06-06T02:21:07.1319979Z run_tests.py:276:20: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.1320057Z     |
2025-06-06T02:21:07.1320269Z 274 |                     os.symlink(alt_reports_dir, "security-reports")
2025-06-06T02:21:07.1320367Z 275 |                 return
2025-06-06T02:21:07.1320531Z 276 |             except Exception as symlink_error:
2025-06-06T02:21:07.1320645Z     |                    ^^^^^^^^^ BLE001
2025-06-06T02:21:07.1320768Z 277 |                 logger.warning(
2025-06-06T02:21:07.1321012Z 278 |                     "Failed to create symlink to alternative directory: %s",
2025-06-06T02:21:07.1321081Z     |
2025-06-06T02:21:07.1321089Z 
2025-06-06T02:21:07.1321333Z run_tests.py:281:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.1321403Z     |
2025-06-06T02:21:07.1321542Z 279 |                     symlink_error,
2025-06-06T02:21:07.1321633Z 280 |                 )
2025-06-06T02:21:07.1321787Z 281 |     except Exception as alt_dir_error:
2025-06-06T02:21:07.1321888Z     |            ^^^^^^^^^ BLE001
2025-06-06T02:21:07.1321996Z 282 |         logger.warning(
2025-06-06T02:21:07.1322302Z 283 |             "Failed to create alternative security_reports directory: %s", alt_dir_error
2025-06-06T02:21:07.1322374Z     |
2025-06-06T02:21:07.1322381Z 
2025-06-06T02:21:07.1322670Z run_tests.py:302:21: S603 `subprocess` call: check for execution of untrusted input
2025-06-06T02:21:07.1322739Z     |
2025-06-06T02:21:07.1323067Z 300 |                     # nosec B603 - subprocess call is used with shell=False and validated arguments
2025-06-06T02:21:07.1323338Z 301 |                     # nosec B607 - subprocess call is used with a fixed executable path
2025-06-06T02:21:07.1323538Z 302 |                     subprocess.run(  # nosec B603 # nosec B607
2025-06-06T02:21:07.1323650Z     |                     ^^^^^^^^^^^^^^ S603
2025-06-06T02:21:07.1323770Z 303 |                         [
2025-06-06T02:21:07.1323905Z 304 |                             cmd_path,
2025-06-06T02:21:07.1323978Z     |
2025-06-06T02:21:07.1323985Z 
2025-06-06T02:21:07.1324224Z run_tests.py:318:16: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.1324297Z     |
2025-06-06T02:21:07.1324432Z 316 |                 # Use symlink on Unix
2025-06-06T02:21:07.1324630Z 317 |                 os.symlink(temp_dir, "security-reports")
2025-06-06T02:21:07.1324787Z 318 |         except Exception as symlink_error:
2025-06-06T02:21:07.1324892Z     |                ^^^^^^^^^ BLE001
2025-06-06T02:21:07.1325011Z 319 |             logger.warning(
2025-06-06T02:21:07.1325271Z 320 |                 "Failed to create symlink to temp directory: %s", symlink_error
2025-06-06T02:21:07.1325341Z     |
2025-06-06T02:21:07.1325348Z 
2025-06-06T02:21:07.1325589Z run_tests.py:322:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.1325664Z     |
2025-06-06T02:21:07.1325919Z 320 |                 "Failed to create symlink to temp directory: %s", symlink_error
2025-06-06T02:21:07.1326003Z 321 |             )
2025-06-06T02:21:07.1326164Z 322 |     except Exception as temp_dir_error:
2025-06-06T02:21:07.1326262Z     |            ^^^^^^^^^ BLE001
2025-06-06T02:21:07.1326370Z 323 |         logger.warning(
2025-06-06T02:21:07.1326634Z 324 |             "Failed to create security-reports directory in temp location: %s",
2025-06-06T02:21:07.1326718Z     |
2025-06-06T02:21:07.1326725Z 
2025-06-06T02:21:07.1327007Z run_tests.py:355:16: PTH112 `os.path.isdir()` should be replaced by `Path.is_dir()`
2025-06-06T02:21:07.1327081Z     |
2025-06-06T02:21:07.1327315Z 353 |         # Method 4: Check for common virtual environment directories
2025-06-06T02:21:07.1327515Z 354 |         for venv_dir in [".venv", "venv", "env", ".env"]:
2025-06-06T02:21:07.1327715Z 355 |             if os.path.isdir(venv_dir) and os.path.isfile(
2025-06-06T02:21:07.1328027Z     |                ^^^^^^^^^^^^^ PTH112
2025-06-06T02:21:07.1328216Z 356 |                 os.path.join(venv_dir, "pyvenv.cfg")
2025-06-06T02:21:07.1328303Z 357 |             ):
2025-06-06T02:21:07.1328375Z     |
2025-06-06T02:21:07.1328492Z 
2025-06-06T02:21:07.1328788Z run_tests.py:355:44: PTH113 `os.path.isfile()` should be replaced by `Path.is_file()`
2025-06-06T02:21:07.1328865Z     |
2025-06-06T02:21:07.1329102Z 353 |         # Method 4: Check for common virtual environment directories
2025-06-06T02:21:07.1329298Z 354 |         for venv_dir in [".venv", "venv", "env", ".env"]:
2025-06-06T02:21:07.1329492Z 355 |             if os.path.isdir(venv_dir) and os.path.isfile(
2025-06-06T02:21:07.1329639Z     |                                            ^^^^^^^^^^^^^^ PTH113
2025-06-06T02:21:07.1329817Z 356 |                 os.path.join(venv_dir, "pyvenv.cfg")
2025-06-06T02:21:07.1329905Z 357 |             ):
2025-06-06T02:21:07.1329976Z     |
2025-06-06T02:21:07.1329983Z 
2025-06-06T02:21:07.1330310Z run_tests.py:356:17: PTH118 `os.path.join()` should be replaced by `Path` with `/` operator
2025-06-06T02:21:07.1330384Z     |
2025-06-06T02:21:07.1330578Z 354 |         for venv_dir in [".venv", "venv", "env", ".env"]:
2025-06-06T02:21:07.1330770Z 355 |             if os.path.isdir(venv_dir) and os.path.isfile(
2025-06-06T02:21:07.1330949Z 356 |                 os.path.join(venv_dir, "pyvenv.cfg")
2025-06-06T02:21:07.1331058Z     |                 ^^^^^^^^^^^^ PTH118
2025-06-06T02:21:07.1331144Z 357 |             ):
2025-06-06T02:21:07.1331262Z 358 |                 return True
2025-06-06T02:21:07.1331334Z     |
2025-06-06T02:21:07.1331342Z 
2025-06-06T02:21:07.1331606Z run_tests.py:361:9: TRY300 Consider moving this statement to an `else` block
2025-06-06T02:21:07.1331677Z     |
2025-06-06T02:21:07.1331826Z 360 |         # Not in a virtual environment
2025-06-06T02:21:07.1331925Z 361 |         return False
2025-06-06T02:21:07.1332024Z     |         ^^^^^^^^^^^^ TRY300
2025-06-06T02:21:07.1332151Z 362 |     except Exception as e:
2025-06-06T02:21:07.1332436Z 363 |         # If any error occurs, log it but assume we're not in a virtual environment
2025-06-06T02:21:07.1332511Z     |
2025-06-06T02:21:07.1332518Z 
2025-06-06T02:21:07.1332762Z run_tests.py:362:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.1332837Z     |
2025-06-06T02:21:07.1332982Z 360 |         # Not in a virtual environment
2025-06-06T02:21:07.1333084Z 361 |         return False
2025-06-06T02:21:07.1333208Z 362 |     except Exception as e:
2025-06-06T02:21:07.1333309Z     |            ^^^^^^^^^ BLE001
2025-06-06T02:21:07.1333580Z 363 |         # If any error occurs, log it but assume we're not in a virtual environment
2025-06-06T02:21:07.1333842Z 364 |         logger.warning("Error checking for virtual environment: %s", e)
2025-06-06T02:21:07.1333913Z     |
2025-06-06T02:21:07.1333925Z 
2025-06-06T02:21:07.1334122Z run_tests.py:368:5: C901 `main` is too complex (22 > 10)
2025-06-06T02:21:07.1334196Z     |
2025-06-06T02:21:07.1334300Z 368 | def main() -> None:
2025-06-06T02:21:07.1334381Z     |     ^^^^ C901
2025-06-06T02:21:07.1334454Z 369 |     """
2025-06-06T02:21:07.1334648Z 370 |     Run the test suite with optimized worker count.
2025-06-06T02:21:07.1334722Z     |
2025-06-06T02:21:07.1334729Z 
2025-06-06T02:21:07.1334923Z run_tests.py:368:5: PLR0912 Too many branches (27 > 12)
2025-06-06T02:21:07.1334991Z     |
2025-06-06T02:21:07.1335096Z 368 | def main() -> None:
2025-06-06T02:21:07.1335176Z     |     ^^^^ PLR0912
2025-06-06T02:21:07.1335250Z 369 |     """
2025-06-06T02:21:07.1335433Z 370 |     Run the test suite with optimized worker count.
2025-06-06T02:21:07.1335508Z     |
2025-06-06T02:21:07.1335515Z 
2025-06-06T02:21:07.1335706Z run_tests.py:368:5: PLR0915 Too many statements (90 > 50)
2025-06-06T02:21:07.1335779Z     |
2025-06-06T02:21:07.1335875Z 368 | def main() -> None:
2025-06-06T02:21:07.1335959Z     |     ^^^^ PLR0915
2025-06-06T02:21:07.1336030Z 369 |     """
2025-06-06T02:21:07.1336214Z 370 |     Run the test suite with optimized worker count.
2025-06-06T02:21:07.1336402Z     |
2025-06-06T02:21:07.1336409Z 
2025-06-06T02:21:07.1336701Z run_tests.py:402:28: S603 `subprocess` call: check for execution of untrusted input
2025-06-06T02:21:07.1336845Z     |
2025-06-06T02:21:07.1337166Z 400 |             # nosec B603 - subprocess call is used with shell=False and validated arguments
2025-06-06T02:21:07.1337430Z 401 |             # nosec B607 - subprocess call is used with a fixed executable path
2025-06-06T02:21:07.1337666Z 402 |             check_result = subprocess.run(  # nosec B603 # nosec B607
2025-06-06T02:21:07.1337790Z     |                            ^^^^^^^^^^^^^^ S603
2025-06-06T02:21:07.1338101Z 403 |                 [sys.executable, "-c", "import pytest_xdist"],
2025-06-06T02:21:07.1338224Z 404 |                 check=False,
2025-06-06T02:21:07.1338299Z     |
2025-06-06T02:21:07.1338306Z 
2025-06-06T02:21:07.1338588Z run_tests.py:425:32: S603 `subprocess` call: check for execution of untrusted input
2025-06-06T02:21:07.1338667Z     |
2025-06-06T02:21:07.1338990Z 423 |                     # nosec B603 - subprocess call is used with shell=False and validated arguments
2025-06-06T02:21:07.1339242Z 424 |                     # nosec B607 - We're using shutil.which to get the full path
2025-06-06T02:21:07.1339461Z 425 |                     uv_check = subprocess.run(  # nosec B603 # nosec B607
2025-06-06T02:21:07.1339593Z     |                                ^^^^^^^^^^^^^^ S603
2025-06-06T02:21:07.1339757Z 426 |                         [uv_path, "--version"],
2025-06-06T02:21:07.1339897Z 427 |                         check=False,
2025-06-06T02:21:07.1339977Z     |
2025-06-06T02:21:07.1339986Z 
2025-06-06T02:21:07.1340273Z run_tests.py:453:34: S603 `subprocess` call: check for execution of untrusted input
2025-06-06T02:21:07.1340348Z     |
2025-06-06T02:21:07.1340667Z 451 |                 # nosec B603 - subprocess call is used with shell=False and validated arguments
2025-06-06T02:21:07.1340945Z 452 |                 # nosec B607 - subprocess call is used with a fixed executable path
2025-06-06T02:21:07.1341191Z 453 |                 install_result = subprocess.run(  # nosec B603 # nosec B607
2025-06-06T02:21:07.1341329Z     |                                  ^^^^^^^^^^^^^^ S603
2025-06-06T02:21:07.1341459Z 454 |                     install_cmd,
2025-06-06T02:21:07.1341588Z 455 |                     check=False,
2025-06-06T02:21:07.1341660Z     |
2025-06-06T02:21:07.1341667Z 
2025-06-06T02:21:07.1341920Z run_tests.py:478:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.1341991Z     |
2025-06-06T02:21:07.1342088Z 476 |                 e,
2025-06-06T02:21:07.1342169Z 477 |             )
2025-06-06T02:21:07.1342296Z 478 |     except Exception as e:
2025-06-06T02:21:07.1342398Z     |            ^^^^^^^^^ BLE001
2025-06-06T02:21:07.1342507Z 479 |         logger.warning(
2025-06-06T02:21:07.1342878Z 480 |             "Unexpected error installing pytest-xdist: %s. Will run tests without parallelization.",
2025-06-06T02:21:07.1342957Z     |
2025-06-06T02:21:07.1342964Z 
2025-06-06T02:21:07.1343245Z run_tests.py:510:27: S603 `subprocess` call: check for execution of untrusted input
2025-06-06T02:21:07.1343318Z     |
2025-06-06T02:21:07.1343626Z 508 |             # nosec B603 - subprocess call is used with shell=False and validated arguments
2025-06-06T02:21:07.1343892Z 509 |             # nosec B607 - subprocess call is used with a fixed executable path
2025-06-06T02:21:07.1344120Z 510 |             xdist_check = subprocess.run(  # nosec B603 # nosec B607
2025-06-06T02:21:07.1344252Z     |                           ^^^^^^^^^^^^^^ S603
2025-06-06T02:21:07.1344455Z 511 |                 [sys.executable, "-c", "import pytest_xdist"],
2025-06-06T02:21:07.1344582Z 512 |                 check=False,
2025-06-06T02:21:07.1344650Z     |
2025-06-06T02:21:07.1344660Z 
2025-06-06T02:21:07.1344895Z run_tests.py:530:16: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.1344968Z     |
2025-06-06T02:21:07.1345201Z 528 |                 e,
2025-06-06T02:21:07.1345290Z 529 |             )
2025-06-06T02:21:07.1345422Z 530 |         except Exception as e:
2025-06-06T02:21:07.1345533Z     |                ^^^^^^^^^ BLE001
2025-06-06T02:21:07.1345756Z 531 |             logger.warning(
2025-06-06T02:21:07.1346140Z 532 |                 "Unexpected error checking for pytest-xdist: %s. Will run tests without parallelization.",
2025-06-06T02:21:07.1346212Z     |
2025-06-06T02:21:07.1346220Z 
2025-06-06T02:21:07.1346504Z run_tests.py:562:18: S603 `subprocess` call: check for execution of untrusted input
2025-06-06T02:21:07.1346572Z     |
2025-06-06T02:21:07.1346882Z 560 |         # nosec B603 - subprocess call is used with shell=False and validated arguments
2025-06-06T02:21:07.1347137Z 561 |         # nosec B607 - subprocess call is used with a fixed executable path
2025-06-06T02:21:07.1347343Z 562 |         result = subprocess.run(  # nosec B603 # nosec B607
2025-06-06T02:21:07.1347454Z     |                  ^^^^^^^^^^^^^^ S603
2025-06-06T02:21:07.1347566Z 563 |             pytest_cmd,
2025-06-06T02:21:07.1347680Z 564 |             check=False,
2025-06-06T02:21:07.1347756Z     |
2025-06-06T02:21:07.1347763Z 
2025-06-06T02:21:07.1348143Z run_tests.py:580:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T02:21:07.1348218Z     |
2025-06-06T02:21:07.1348432Z 578 |                 logger.error("Pytest stderr: %s", result.stderr)
2025-06-06T02:21:07.1348643Z 579 |     except subprocess.TimeoutExpired as timeout_error:
2025-06-06T02:21:07.1348936Z 580 |         logger.error("Pytest execution timed out after 1 hour: %s", timeout_error)
2025-06-06T02:21:07.1349103Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T02:21:07.1349197Z 581 |         sys.exit(2)
2025-06-06T02:21:07.1349427Z 582 |     except subprocess.SubprocessError as subprocess_error:
2025-06-06T02:21:07.1349499Z     |
2025-06-06T02:21:07.1349627Z     = help: Replace with `exception`
2025-06-06T02:21:07.1349640Z 
2025-06-06T02:21:07.1349909Z run_tests.py:583:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T02:21:07.1349984Z     |
2025-06-06T02:21:07.1350078Z 581 |         sys.exit(2)
2025-06-06T02:21:07.1350312Z 582 |     except subprocess.SubprocessError as subprocess_error:
2025-06-06T02:21:07.1350547Z 583 |         logger.error("Error running pytest: %s", subprocess_error)
2025-06-06T02:21:07.1350699Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T02:21:07.1350800Z 584 |         sys.exit(1)
2025-06-06T02:21:07.1350924Z 585 |     except Exception as e:
2025-06-06T02:21:07.1351000Z     |
2025-06-06T02:21:07.1351114Z     = help: Replace with `exception`
2025-06-06T02:21:07.1351122Z 
2025-06-06T02:21:07.1351373Z run_tests.py:585:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.1351443Z     |
2025-06-06T02:21:07.1351686Z 583 |         logger.error("Error running pytest: %s", subprocess_error)
2025-06-06T02:21:07.1351785Z 584 |         sys.exit(1)
2025-06-06T02:21:07.1351910Z 585 |     except Exception as e:
2025-06-06T02:21:07.1352007Z     |            ^^^^^^^^^ BLE001
2025-06-06T02:21:07.1352235Z 586 |         logger.error("Unexpected error running pytest: %s", e)
2025-06-06T02:21:07.1352326Z 587 |         sys.exit(1)
2025-06-06T02:21:07.1352400Z     |
2025-06-06T02:21:07.1352408Z 
2025-06-06T02:21:07.1352675Z run_tests.py:586:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T02:21:07.1352750Z     |
2025-06-06T02:21:07.1352844Z 584 |         sys.exit(1)
2025-06-06T02:21:07.1352980Z 585 |     except Exception as e:
2025-06-06T02:21:07.1353207Z 586 |         logger.error("Unexpected error running pytest: %s", e)
2025-06-06T02:21:07.1353358Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T02:21:07.1353450Z 587 |         sys.exit(1)
2025-06-06T02:21:07.1353525Z     |
2025-06-06T02:21:07.1353642Z     = help: Replace with `exception`
2025-06-06T02:21:07.1353775Z 
2025-06-06T02:21:07.1354059Z run_tests_wrapper.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1354132Z   |
2025-06-06T02:21:07.1354239Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1354442Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1354527Z 2 | """
2025-06-06T02:21:07.1354686Z 3 | Simple wrapper script for running tests.
2025-06-06T02:21:07.1354762Z   |
2025-06-06T02:21:07.1354770Z 
2025-06-06T02:21:07.1355126Z run_tests_wrapper.py:13:1: PTH103 `os.makedirs()` should be replaced by `Path.mkdir(parents=True)`
2025-06-06T02:21:07.1355202Z    |
2025-06-06T02:21:07.1355349Z 12 | # Create security-reports directory
2025-06-06T02:21:07.1355535Z 13 | os.makedirs("security-reports", exist_ok=True)
2025-06-06T02:21:07.1355619Z    | ^^^^^^^^^^^ PTH103
2025-06-06T02:21:07.1355794Z 14 | print("Created security-reports directory")
2025-06-06T02:21:07.1355864Z    |
2025-06-06T02:21:07.1355872Z 
2025-06-06T02:21:07.1356039Z run_tests_wrapper.py:14:1: T201 `print` found
2025-06-06T02:21:07.1356115Z    |
2025-06-06T02:21:07.1356264Z 12 | # Create security-reports directory
2025-06-06T02:21:07.1356435Z 13 | os.makedirs("security-reports", exist_ok=True)
2025-06-06T02:21:07.1356608Z 14 | print("Created security-reports directory")
2025-06-06T02:21:07.1356684Z    | ^^^^^ T201
2025-06-06T02:21:07.1356762Z 15 |
2025-06-06T02:21:07.1357004Z 16 | # Set environment variables to bypass virtual environment checks
2025-06-06T02:21:07.1357082Z    |
2025-06-06T02:21:07.1357169Z    = help: Remove `print`
2025-06-06T02:21:07.1357181Z 
2025-06-06T02:21:07.1357346Z run_tests_wrapper.py:23:5: T201 `print` found
2025-06-06T02:21:07.1357417Z    |
2025-06-06T02:21:07.1357567Z 21 | if os.environ.get("GITHUB_ACTIONS"):
2025-06-06T02:21:07.1357686Z 22 |     os.environ["CI"] = "1"
2025-06-06T02:21:07.1357969Z 23 |     print("GitHub Actions environment detected")
2025-06-06T02:21:07.1358050Z    |     ^^^^^ T201
2025-06-06T02:21:07.1358124Z 24 |
2025-06-06T02:21:07.1358246Z 25 | # Get command line arguments
2025-06-06T02:21:07.1358328Z    |
2025-06-06T02:21:07.1358416Z    = help: Remove `print`
2025-06-06T02:21:07.1358429Z 
2025-06-06T02:21:07.1358777Z run_tests_wrapper.py:34:14: S603 `subprocess` call: check for execution of untrusted input
2025-06-06T02:21:07.1358851Z    |
2025-06-06T02:21:07.1358950Z 32 | # Run pytest directly
2025-06-06T02:21:07.1359027Z 33 | try:
2025-06-06T02:21:07.1359152Z 34 |     result = subprocess.run(
2025-06-06T02:21:07.1359265Z    |              ^^^^^^^^^^^^^^ S603
2025-06-06T02:21:07.1359430Z 35 |         [sys.executable, "-m", "pytest", *args],
2025-06-06T02:21:07.1359528Z 36 |         check=False,
2025-06-06T02:21:07.1359596Z    |
2025-06-06T02:21:07.1359603Z 
2025-06-06T02:21:07.1359873Z run_tests_wrapper.py:41:8: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.1359941Z    |
2025-06-06T02:21:07.1360017Z 39 |     )
2025-06-06T02:21:07.1360152Z 40 |     sys.exit(result.returncode)
2025-06-06T02:21:07.1360259Z 41 | except Exception as e:
2025-06-06T02:21:07.1360343Z    |        ^^^^^^^^^ BLE001
2025-06-06T02:21:07.1360499Z 42 |     print(f"Error running pytest: {e}")
2025-06-06T02:21:07.1360588Z 43 |     sys.exit(1)
2025-06-06T02:21:07.1360663Z    |
2025-06-06T02:21:07.1360673Z 
2025-06-06T02:21:07.1360832Z run_tests_wrapper.py:42:5: T201 `print` found
2025-06-06T02:21:07.1360904Z    |
2025-06-06T02:21:07.1361033Z 40 |     sys.exit(result.returncode)
2025-06-06T02:21:07.1361139Z 41 | except Exception as e:
2025-06-06T02:21:07.1361289Z 42 |     print(f"Error running pytest: {e}")
2025-06-06T02:21:07.1361374Z    |     ^^^^^ T201
2025-06-06T02:21:07.1361462Z 43 |     sys.exit(1)
2025-06-06T02:21:07.1361537Z    |
2025-06-06T02:21:07.1361627Z    = help: Remove `print`
2025-06-06T02:21:07.1361634Z 
2025-06-06T02:21:07.1361876Z run_ui.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1361948Z   |
2025-06-06T02:21:07.1362052Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1362152Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1362499Z 2 | """run_ui.py - Entry point for the Flask web application."""
2025-06-06T02:21:07.1362569Z   |
2025-06-06T02:21:07.1362577Z 
2025-06-06T02:21:07.1363015Z run_ui.py:38:31: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`
2025-06-06T02:21:07.1363089Z    |
2025-06-06T02:21:07.1363295Z 36 |     """Extended handler that compresses rotated logs."""
2025-06-06T02:21:07.1363364Z 37 |
2025-06-06T02:21:07.1363576Z 38 |     def __init__(self, *args: Any, **kwargs: Any) -> None:
2025-06-06T02:21:07.1363695Z    |                               ^^^ ANN401
2025-06-06T02:21:07.1363868Z 39 |         """Initialize with compression delay."""
2025-06-06T02:21:07.1364104Z 40 |         self.compress_delay = int(kwargs.pop("compress_delay", 60))
2025-06-06T02:21:07.1364182Z    |
2025-06-06T02:21:07.1364189Z 
2025-06-06T02:21:07.1364693Z run_ui.py:38:46: ANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`
2025-06-06T02:21:07.1365442Z    |
2025-06-06T02:21:07.1365788Z 36 |     """Extended handler that compresses rotated logs."""
2025-06-06T02:21:07.1366081Z 37 |
2025-06-06T02:21:07.1366382Z 38 |     def __init__(self, *args: Any, **kwargs: Any) -> None:
2025-06-06T02:21:07.1366744Z    |                                              ^^^ ANN401
2025-06-06T02:21:07.1367157Z 39 |         """Initialize with compression delay."""
2025-06-06T02:21:07.1367704Z 40 |         self.compress_delay = int(kwargs.pop("compress_delay", 60))
2025-06-06T02:21:07.1368359Z    |
2025-06-06T02:21:07.1368471Z 
2025-06-06T02:21:07.1368745Z scripts/artist_demo.py:20:1: E402 Module level import not at top of file
2025-06-06T02:21:07.1369249Z    |
2025-06-06T02:21:07.1369533Z 18 |     sys.path.insert(0, str(project_root))
2025-06-06T02:21:07.1369900Z 19 |
2025-06-06T02:21:07.1370175Z 20 | from ai_models.artist_agent import ArtistAgent
2025-06-06T02:21:07.1370620Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
2025-06-06T02:21:07.1370883Z    |
2025-06-06T02:21:07.1371006Z 
2025-06-06T02:21:07.1371372Z scripts/artist_demo.py:23:5: ANN201 Missing return type annotation for public function `main`
2025-06-06T02:21:07.1371767Z    |
2025-06-06T02:21:07.1371930Z 23 | def main():
2025-06-06T02:21:07.1372142Z    |     ^^^^ ANN201
2025-06-06T02:21:07.1372433Z 24 |     parser = argparse.ArgumentParser(
2025-06-06T02:21:07.1372993Z 25 |         description="Demo for ArtistAgent: agentic tool use (calculator, text analyzer, fallback)."
2025-06-06T02:21:07.1373404Z    |
2025-06-06T02:21:07.1373755Z    = help: Add return type annotation: `None`
2025-06-06T02:21:07.1374019Z 
2025-06-06T02:21:07.1374348Z scripts/artist_demo.py:23:5: D103 Missing docstring in public function
2025-06-06T02:21:07.1385503Z    |
2025-06-06T02:21:07.1385829Z 23 | def main():
2025-06-06T02:21:07.1386154Z    |     ^^^^ D103
2025-06-06T02:21:07.1386630Z 24 |     parser = argparse.ArgumentParser(
2025-06-06T02:21:07.1387383Z 25 |         description="Demo for ArtistAgent: agentic tool use (calculator, text analyzer, fallback)."
2025-06-06T02:21:07.1388046Z    |
2025-06-06T02:21:07.1388202Z 
2025-06-06T02:21:07.1388543Z scripts/artist_demo.py:40:9: SIM118 Use `key in dict` instead of `key in dict.keys()`
2025-06-06T02:21:07.1388925Z    |
2025-06-06T02:21:07.1389152Z 38 |     # Print available tools
2025-06-06T02:21:07.1389449Z 39 |     print("\nAvailable tools:")
2025-06-06T02:21:07.1389783Z 40 |     for tool_name in agent.tools.keys():
2025-06-06T02:21:07.1390099Z    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SIM118
2025-06-06T02:21:07.1390412Z 41 |         print(f"  - {tool_name}")
2025-06-06T02:21:07.1390651Z    |
2025-06-06T02:21:07.1390829Z    = help: Remove `.keys()`
2025-06-06T02:21:07.1390974Z 
2025-06-06T02:21:07.1391361Z scripts/check_logger_initialization.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1391775Z   |
2025-06-06T02:21:07.1391968Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1392210Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1392424Z 2 | """
2025-06-06T02:21:07.1392859Z 3 | Logger initialization checker script.
2025-06-06T02:21:07.1393115Z   |
2025-06-06T02:21:07.1393210Z 
2025-06-06T02:21:07.1393529Z scripts/fix/fix_all_files.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1394007Z   |
2025-06-06T02:21:07.1394196Z 1 | #!/usr/bin/env python
2025-06-06T02:21:07.1394436Z   | ^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1394892Z 2 | """Script to fix all Python files by replacing them with minimal valid Python files."""
2025-06-06T02:21:07.1395266Z   |
2025-06-06T02:21:07.1395355Z 
2025-06-06T02:21:07.1395721Z scripts/fix/fix_bandit_security_scan.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1396124Z   |
2025-06-06T02:21:07.1396307Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1396535Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1396749Z 2 | """
2025-06-06T02:21:07.1397043Z 3 | Fix Bandit Security Scan Issues for GitHub Actions.
2025-06-06T02:21:07.1397324Z   |
2025-06-06T02:21:07.1397417Z 
2025-06-06T02:21:07.1397760Z scripts/fix/fix_codeql_issues.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1398260Z   |
2025-06-06T02:21:07.1398443Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1398786Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1399006Z 2 | """
2025-06-06T02:21:07.1399264Z 3 | Script to fix CodeQL issues in the codebase.
2025-06-06T02:21:07.1399517Z   |
2025-06-06T02:21:07.1399609Z 
2025-06-06T02:21:07.1399976Z scripts/fix/fix_github_actions_bandit.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1400380Z   |
2025-06-06T02:21:07.1400558Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1400792Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1401005Z 2 | """
2025-06-06T02:21:07.1401275Z 3 | Fix GitHub Actions Bandit Configuration Issues.
2025-06-06T02:21:07.1401542Z   |
2025-06-06T02:21:07.1401629Z 
2025-06-06T02:21:07.1401970Z scripts/fix/fix_linting_issues.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1402357Z   |
2025-06-06T02:21:07.1402540Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1402856Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1403072Z 2 |
2025-06-06T02:21:07.1403226Z 3 | """
2025-06-06T02:21:07.1403382Z   |
2025-06-06T02:21:07.1403470Z 
2025-06-06T02:21:07.1403841Z scripts/fix/fix_potential_secrets.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1404401Z   |
2025-06-06T02:21:07.1404590Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1404821Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1405033Z 2 |
2025-06-06T02:21:07.1405184Z 3 | """
2025-06-06T02:21:07.1405333Z   |
2025-06-06T02:21:07.1405426Z 
2025-06-06T02:21:07.1405762Z scripts/fix/fix_security_issues.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1406145Z   |
2025-06-06T02:21:07.1406322Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1406546Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1406752Z 2 | """
2025-06-06T02:21:07.1407013Z 3 | Security issues scanner and fixer for CI/CD.
2025-06-06T02:21:07.1407273Z   |
2025-06-06T02:21:07.1407359Z 
2025-06-06T02:21:07.1407677Z scripts/fix/fix_security_issues.py:62:9: ARG001 Unused function argument: `patterns`
2025-06-06T02:21:07.1408169Z    |
2025-06-06T02:21:07.1408362Z 60 |     def scan_directory(
2025-06-06T02:21:07.1408750Z 61 |         directory: str,  # Match the signature of the imported function
2025-06-06T02:21:07.1409221Z 62 |         patterns: dict[str, Any],  # Match the expected signature
2025-06-06T02:21:07.1409530Z    |         ^^^^^^^^ ARG001
2025-06-06T02:21:07.1409791Z 63 |         exclude_dirs: set[str]
2025-06-06T02:21:07.1410176Z 64 |         | None = None,  # Match the signature of the imported function
2025-06-06T02:21:07.1410474Z    |
2025-06-06T02:21:07.1410572Z 
2025-06-06T02:21:07.1410894Z scripts/fix/fix_security_issues.py:63:9: ARG001 Unused function argument: `exclude_dirs`
2025-06-06T02:21:07.1411273Z    |
2025-06-06T02:21:07.1411597Z 61 |         directory: str,  # Match the signature of the imported function
2025-06-06T02:21:07.1412212Z 62 |         patterns: dict[str, Any],  # Match the expected signature
2025-06-06T02:21:07.1412558Z 63 |         exclude_dirs: set[str]
2025-06-06T02:21:07.1412915Z    |         ^^^^^^^^^^^^ ARG001
2025-06-06T02:21:07.1413288Z 64 |         | None = None,  # Match the signature of the imported function
2025-06-06T02:21:07.1413676Z 65 |     ) -> dict[str, list[tuple[str, int, int]]]:
2025-06-06T02:21:07.1413930Z    |
2025-06-06T02:21:07.1414025Z 
2025-06-06T02:21:07.1414389Z scripts/fix/run_pre_commit_on_all_files.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1414797Z   |
2025-06-06T02:21:07.1414979Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1415210Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1415422Z 2 |
2025-06-06T02:21:07.1415867Z 3 | """Script to run pre-commit on all Python files in the repository, excluding the .venv directory."""
2025-06-06T02:21:07.1416275Z   |
2025-06-06T02:21:07.1416369Z 
2025-06-06T02:21:07.1416677Z scripts/manage_quality.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1417037Z   |
2025-06-06T02:21:07.1417225Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1417457Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1417669Z 2 |
2025-06-06T02:21:07.1417917Z 3 | """
2025-06-06T02:21:07.1418079Z   |
2025-06-06T02:21:07.1418169Z 
2025-06-06T02:21:07.1418472Z scripts/run/run_linters.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1418828Z   |
2025-06-06T02:21:07.1419008Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1419233Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1419442Z 2 | """
2025-06-06T02:21:07.1419745Z 3 | Run linters on all Python files except those in node_modules.
2025-06-06T02:21:07.1420040Z   |
2025-06-06T02:21:07.1420132Z 
2025-06-06T02:21:07.1420435Z scripts/run/run_mcp_tests.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1420796Z   |
2025-06-06T02:21:07.1420978Z 1 | #!/usr/bin/env python
2025-06-06T02:21:07.1421211Z   | ^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1421423Z 2 | """
2025-06-06T02:21:07.1421764Z 3 | Script to run MCP adapter tests without loading the main conftest.py.
2025-06-06T02:21:07.1422085Z   |
2025-06-06T02:21:07.1422173Z 
2025-06-06T02:21:07.1422580Z scripts/setup/enhanced_setup_dev_environment.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1423015Z   |
2025-06-06T02:21:07.1423197Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1423418Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1423626Z 2 | """
2025-06-06T02:21:07.1423895Z 3 | Enhanced Setup Development Environment Script.
2025-06-06T02:21:07.1424159Z   |
2025-06-06T02:21:07.1424251Z 
2025-06-06T02:21:07.1424578Z scripts/setup/install_mcp_sdk.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1424956Z   |
2025-06-06T02:21:07.1425140Z 1 | #!/usr/bin/env python
2025-06-06T02:21:07.1425372Z   | ^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1425585Z 2 | """
2025-06-06T02:21:07.1425833Z 3 | Script to install the MCP SDK from GitHub.
2025-06-06T02:21:07.1426078Z   |
2025-06-06T02:21:07.1426169Z 
2025-06-06T02:21:07.1426512Z scripts/setup/install_pre_commit.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1426904Z   |
2025-06-06T02:21:07.1427088Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1427314Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1427521Z 2 |
2025-06-06T02:21:07.1427672Z 3 | """
2025-06-06T02:21:07.1427934Z   |
2025-06-06T02:21:07.1428031Z 
2025-06-06T02:21:07.1428367Z scripts/utils/cleanup_egg_info.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1428746Z   |
2025-06-06T02:21:07.1428929Z 1 | #!/usr/bin/env python
2025-06-06T02:21:07.1429155Z   | ^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1429554Z 2 | """Script to clean up .egg-info directories before building packages."""
2025-06-06T02:21:07.1430020Z   |
2025-06-06T02:21:07.1430104Z 
2025-06-06T02:21:07.1430457Z scripts/utils/create_sarif_files.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1430856Z   |
2025-06-06T02:21:07.1431141Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1431379Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1431719Z 2 | """Create SARIF files for GitHub Advanced Security."""
2025-06-06T02:21:07.1431995Z   |
2025-06-06T02:21:07.1432084Z 
2025-06-06T02:21:07.1432390Z scripts/utils/sarif_utils.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1432754Z   |
2025-06-06T02:21:07.1432936Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1433161Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1433371Z 2 | """
2025-06-06T02:21:07.1433641Z 3 | SARIF utilities for security scanning workflows.
2025-06-06T02:21:07.1433904Z   |
2025-06-06T02:21:07.1433992Z 
2025-06-06T02:21:07.1434344Z scripts/utils/verify_tracked_files.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1434748Z   |
2025-06-06T02:21:07.1434923Z 1 | #!/usr/bin/env python
2025-06-06T02:21:07.1435149Z   | ^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1435359Z 2 | """
2025-06-06T02:21:07.1435556Z 3 | verify_tracked_files.py.
2025-06-06T02:21:07.1435767Z   |
2025-06-06T02:21:07.1435851Z 
2025-06-06T02:21:07.1436133Z simple_bandit_scan.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1436474Z   |
2025-06-06T02:21:07.1436651Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1436871Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1437076Z 2 | """
2025-06-06T02:21:07.1437299Z 3 | Simple Bandit security scan script.
2025-06-06T02:21:07.1437541Z   |
2025-06-06T02:21:07.1437634Z 
2025-06-06T02:21:07.1437915Z simple_test.py:9:5: S101 Use of `assert` detected
2025-06-06T02:21:07.1438184Z   |
2025-06-06T02:21:07.1438447Z 7 |     """A simple test to verify that pytest works."""
2025-06-06T02:21:07.1438843Z 8 |     # nosec B101 - This is a test file, assert is expected
2025-06-06T02:21:07.1439203Z 9 |     assert EXPECTED_SUM == 1 + 1  # nosec
2025-06-06T02:21:07.1439451Z   |     ^^^^^^ S101
2025-06-06T02:21:07.1439628Z   |
2025-06-06T02:21:07.1439715Z 
2025-06-06T02:21:07.1440010Z test_bandit_config.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1440353Z   |
2025-06-06T02:21:07.1440540Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1440770Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1441092Z 2 | """Test script to verify Bandit configuration."""
2025-06-06T02:21:07.1441357Z   |
2025-06-06T02:21:07.1441442Z 
2025-06-06T02:21:07.1441772Z test_bandit_config.py:77:21: S603 `subprocess` call: check for execution of untrusted input
2025-06-06T02:21:07.1442147Z    |
2025-06-06T02:21:07.1442452Z 75 |                     # Use full path to cmd.exe to avoid security warning
2025-06-06T02:21:07.1442869Z 76 |                     cmd_path = shutil.which("cmd.exe") or "cmd"
2025-06-06T02:21:07.1443232Z 77 |                     subprocess.run(  # nosec B603
2025-06-06T02:21:07.1443536Z    |                     ^^^^^^^^^^^^^^ S603
2025-06-06T02:21:07.1443804Z 78 |                         [
2025-06-06T02:21:07.1444076Z 79 |                             cmd_path,
2025-06-06T02:21:07.1444305Z    |
2025-06-06T02:21:07.1444402Z 
2025-06-06T02:21:07.1444646Z test_bandit_config.py:100:5: PLR0915 Too many statements (51 > 50)
2025-06-06T02:21:07.1444956Z     |
2025-06-06T02:21:07.1445200Z 100 | def create_empty_json_files() -> bool:
2025-06-06T02:21:07.1445493Z     |     ^^^^^^^^^^^^^^^^^^^^^^^ PLR0915
2025-06-06T02:21:07.1445729Z 101 |     """
2025-06-06T02:21:07.1445987Z 102 |     Create empty JSON files as a fallback.
2025-06-06T02:21:07.1446244Z     |
2025-06-06T02:21:07.1446333Z 
2025-06-06T02:21:07.1446639Z test_bandit_config.py:165:9: TRY300 Consider moving this statement to an `else` block
2025-06-06T02:21:07.1446996Z     |
2025-06-06T02:21:07.1447243Z 163 |                 json.dump(simple_json, f)
2025-06-06T02:21:07.1447611Z 164 |
2025-06-06T02:21:07.1447790Z 165 |         return True
2025-06-06T02:21:07.1448118Z     |         ^^^^^^^^^^^ TRY300
2025-06-06T02:21:07.1448418Z 166 |     except (PermissionError, OSError):
2025-06-06T02:21:07.1448934Z 167 |         logger.exception("Failed to create empty JSON files")
2025-06-06T02:21:07.1449236Z     |
2025-06-06T02:21:07.1449326Z 
2025-06-06T02:21:07.1449632Z test_bandit_config.py:202:17: TRY300 Consider moving this statement to an `else` block
2025-06-06T02:21:07.1449986Z     |
2025-06-06T02:21:07.1450160Z 200 |                 )
2025-06-06T02:21:07.1450550Z 201 |                 logger.info("Successfully copied JSON files from temp directory")
2025-06-06T02:21:07.1450936Z 202 |                 return True
2025-06-06T02:21:07.1451185Z     |                 ^^^^^^^^^^^ TRY300
2025-06-06T02:21:07.1451564Z 203 |             except (PermissionError, OSError, FileExistsError):
2025-06-06T02:21:07.1451913Z 204 |                 logger.warning(
2025-06-06T02:21:07.1452134Z     |
2025-06-06T02:21:07.1452228Z 
2025-06-06T02:21:07.1452559Z test_bandit_config.py:237:16: PTH112 `os.path.isdir()` should be replaced by `Path.is_dir()`
2025-06-06T02:21:07.1452935Z     |
2025-06-06T02:21:07.1453261Z 235 |         # Method 4: Check for common virtual environment directories
2025-06-06T02:21:07.1453690Z 236 |         for venv_dir in [".venv", "venv", "env", ".env"]:
2025-06-06T02:21:07.1454094Z 237 |             if os.path.isdir(venv_dir) and os.path.isfile(
2025-06-06T02:21:07.1454411Z     |                ^^^^^^^^^^^^^ PTH112
2025-06-06T02:21:07.1454747Z 238 |                 os.path.join(venv_dir, "pyvenv.cfg")
2025-06-06T02:21:07.1455027Z 239 |             ):
2025-06-06T02:21:07.1455215Z     |
2025-06-06T02:21:07.1455310Z 
2025-06-06T02:21:07.1455643Z test_bandit_config.py:237:44: PTH113 `os.path.isfile()` should be replaced by `Path.is_file()`
2025-06-06T02:21:07.1456024Z     |
2025-06-06T02:21:07.1456347Z 235 |         # Method 4: Check for common virtual environment directories
2025-06-06T02:21:07.1456776Z 236 |         for venv_dir in [".venv", "venv", "env", ".env"]:
2025-06-06T02:21:07.1457181Z 237 |             if os.path.isdir(venv_dir) and os.path.isfile(
2025-06-06T02:21:07.1457534Z     |                                            ^^^^^^^^^^^^^^ PTH113
2025-06-06T02:21:07.1458023Z 238 |                 os.path.join(venv_dir, "pyvenv.cfg")
2025-06-06T02:21:07.1458302Z 239 |             ):
2025-06-06T02:21:07.1458513Z     |
2025-06-06T02:21:07.1458603Z 
2025-06-06T02:21:07.1458966Z test_bandit_config.py:238:17: PTH118 `os.path.join()` should be replaced by `Path` with `/` operator
2025-06-06T02:21:07.1459356Z     |
2025-06-06T02:21:07.1459632Z 236 |         for venv_dir in [".venv", "venv", "env", ".env"]:
2025-06-06T02:21:07.1460023Z 237 |             if os.path.isdir(venv_dir) and os.path.isfile(
2025-06-06T02:21:07.1460399Z 238 |                 os.path.join(venv_dir, "pyvenv.cfg")
2025-06-06T02:21:07.1460696Z     |                 ^^^^^^^^^^^^ PTH118
2025-06-06T02:21:07.1460943Z 239 |             ):
2025-06-06T02:21:07.1461175Z 240 |                 return True
2025-06-06T02:21:07.1461385Z     |
2025-06-06T02:21:07.1461472Z 
2025-06-06T02:21:07.1461781Z test_bandit_config.py:243:9: TRY300 Consider moving this statement to an `else` block
2025-06-06T02:21:07.1462153Z     |
2025-06-06T02:21:07.1462391Z 242 |         # Not in a virtual environment
2025-06-06T02:21:07.1462657Z 243 |         return False
2025-06-06T02:21:07.1462885Z     |         ^^^^^^^^^^^^ TRY300
2025-06-06T02:21:07.1463148Z 244 |     except Exception as e:
2025-06-06T02:21:07.1463573Z 245 |         # If any error occurs, log it but assume we're not in a virtual environment
2025-06-06T02:21:07.1463911Z     |
2025-06-06T02:21:07.1464003Z 
2025-06-06T02:21:07.1464283Z test_bandit_config.py:244:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.1464616Z     |
2025-06-06T02:21:07.1464846Z 242 |         # Not in a virtual environment
2025-06-06T02:21:07.1465112Z 243 |         return False
2025-06-06T02:21:07.1465491Z 244 |     except Exception as e:
2025-06-06T02:21:07.1465730Z     |            ^^^^^^^^^ BLE001
2025-06-06T02:21:07.1466137Z 245 |         # If any error occurs, log it but assume we're not in a virtual environment
2025-06-06T02:21:07.1466768Z 246 |         logger.warning("Error checking for virtual environment: %s", e)
2025-06-06T02:21:07.1467095Z     |
2025-06-06T02:21:07.1467187Z 
2025-06-06T02:21:07.1467449Z test_mem0.py:45:9: TRY300 Consider moving this statement to an `else` block
2025-06-06T02:21:07.1467774Z    |
2025-06-06T02:21:07.1468073Z 43 |             return True
2025-06-06T02:21:07.1468414Z 44 |         logger.warning("Memory search returned no results.")
2025-06-06T02:21:07.1468724Z 45 |         return False
2025-06-06T02:21:07.1468947Z    |         ^^^^^^^^^^^^ TRY300
2025-06-06T02:21:07.1469148Z 46 |
2025-06-06T02:21:07.1469435Z 47 |     except (ImportError, ConnectionError, ValueError):
2025-06-06T02:21:07.1469713Z    |
2025-06-06T02:21:07.1469804Z 
2025-06-06T02:21:07.1470204Z test_mem0_integration.py:14:5: ANN201 Missing return type annotation for public function `test_mem0_import`
2025-06-06T02:21:07.1470643Z    |
2025-06-06T02:21:07.1470832Z 14 | def test_mem0_import():
2025-06-06T02:21:07.1471074Z    |     ^^^^^^^^^^^^^^^^ ANN201
2025-06-06T02:21:07.1471364Z 15 |     """Test that mem0 can be imported."""
2025-06-06T02:21:07.1471614Z 16 |     try:
2025-06-06T02:21:07.1471781Z    |
2025-06-06T02:21:07.1472027Z    = help: Add return type annotation: `Optional[bool]`
2025-06-06T02:21:07.1472231Z 
2025-06-06T02:21:07.1472490Z test_mem0_integration.py:19:21: G004 Logging statement uses f-string
2025-06-06T02:21:07.1472808Z    |
2025-06-06T02:21:07.1473022Z 17 |         import mem0  # nosec B404
2025-06-06T02:21:07.1473245Z 18 |
2025-06-06T02:21:07.1473595Z 19 |         logger.info(f"Successfully imported mem0 version {mem0.__version__}")
2025-06-06T02:21:07.1474009Z    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T02:21:07.1474285Z 20 |         return True
2025-06-06T02:21:07.1474541Z 21 |     except ImportError as e:
2025-06-06T02:21:07.1474756Z    |
2025-06-06T02:21:07.1474839Z 
2025-06-06T02:21:07.1475154Z test_mem0_integration.py:20:9: TRY300 Consider moving this statement to an `else` block
2025-06-06T02:21:07.1475517Z    |
2025-06-06T02:21:07.1475860Z 19 |         logger.info(f"Successfully imported mem0 version {mem0.__version__}")
2025-06-06T02:21:07.1476210Z 20 |         return True
2025-06-06T02:21:07.1476427Z    |         ^^^^^^^^^^^ TRY300
2025-06-06T02:21:07.1476686Z 21 |     except ImportError as e:
2025-06-06T02:21:07.1477003Z 22 |         logger.error(f"Failed to import mem0: {e}")
2025-06-06T02:21:07.1477262Z    |
2025-06-06T02:21:07.1477348Z 
2025-06-06T02:21:07.1477661Z test_mem0_integration.py:22:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T02:21:07.1478288Z    |
2025-06-06T02:21:07.1478465Z 20 |         return True
2025-06-06T02:21:07.1478710Z 21 |     except ImportError as e:
2025-06-06T02:21:07.1479034Z 22 |         logger.error(f"Failed to import mem0: {e}")
2025-06-06T02:21:07.1479348Z    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T02:21:07.1479614Z 23 |         return False
2025-06-06T02:21:07.1479809Z    |
2025-06-06T02:21:07.1480011Z    = help: Replace with `exception`
2025-06-06T02:21:07.1480176Z 
2025-06-06T02:21:07.1480424Z test_mem0_integration.py:22:22: G004 Logging statement uses f-string
2025-06-06T02:21:07.1480741Z    |
2025-06-06T02:21:07.1480915Z 20 |         return True
2025-06-06T02:21:07.1481154Z 21 |     except ImportError as e:
2025-06-06T02:21:07.1481470Z 22 |         logger.error(f"Failed to import mem0: {e}")
2025-06-06T02:21:07.1481781Z    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T02:21:07.1482044Z 23 |         return False
2025-06-06T02:21:07.1482232Z    |
2025-06-06T02:21:07.1482316Z 
2025-06-06T02:21:07.1482744Z test_mem0_integration.py:26:5: ANN201 Missing return type annotation for public function `test_mem0_dependencies`
2025-06-06T02:21:07.1483335Z    |
2025-06-06T02:21:07.1483553Z 26 | def test_mem0_dependencies():
2025-06-06T02:21:07.1483811Z    |     ^^^^^^^^^^^^^^^^^^^^^^ ANN201
2025-06-06T02:21:07.1484249Z 27 |     """Test that mem0 dependencies are installed."""
2025-06-06T02:21:07.1484650Z 28 |     dependencies = ["qdrant_client", "openai", "pytz"]
2025-06-06T02:21:07.1484928Z    |
2025-06-06T02:21:07.1485128Z    = help: Add return type annotation
2025-06-06T02:21:07.1485299Z 
2025-06-06T02:21:07.1485544Z test_mem0_integration.py:37:25: G004 Logging statement uses f-string
2025-06-06T02:21:07.1485861Z    |
2025-06-06T02:21:07.1486124Z 36 |             importlib.import_module(dep)  # nosec B403
2025-06-06T02:21:07.1486501Z 37 |             logger.info(f"Successfully imported {dep}")
2025-06-06T02:21:07.1486828Z    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T02:21:07.1487133Z 38 |         except ImportError as e:
2025-06-06T02:21:07.1487482Z 39 |             logger.error(f"Failed to import {dep}: {e}")
2025-06-06T02:21:07.1487745Z    |
2025-06-06T02:21:07.1487947Z 
2025-06-06T02:21:07.1488290Z test_mem0_integration.py:38:9: PERF203 `try`-`except` within a loop incurs performance overhead
2025-06-06T02:21:07.1488685Z    |
2025-06-06T02:21:07.1488954Z 36 |               importlib.import_module(dep)  # nosec B403
2025-06-06T02:21:07.1489330Z 37 |               logger.info(f"Successfully imported {dep}")
2025-06-06T02:21:07.1489661Z 38 | /         except ImportError as e:
2025-06-06T02:21:07.1490011Z 39 | |             logger.error(f"Failed to import {dep}: {e}")
2025-06-06T02:21:07.1490342Z 40 | |             all_installed = False
2025-06-06T02:21:07.1490631Z    | |_________________________________^ PERF203
2025-06-06T02:21:07.1490868Z 41 |
2025-06-06T02:21:07.1491075Z 42 |       if not all_installed:
2025-06-06T02:21:07.1491286Z    |
2025-06-06T02:21:07.1491371Z 
2025-06-06T02:21:07.1491692Z test_mem0_integration.py:39:13: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T02:21:07.1492070Z    |
2025-06-06T02:21:07.1492338Z 37 |             logger.info(f"Successfully imported {dep}")
2025-06-06T02:21:07.1492663Z 38 |         except ImportError as e:
2025-06-06T02:21:07.1493006Z 39 |             logger.error(f"Failed to import {dep}: {e}")
2025-06-06T02:21:07.1493333Z    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T02:21:07.1493638Z 40 |             all_installed = False
2025-06-06T02:21:07.1493866Z    |
2025-06-06T02:21:07.1494062Z    = help: Replace with `exception`
2025-06-06T02:21:07.1494222Z 
2025-06-06T02:21:07.1494468Z test_mem0_integration.py:39:26: G004 Logging statement uses f-string
2025-06-06T02:21:07.1494780Z    |
2025-06-06T02:21:07.1495043Z 37 |             logger.info(f"Successfully imported {dep}")
2025-06-06T02:21:07.1495365Z 38 |         except ImportError as e:
2025-06-06T02:21:07.1495702Z 39 |             logger.error(f"Failed to import {dep}: {e}")
2025-06-06T02:21:07.1496025Z    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T02:21:07.1496330Z 40 |             all_installed = False
2025-06-06T02:21:07.1496553Z    |
2025-06-06T02:21:07.1496642Z 
2025-06-06T02:21:07.1497088Z test_mem0_integration.py:47:5: ANN201 Missing return type annotation for public function `test_mem0_basic_functionality`
2025-06-06T02:21:07.1497563Z    |
2025-06-06T02:21:07.1497791Z 47 | def test_mem0_basic_functionality():
2025-06-06T02:21:07.1498179Z    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ANN201
2025-06-06T02:21:07.1498491Z 48 |     """Test basic mem0 functionality."""
2025-06-06T02:21:07.1498735Z 49 |     try:
2025-06-06T02:21:07.1498892Z    |
2025-06-06T02:21:07.1499132Z    = help: Add return type annotation: `Optional[bool]`
2025-06-06T02:21:07.1499345Z 
2025-06-06T02:21:07.1499653Z test_mem0_integration.py:56:9: TRY300 Consider moving this statement to an `else` block
2025-06-06T02:21:07.1500017Z    |
2025-06-06T02:21:07.1500303Z 55 |         logger.info("Successfully created Memory instance")
2025-06-06T02:21:07.1500611Z 56 |         return True
2025-06-06T02:21:07.1500961Z    |         ^^^^^^^^^^^ TRY300
2025-06-06T02:21:07.1501215Z 57 |     except Exception as e:
2025-06-06T02:21:07.1501710Z 58 |         logger.error(f"Failed to test basic mem0 functionality: {e}")
2025-06-06T02:21:07.1502025Z    |
2025-06-06T02:21:07.1502112Z 
2025-06-06T02:21:07.1502403Z test_mem0_integration.py:57:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.1502750Z    |
2025-06-06T02:21:07.1503026Z 55 |         logger.info("Successfully created Memory instance")
2025-06-06T02:21:07.1503328Z 56 |         return True
2025-06-06T02:21:07.1503569Z 57 |     except Exception as e:
2025-06-06T02:21:07.1503806Z    |            ^^^^^^^^^ BLE001
2025-06-06T02:21:07.1504182Z 58 |         logger.error(f"Failed to test basic mem0 functionality: {e}")
2025-06-06T02:21:07.1504514Z 59 |         return False
2025-06-06T02:21:07.1504714Z    |
2025-06-06T02:21:07.1504799Z 
2025-06-06T02:21:07.1505121Z test_mem0_integration.py:58:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T02:21:07.1505495Z    |
2025-06-06T02:21:07.1505665Z 56 |         return True
2025-06-06T02:21:07.1505903Z 57 |     except Exception as e:
2025-06-06T02:21:07.1506282Z 58 |         logger.error(f"Failed to test basic mem0 functionality: {e}")
2025-06-06T02:21:07.1506672Z    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T02:21:07.1506947Z 59 |         return False
2025-06-06T02:21:07.1507137Z    |
2025-06-06T02:21:07.1507341Z    = help: Replace with `exception`
2025-06-06T02:21:07.1507507Z 
2025-06-06T02:21:07.1507753Z test_mem0_integration.py:58:22: G004 Logging statement uses f-string
2025-06-06T02:21:07.1508171Z    |
2025-06-06T02:21:07.1508344Z 56 |         return True
2025-06-06T02:21:07.1508585Z 57 |     except Exception as e:
2025-06-06T02:21:07.1508957Z 58 |         logger.error(f"Failed to test basic mem0 functionality: {e}")
2025-06-06T02:21:07.1509332Z    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G004
2025-06-06T02:21:07.1509610Z 59 |         return False
2025-06-06T02:21:07.1509796Z    |
2025-06-06T02:21:07.1509885Z 
2025-06-06T02:21:07.1510143Z test_python.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1510465Z   |
2025-06-06T02:21:07.1510651Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1510887Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1511192Z 2 | """Test if Python is working correctly."""
2025-06-06T02:21:07.1511439Z   |
2025-06-06T02:21:07.1511524Z 
2025-06-06T02:21:07.1511831Z test_python.py:8:5: ANN201 Missing return type annotation for public function `main`
2025-06-06T02:21:07.1512185Z    |
2025-06-06T02:21:07.1512345Z  8 | def main():
2025-06-06T02:21:07.1512527Z    |     ^^^^ ANN201
2025-06-06T02:21:07.1512776Z  9 |     """Print Python environment information."""
2025-06-06T02:21:07.1513151Z 10 |     print(f"Python executable: {sys.executable}")
2025-06-06T02:21:07.1513415Z    |
2025-06-06T02:21:07.1513639Z    = help: Add return type annotation: `None`
2025-06-06T02:21:07.1513829Z 
2025-06-06T02:21:07.1513971Z test_python.py:10:5: T201 `print` found
2025-06-06T02:21:07.1514206Z    |
2025-06-06T02:21:07.1514363Z  8 | def main():
2025-06-06T02:21:07.1514611Z  9 |     """Print Python environment information."""
2025-06-06T02:21:07.1514975Z 10 |     print(f"Python executable: {sys.executable}")
2025-06-06T02:21:07.1515241Z    |     ^^^^^ T201
2025-06-06T02:21:07.1515507Z 11 |     print(f"Python version: {sys.version}")
2025-06-06T02:21:07.1515877Z 12 |     print(f"Current working directory: {os.getcwd()}")
2025-06-06T02:21:07.1516149Z    |
2025-06-06T02:21:07.1516318Z    = help: Remove `print`
2025-06-06T02:21:07.1516458Z 
2025-06-06T02:21:07.1516600Z test_python.py:11:5: T201 `print` found
2025-06-06T02:21:07.1516834Z    |
2025-06-06T02:21:07.1517054Z  9 |     """Print Python environment information."""
2025-06-06T02:21:07.1517412Z 10 |     print(f"Python executable: {sys.executable}")
2025-06-06T02:21:07.1517756Z 11 |     print(f"Python version: {sys.version}")
2025-06-06T02:21:07.1518265Z    |     ^^^^^ T201
2025-06-06T02:21:07.1518559Z 12 |     print(f"Current working directory: {os.getcwd()}")
2025-06-06T02:21:07.1518831Z 13 |     print(
2025-06-06T02:21:07.1519142Z    |
2025-06-06T02:21:07.1519317Z    = help: Remove `print`
2025-06-06T02:21:07.1519452Z 
2025-06-06T02:21:07.1519591Z test_python.py:12:5: T201 `print` found
2025-06-06T02:21:07.1519822Z    |
2025-06-06T02:21:07.1520086Z 10 |     print(f"Python executable: {sys.executable}")
2025-06-06T02:21:07.1520431Z 11 |     print(f"Python version: {sys.version}")
2025-06-06T02:21:07.1520796Z 12 |     print(f"Current working directory: {os.getcwd()}")
2025-06-06T02:21:07.1521071Z    |     ^^^^^ T201
2025-06-06T02:21:07.1521247Z 13 |     print(
2025-06-06T02:21:07.1521815Z 14 |         f"Is virtual environment: {hasattr(sys, 'real_prefix') or (hasattr(sys, 'base_prefix') and sys.base_prefix != sys.prefix)}"
2025-06-06T02:21:07.1522277Z    |
2025-06-06T02:21:07.1522438Z    = help: Remove `print`
2025-06-06T02:21:07.1522576Z 
2025-06-06T02:21:07.1522846Z test_python.py:12:41: PTH109 `os.getcwd()` should be replaced by `Path.cwd()`
2025-06-06T02:21:07.1523179Z    |
2025-06-06T02:21:07.1523444Z 10 |     print(f"Python executable: {sys.executable}")
2025-06-06T02:21:07.1523790Z 11 |     print(f"Python version: {sys.version}")
2025-06-06T02:21:07.1524153Z 12 |     print(f"Current working directory: {os.getcwd()}")
2025-06-06T02:21:07.1524486Z    |                                         ^^^^^^^^^ PTH109
2025-06-06T02:21:07.1524737Z 13 |     print(
2025-06-06T02:21:07.1525292Z 14 |         f"Is virtual environment: {hasattr(sys, 'real_prefix') or (hasattr(sys, 'base_prefix') and sys.base_prefix != sys.prefix)}"
2025-06-06T02:21:07.1525747Z    |
2025-06-06T02:21:07.1525833Z 
2025-06-06T02:21:07.1525978Z test_python.py:13:5: T201 `print` found
2025-06-06T02:21:07.1526208Z    |
2025-06-06T02:21:07.1526445Z 11 |     print(f"Python version: {sys.version}")
2025-06-06T02:21:07.1526802Z 12 |     print(f"Current working directory: {os.getcwd()}")
2025-06-06T02:21:07.1527078Z 13 |     print(
2025-06-06T02:21:07.1527252Z    |     ^^^^^ T201
2025-06-06T02:21:07.1527805Z 14 |         f"Is virtual environment: {hasattr(sys, 'real_prefix') or (hasattr(sys, 'base_prefix') and sys.base_prefix != sys.prefix)}"
2025-06-06T02:21:07.1528367Z 15 |     )
2025-06-06T02:21:07.1528527Z    |
2025-06-06T02:21:07.1528695Z    = help: Remove `print`
2025-06-06T02:21:07.1528827Z 
2025-06-06T02:21:07.1528971Z test_python.py:16:5: T201 `print` found
2025-06-06T02:21:07.1529200Z    |
2025-06-06T02:21:07.1529745Z 14 |         f"Is virtual environment: {hasattr(sys, 'real_prefix') or (hasattr(sys, 'base_prefix') and sys.base_prefix != sys.prefix)}"
2025-06-06T02:21:07.1530206Z 15 |     )
2025-06-06T02:21:07.1530443Z 16 |     print(f"sys.prefix: {sys.prefix}")
2025-06-06T02:21:07.1530698Z    |     ^^^^^ T201
2025-06-06T02:21:07.1530948Z 17 |     if hasattr(sys, "base_prefix"):
2025-06-06T02:21:07.1531304Z 18 |         print(f"sys.base_prefix: {sys.base_prefix}")
2025-06-06T02:21:07.1531579Z    |
2025-06-06T02:21:07.1531751Z    = help: Remove `print`
2025-06-06T02:21:07.1531884Z 
2025-06-06T02:21:07.1532029Z test_python.py:18:9: T201 `print` found
2025-06-06T02:21:07.1532269Z    |
2025-06-06T02:21:07.1532503Z 16 |     print(f"sys.prefix: {sys.prefix}")
2025-06-06T02:21:07.1532814Z 17 |     if hasattr(sys, "base_prefix"):
2025-06-06T02:21:07.1533159Z 18 |         print(f"sys.base_prefix: {sys.base_prefix}")
2025-06-06T02:21:07.1533426Z    |         ^^^^^ T201
2025-06-06T02:21:07.1533504Z    |
2025-06-06T02:21:07.1533590Z    = help: Remove `print`
2025-06-06T02:21:07.1533602Z 
2025-06-06T02:21:07.1533900Z test_security_reports.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1533974Z   |
2025-06-06T02:21:07.1534075Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1534180Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1534252Z 2 | """
2025-06-06T02:21:07.1534493Z 3 | Test script to verify that security reports are properly created.
2025-06-06T02:21:07.1534688Z   |
2025-06-06T02:21:07.1534696Z 
2025-06-06T02:21:07.1534993Z test_security_reports.py:78:14: PTH123 `open()` should be replaced by `Path.open()`
2025-06-06T02:21:07.1535158Z    |
2025-06-06T02:21:07.1535242Z 77 |     try:
2025-06-06T02:21:07.1535394Z 78 |         with open(bandit_results) as f:
2025-06-06T02:21:07.1535481Z    |              ^^^^ PTH123
2025-06-06T02:21:07.1535577Z 79 |             json.load(f)
2025-06-06T02:21:07.1535782Z 80 |         logger.info("bandit-results.json is valid JSON")
2025-06-06T02:21:07.1535851Z    |
2025-06-06T02:21:07.1535858Z 
2025-06-06T02:21:07.1536182Z test_security_reports.py:82:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T02:21:07.1536250Z    |
2025-06-06T02:21:07.1536451Z 80 |         logger.info("bandit-results.json is valid JSON")
2025-06-06T02:21:07.1536645Z 81 |     except (json.JSONDecodeError, Exception) as e:
2025-06-06T02:21:07.1536895Z 82 |         logger.error("bandit-results.json is not valid JSON: %s", e)
2025-06-06T02:21:07.1537047Z    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T02:21:07.1537148Z 83 |         return False
2025-06-06T02:21:07.1537220Z    |
2025-06-06T02:21:07.1537342Z    = help: Replace with `exception`
2025-06-06T02:21:07.1537349Z 
2025-06-06T02:21:07.1537640Z test_security_reports.py:86:14: PTH123 `open()` should be replaced by `Path.open()`
2025-06-06T02:21:07.1537717Z    |
2025-06-06T02:21:07.1537790Z 85 |     try:
2025-06-06T02:21:07.1538054Z 86 |         with open(bandit_results_ini) as f:
2025-06-06T02:21:07.1538135Z    |              ^^^^ PTH123
2025-06-06T02:21:07.1538236Z 87 |             json.load(f)
2025-06-06T02:21:07.1538446Z 88 |         logger.info("bandit-results-ini.json is valid JSON")
2025-06-06T02:21:07.1538520Z    |
2025-06-06T02:21:07.1538527Z 
2025-06-06T02:21:07.1538843Z test_security_reports.py:90:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T02:21:07.1538921Z    |
2025-06-06T02:21:07.1539127Z 88 |         logger.info("bandit-results-ini.json is valid JSON")
2025-06-06T02:21:07.1539316Z 89 |     except (json.JSONDecodeError, Exception) as e:
2025-06-06T02:21:07.1539576Z 90 |         logger.error("bandit-results-ini.json is not valid JSON: %s", e)
2025-06-06T02:21:07.1539730Z    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T02:21:07.1539824Z 91 |         return False
2025-06-06T02:21:07.1539897Z    |
2025-06-06T02:21:07.1540012Z    = help: Replace with `exception`
2025-06-06T02:21:07.1540024Z 
2025-06-06T02:21:07.1540475Z test_security_reports.py:97:5: D401 First line of docstring should be in imperative mood: "Main entry point for the script."
2025-06-06T02:21:07.1540549Z     |
2025-06-06T02:21:07.1540638Z  96 |   def main() -> int:
2025-06-06T02:21:07.1540717Z  97 | /     """
2025-06-06T02:21:07.1540845Z  98 | |     Main entry point for the script.
2025-06-06T02:21:07.1540919Z  99 | |
2025-06-06T02:21:07.1541011Z 100 | |     Returns:
2025-06-06T02:21:07.1541190Z 101 | |         int: 0 if all checks pass, 1 otherwise
2025-06-06T02:21:07.1541259Z 102 | |
2025-06-06T02:21:07.1541337Z 103 | |     """
2025-06-06T02:21:07.1541418Z     | |_______^ D401
2025-06-06T02:21:07.1541622Z 104 |       # Check if the security-reports directory exists
2025-06-06T02:21:07.1541780Z 105 |       if not check_security_reports_dir():
2025-06-06T02:21:07.1541852Z     |
2025-06-06T02:21:07.1541859Z 
2025-06-06T02:21:07.1542240Z test_security_reports.py:108:13: PTH103 `os.makedirs()` should be replaced by `Path.mkdir(parents=True)`
2025-06-06T02:21:07.1542319Z     |
2025-06-06T02:21:07.1542462Z 106 |         # Try to create the directory
2025-06-06T02:21:07.1542553Z 107 |         try:
2025-06-06T02:21:07.1542751Z 108 |             os.makedirs("security-reports", exist_ok=True)
2025-06-06T02:21:07.1542857Z     |             ^^^^^^^^^^^ PTH103
2025-06-06T02:21:07.1543071Z 109 |             logger.info("Created security-reports directory")
2025-06-06T02:21:07.1543328Z 110 |         except Exception as e:
2025-06-06T02:21:07.1543398Z     |
2025-06-06T02:21:07.1543405Z 
2025-06-06T02:21:07.1543801Z test_security_reports.py:110:16: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.1543873Z     |
2025-06-06T02:21:07.1544083Z 108 |             os.makedirs("security-reports", exist_ok=True)
2025-06-06T02:21:07.1544286Z 109 |             logger.info("Created security-reports directory")
2025-06-06T02:21:07.1544417Z 110 |         except Exception as e:
2025-06-06T02:21:07.1544522Z     |                ^^^^^^^^^ BLE001
2025-06-06T02:21:07.1544793Z 111 |             logger.error("Failed to create security-reports directory: %s", e)
2025-06-06T02:21:07.1544886Z 112 |             return 1
2025-06-06T02:21:07.1544960Z     |
2025-06-06T02:21:07.1544967Z 
2025-06-06T02:21:07.1545289Z test_security_reports.py:111:13: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T02:21:07.1545362Z     |
2025-06-06T02:21:07.1545565Z 109 |             logger.info("Created security-reports directory")
2025-06-06T02:21:07.1545698Z 110 |         except Exception as e:
2025-06-06T02:21:07.1545964Z 111 |             logger.error("Failed to create security-reports directory: %s", e)
2025-06-06T02:21:07.1546127Z     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T02:21:07.1546218Z 112 |             return 1
2025-06-06T02:21:07.1546292Z     |
2025-06-06T02:21:07.1546403Z     = help: Replace with `exception`
2025-06-06T02:21:07.1546417Z 
2025-06-06T02:21:07.1546759Z test_security_reports.py:120:13: S603 `subprocess` call: check for execution of untrusted input
2025-06-06T02:21:07.1546832Z     |
2025-06-06T02:21:07.1546959Z 118 |             import subprocess
2025-06-06T02:21:07.1547034Z 119 |
2025-06-06T02:21:07.1547156Z 120 |             subprocess.run(
2025-06-06T02:21:07.1547264Z     |             ^^^^^^^^^^^^^^ S603
2025-06-06T02:21:07.1547457Z 121 |                 [sys.executable, "test_bandit_config.py"],
2025-06-06T02:21:07.1547588Z 122 |                 check=False,
2025-06-06T02:21:07.1547655Z     |
2025-06-06T02:21:07.1547663Z 
2025-06-06T02:21:07.1548060Z test_security_reports.py:127:16: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.1548131Z     |
2025-06-06T02:21:07.1548219Z 125 |             )
2025-06-06T02:21:07.1548402Z 126 |             logger.info("Ran test_bandit_config.py")
2025-06-06T02:21:07.1548532Z 127 |         except Exception as e:
2025-06-06T02:21:07.1548633Z     |                ^^^^^^^^^ BLE001
2025-06-06T02:21:07.1548877Z 128 |             logger.error("Failed to run test_bandit_config.py: %s", e)
2025-06-06T02:21:07.1548968Z 129 |             return 1
2025-06-06T02:21:07.1549040Z     |
2025-06-06T02:21:07.1549048Z 
2025-06-06T02:21:07.1549373Z test_security_reports.py:128:13: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T02:21:07.1549446Z     |
2025-06-06T02:21:07.1549626Z 126 |             logger.info("Ran test_bandit_config.py")
2025-06-06T02:21:07.1549759Z 127 |         except Exception as e:
2025-06-06T02:21:07.1549994Z 128 |             logger.error("Failed to run test_bandit_config.py: %s", e)
2025-06-06T02:21:07.1550150Z     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T02:21:07.1550241Z 129 |             return 1
2025-06-06T02:21:07.1550316Z     |
2025-06-06T02:21:07.1550429Z     = help: Replace with `exception`
2025-06-06T02:21:07.1550437Z 
2025-06-06T02:21:07.1551111Z tests/adk_demo/test_mem0_enhanced_adk_agents.py:1:1: INP001 File `tests/adk_demo/test_mem0_enhanced_adk_agents.py` is part of an implicit namespace package. Add an `__init__.py`.
2025-06-06T02:21:07.1551547Z tests/adk_demo/test_mem0_enhanced_adk_agents.py:159:17: SLF001 Private member accessed: `_extract_query_from_message`
2025-06-06T02:21:07.1551621Z     |
2025-06-06T02:21:07.1551803Z 157 |         """Test extracting a query from a message."""
2025-06-06T02:21:07.1551967Z 158 |         # Extract query from gather message
2025-06-06T02:21:07.1552379Z 159 |         query = self.gatherer._extract_query_from_message(self.message_mock)
2025-06-06T02:21:07.1552529Z     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T02:21:07.1552797Z 160 |         assert query == "Test query"
2025-06-06T02:21:07.1552869Z     |
2025-06-06T02:21:07.1552877Z 
2025-06-06T02:21:07.1553309Z tests/adk_demo/test_mem0_enhanced_adk_agents.py:166:17: SLF001 Private member accessed: `_extract_query_from_message`
2025-06-06T02:21:07.1553378Z     |
2025-06-06T02:21:07.1553546Z 164 |         summarize_message.type = "summarize"
2025-06-06T02:21:07.1553751Z 165 |         summarize_message.payload = {"data": "Test data"}
2025-06-06T02:21:07.1554020Z 166 |         query = self.gatherer._extract_query_from_message(summarize_message)
2025-06-06T02:21:07.1554153Z     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T02:21:07.1554293Z 167 |         assert query == "Test data"
2025-06-06T02:21:07.1554361Z     |
2025-06-06T02:21:07.1554373Z 
2025-06-06T02:21:07.1554801Z tests/adk_demo/test_mem0_enhanced_adk_agents.py:173:17: SLF001 Private member accessed: `_extract_query_from_message`
2025-06-06T02:21:07.1554869Z     |
2025-06-06T02:21:07.1555031Z 171 |         unknown_message.type = "unknown"
2025-06-06T02:21:07.1555201Z 172 |         unknown_message.sender = "test-sender"
2025-06-06T02:21:07.1555460Z 173 |         query = self.gatherer._extract_query_from_message(unknown_message)
2025-06-06T02:21:07.1555591Z     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T02:21:07.1555735Z 174 |         assert "unknown" in query
2025-06-06T02:21:07.1555875Z 175 |         assert "test-sender" in query
2025-06-06T02:21:07.1555949Z     |
2025-06-06T02:21:07.1555956Z 
2025-06-06T02:21:07.1556333Z tests/adk_demo/test_mem0_enhanced_adk_agents.py:180:9: SLF001 Private member accessed: `_store_memory`
2025-06-06T02:21:07.1556410Z     |
2025-06-06T02:21:07.1556549Z 178 |         """Test storing a memory."""
2025-06-06T02:21:07.1556674Z 179 |         # Store a memory
2025-06-06T02:21:07.1556814Z 180 |         self.gatherer._store_memory(
2025-06-06T02:21:07.1556934Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T02:21:07.1557070Z 181 |             "Test memory content",
2025-06-06T02:21:07.1557241Z 182 |             metadata={"test_key": "test_value"},
2025-06-06T02:21:07.1557310Z     |
2025-06-06T02:21:07.1557321Z 
2025-06-06T02:21:07.1557743Z tests/adk_demo/test_mem0_enhanced_adk_agents.py:195:20: SLF001 Private member accessed: `_retrieve_relevant_memories`
2025-06-06T02:21:07.1557913Z     |
2025-06-06T02:21:07.1558084Z 193 |         """Test retrieving relevant memories."""
2025-06-06T02:21:07.1558209Z 194 |         # Retrieve memories
2025-06-06T02:21:07.1558421Z 195 |         memories = self.gatherer._retrieve_relevant_memories(
2025-06-06T02:21:07.1558591Z     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T02:21:07.1558718Z 196 |             query="Test query",
2025-06-06T02:21:07.1558819Z 197 |             limit=5,
2025-06-06T02:21:07.1558886Z     |
2025-06-06T02:21:07.1558893Z 
2025-06-06T02:21:07.1559300Z tests/adk_demo/test_mem0_enhanced_adk_agents.py:213:9: SLF001 Private member accessed: `_store_interaction`
2025-06-06T02:21:07.1559368Z     |
2025-06-06T02:21:07.1559527Z 211 |         """Test storing an interaction."""
2025-06-06T02:21:07.1559651Z 212 |         # Store an interaction
2025-06-06T02:21:07.1559944Z 213 |         self.gatherer._store_interaction(self.message_mock, self.response_mock)
2025-06-06T02:21:07.1560068Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T02:21:07.1560141Z 214 |
2025-06-06T02:21:07.1560302Z 215 |         # Check that the interaction was stored
2025-06-06T02:21:07.1560375Z     |
2025-06-06T02:21:07.1560383Z 
2025-06-06T02:21:07.1560782Z tests/agent_team/test_mem0_enhanced_agents.py:158:9: F841 Local variable `task` is assigned to but never used
2025-06-06T02:21:07.1560856Z     |
2025-06-06T02:21:07.1561136Z 156 |             backstory="Expert researcher",
2025-06-06T02:21:07.1561216Z 157 |         )
2025-06-06T02:21:07.1561352Z 158 |         task = self.team.add_task(
2025-06-06T02:21:07.1561435Z     |         ^^^^ F841
2025-06-06T02:21:07.1561720Z 159 |             description="Research AI memory systems",
2025-06-06T02:21:07.1561846Z 160 |             agent=agent,
2025-06-06T02:21:07.1561915Z     |
2025-06-06T02:21:07.1562081Z     = help: Remove assignment to unused variable `task`
2025-06-06T02:21:07.1562089Z 
2025-06-06T02:21:07.1562457Z tests/agent_team/test_mem0_enhanced_agents.py:177:9: SLF001 Private member accessed: `_store_memory`
2025-06-06T02:21:07.1562531Z     |
2025-06-06T02:21:07.1562670Z 175 |         """Test storing a memory."""
2025-06-06T02:21:07.1562787Z 176 |         # Store a memory
2025-06-06T02:21:07.1562916Z 177 |         self.team._store_memory(
2025-06-06T02:21:07.1563032Z     |         ^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T02:21:07.1563165Z 178 |             "Test memory content",
2025-06-06T02:21:07.1563337Z 179 |             metadata={"test_key": "test_value"},
2025-06-06T02:21:07.1563404Z     |
2025-06-06T02:21:07.1563416Z 
2025-06-06T02:21:07.1563843Z tests/agent_team/test_mem0_enhanced_agents.py:192:20: SLF001 Private member accessed: `_retrieve_relevant_memories`
2025-06-06T02:21:07.1563917Z     |
2025-06-06T02:21:07.1564082Z 190 |         """Test retrieving relevant memories."""
2025-06-06T02:21:07.1564207Z 191 |         # Retrieve memories
2025-06-06T02:21:07.1564406Z 192 |         memories = self.team._retrieve_relevant_memories(
2025-06-06T02:21:07.1564547Z     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T02:21:07.1564672Z 193 |             query="Test query",
2025-06-06T02:21:07.1564771Z 194 |             limit=5,
2025-06-06T02:21:07.1564840Z     |
2025-06-06T02:21:07.1564847Z 
2025-06-06T02:21:07.1565275Z tests/agent_team/test_mem0_enhanced_agents.py:216:9: SLF001 Private member accessed: `_retrieve_relevant_memories`
2025-06-06T02:21:07.1565349Z     |
2025-06-06T02:21:07.1565536Z 215 |         # Mock the _retrieve_relevant_memories method
2025-06-06T02:21:07.1565820Z 216 |         self.team._retrieve_relevant_memories = MagicMock(return_value=memories)
2025-06-06T02:21:07.1565959Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T02:21:07.1566028Z 217 |
2025-06-06T02:21:07.1566162Z 218 |         # Test enhancing context
2025-06-06T02:21:07.1566235Z     |
2025-06-06T02:21:07.1566242Z 
2025-06-06T02:21:07.1566680Z tests/agent_team/test_mem0_enhanced_agents.py:220:28: SLF001 Private member accessed: `_enhance_context_with_memories`
2025-06-06T02:21:07.1566749Z     |
2025-06-06T02:21:07.1566884Z 218 |         # Test enhancing context
2025-06-06T02:21:07.1567085Z 219 |         original_context = "What should I eat for dinner?"
2025-06-06T02:21:07.1567399Z 220 |         enhanced_context = self.team._enhance_context_with_memories(original_context)
2025-06-06T02:21:07.1567546Z     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T02:21:07.1567625Z 221 |
2025-06-06T02:21:07.1567927Z 222 |         # Check that the context was enhanced with memories
2025-06-06T02:21:07.1568005Z     |
2025-06-06T02:21:07.1568013Z 
2025-06-06T02:21:07.1568435Z tests/agent_team/test_mem0_enhanced_agents.py:228:9: SLF001 Private member accessed: `_retrieve_relevant_memories`
2025-06-06T02:21:07.1568508Z     |
2025-06-06T02:21:07.1568671Z 227 |         # Check that memories were retrieved
2025-06-06T02:21:07.1568913Z 228 |         self.team._retrieve_relevant_memories.assert_called_once()
2025-06-06T02:21:07.1569045Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T02:21:07.1569118Z 229 |
2025-06-06T02:21:07.1569277Z 230 |     def test_memory_persistence(self):
2025-06-06T02:21:07.1569345Z     |
2025-06-06T02:21:07.1569352Z 
2025-06-06T02:21:07.1569770Z tests/agent_team/test_mem0_enhanced_agents.py:241:9: SLF001 Private member accessed: `_retrieve_relevant_memories`
2025-06-06T02:21:07.1569838Z     |
2025-06-06T02:21:07.1570130Z 239 |         # Retrieve memories with the new team
2025-06-06T02:21:07.1570286Z 240 |         query = "What are my preferences?"
2025-06-06T02:21:07.1570588Z 241 |         new_team._retrieve_relevant_memories(query=query)
2025-06-06T02:21:07.1570717Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T02:21:07.1570790Z 242 |
2025-06-06T02:21:07.1571022Z 243 |         # Check that memories were retrieved using the same user_id
2025-06-06T02:21:07.1571094Z     |
2025-06-06T02:21:07.1571101Z 
2025-06-06T02:21:07.1571574Z tests/api/test_tool_router.py:63:5: PT006 Wrong type passed to first argument of `pytest.mark.parametrize`; expected `tuple`
2025-06-06T02:21:07.1571647Z    |
2025-06-06T02:21:07.1571776Z 62 | @pytest.mark.parametrize(
2025-06-06T02:21:07.1571887Z 63 |     "endpoint,payload",
2025-06-06T02:21:07.1571990Z    |     ^^^^^^^^^^^^^^^^^^ PT006
2025-06-06T02:21:07.1572066Z 64 |     [
2025-06-06T02:21:07.1572222Z 65 |         ("/tools/add", {"a": 2}),  # missing b
2025-06-06T02:21:07.1572301Z    |
2025-06-06T02:21:07.1572437Z    = help: Use a `tuple` for the first argument
2025-06-06T02:21:07.1572445Z 
2025-06-06T02:21:07.1572811Z tests/common_utils/test_sarif_format.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1572882Z   |
2025-06-06T02:21:07.1572988Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1573090Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1573165Z 2 | """
2025-06-06T02:21:07.1573321Z 3 | Test script to validate SARIF file format.
2025-06-06T02:21:07.1573395Z   |
2025-06-06T02:21:07.1573402Z 
2025-06-06T02:21:07.1573752Z tests/common_utils/test_sarif_utils.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1573824Z   |
2025-06-06T02:21:07.1573920Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1574023Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1574093Z 2 | """
2025-06-06T02:21:07.1574230Z 3 | Test script for sarif_utils.py.
2025-06-06T02:21:07.1574299Z   |
2025-06-06T02:21:07.1574310Z 
2025-06-06T02:21:07.1574645Z tests/common_utils/test_tooling.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1574713Z   |
2025-06-06T02:21:07.1574819Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1574916Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1574991Z 2 | """
2025-06-06T02:21:07.1575146Z 3 | Test script for common_utils/tooling.py.
2025-06-06T02:21:07.1575219Z   |
2025-06-06T02:21:07.1575226Z 
2025-06-06T02:21:07.1575587Z tests/performance/test_artist_agent_benchmark.py:1:1: D400 First line should end with a period
2025-06-06T02:21:07.1575655Z    |
2025-06-06T02:21:07.1575732Z  1 | / """
2025-06-06T02:21:07.1575986Z  2 | | Benchmark: ArtistAgent vs DataGathererAgent (ADK) on Reasoning and Tool Use
2025-06-06T02:21:07.1576062Z  3 | |
2025-06-06T02:21:07.1576303Z  4 | | Runs both agents on a suite of prompts, measuring accuracy and response time.
2025-06-06T02:21:07.1576566Z  5 | | Writes a Markdown summary table to tests/performance/artist_agent_benchmark.md.
2025-06-06T02:21:07.1576639Z  6 | |
2025-06-06T02:21:07.1576952Z  7 | | Extend this script by adding new agents/prompts as new tools or reasoning abilities are added.
2025-06-06T02:21:07.1577022Z  8 | | """
2025-06-06T02:21:07.1577103Z    | |___^ D400
2025-06-06T02:21:07.1577175Z  9 |
2025-06-06T02:21:07.1577253Z 10 |   import os
2025-06-06T02:21:07.1577321Z    |
2025-06-06T02:21:07.1577408Z    = help: Add period
2025-06-06T02:21:07.1577416Z 
2025-06-06T02:21:07.1578023Z tests/performance/test_artist_agent_benchmark.py:1:1: D415 First line should end with a period, question mark, or exclamation point
2025-06-06T02:21:07.1578099Z    |
2025-06-06T02:21:07.1578172Z  1 | / """
2025-06-06T02:21:07.1578425Z  2 | | Benchmark: ArtistAgent vs DataGathererAgent (ADK) on Reasoning and Tool Use
2025-06-06T02:21:07.1578496Z  3 | |
2025-06-06T02:21:07.1578734Z  4 | | Runs both agents on a suite of prompts, measuring accuracy and response time.
2025-06-06T02:21:07.1578984Z  5 | | Writes a Markdown summary table to tests/performance/artist_agent_benchmark.md.
2025-06-06T02:21:07.1579183Z  6 | |
2025-06-06T02:21:07.1579483Z  7 | | Extend this script by adding new agents/prompts as new tools or reasoning abilities are added.
2025-06-06T02:21:07.1579682Z  8 | | """
2025-06-06T02:21:07.1579760Z    | |___^ D415
2025-06-06T02:21:07.1579835Z  9 |
2025-06-06T02:21:07.1579908Z 10 |   import os
2025-06-06T02:21:07.1579980Z    |
2025-06-06T02:21:07.1580095Z    = help: Add closing punctuation
2025-06-06T02:21:07.1580103Z 
2025-06-06T02:21:07.1580494Z tests/performance/test_artist_agent_benchmark.py:68:5: D200 One-line docstring should fit on one line
2025-06-06T02:21:07.1580563Z    |
2025-06-06T02:21:07.1580729Z 67 |   def is_correct(output, expected, kind):
2025-06-06T02:21:07.1580799Z 68 | /     """
2025-06-06T02:21:07.1581064Z 69 | |     Returns True if output matches expected answer for the prompt type.
2025-06-06T02:21:07.1581134Z 70 | |     """
2025-06-06T02:21:07.1581214Z    | |_______^ D200
2025-06-06T02:21:07.1581347Z 71 |       if kind == "arithmetic":
2025-06-06T02:21:07.1581621Z 72 |           # Accept if expected number is in output (handles calc output variants)
2025-06-06T02:21:07.1581697Z    |
2025-06-06T02:21:07.1581809Z    = help: Reformat to one line
2025-06-06T02:21:07.1581817Z 
2025-06-06T02:21:07.1582528Z tests/performance/test_artist_agent_benchmark.py:68:5: D401 First line of docstring should be in imperative mood: "Returns True if output matches expected answer for the prompt type."
2025-06-06T02:21:07.1582597Z    |
2025-06-06T02:21:07.1582761Z 67 |   def is_correct(output, expected, kind):
2025-06-06T02:21:07.1582832Z 68 | /     """
2025-06-06T02:21:07.1583097Z 69 | |     Returns True if output matches expected answer for the prompt type.
2025-06-06T02:21:07.1583168Z 70 | |     """
2025-06-06T02:21:07.1583245Z    | |_______^ D401
2025-06-06T02:21:07.1583370Z 71 |       if kind == "arithmetic":
2025-06-06T02:21:07.1583645Z 72 |           # Accept if expected number is in output (handles calc output variants)
2025-06-06T02:21:07.1583720Z    |
2025-06-06T02:21:07.1583728Z 
2025-06-06T02:21:07.1584133Z tests/performance/test_artist_agent_benchmark.py:94:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.1584205Z    |
2025-06-06T02:21:07.1584281Z 92 |     try:
2025-06-06T02:21:07.1584423Z 93 |         output = agent.run(prompt)
2025-06-06T02:21:07.1584551Z 94 |     except Exception as e:
2025-06-06T02:21:07.1584649Z    |            ^^^^^^^^^ BLE001
2025-06-06T02:21:07.1584786Z 95 |         output = f"Exception: {e}"
2025-06-06T02:21:07.1584986Z 96 |     elapsed = (time.perf_counter() - start) * 1000  # ms
2025-06-06T02:21:07.1585059Z    |
2025-06-06T02:21:07.1585066Z 
2025-06-06T02:21:07.1585469Z tests/performance/test_artist_agent_benchmark.py:111:12: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.1585545Z     |
2025-06-06T02:21:07.1585620Z 109 |     try:
2025-06-06T02:21:07.1585810Z 110 |         output = agent.skills["gather"].run(query)
2025-06-06T02:21:07.1585936Z 111 |     except Exception as e:
2025-06-06T02:21:07.1586041Z     |            ^^^^^^^^^ BLE001
2025-06-06T02:21:07.1586180Z 112 |         output = f"Exception: {e}"
2025-06-06T02:21:07.1586391Z 113 |     elapsed = (time.perf_counter() - start) * 1000  # ms
2025-06-06T02:21:07.1586460Z     |
2025-06-06T02:21:07.1586468Z 
2025-06-06T02:21:07.1586872Z tests/performance/test_artist_agent_benchmark.py:126:16: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.1586942Z     |
2025-06-06T02:21:07.1587032Z 124 |         try:
2025-06-06T02:21:07.1587335Z 125 |             artist_out, artist_time = run_artist_agent(p["prompt"], agent=artist_agent)
2025-06-06T02:21:07.1587471Z 126 |         except Exception as e:
2025-06-06T02:21:07.1587576Z     |                ^^^^^^^^^ BLE001
2025-06-06T02:21:07.1587786Z 127 |             artist_out, artist_time = f"Exception: {e}", 0.0
2025-06-06T02:21:07.1588147Z 128 |         artist_correct = is_correct(artist_out, p["expected"], p["type"])
2025-06-06T02:21:07.1588349Z     |
2025-06-06T02:21:07.1588356Z 
2025-06-06T02:21:07.1588756Z tests/performance/test_artist_agent_benchmark.py:132:16: BLE001 Do not catch blind exception: `Exception`
2025-06-06T02:21:07.1588826Z     |
2025-06-06T02:21:07.1589013Z 130 |         try:
2025-06-06T02:21:07.1589309Z 131 |             data_out, data_time = run_data_gatherer_agent(p["prompt"], agent=data_agent)
2025-06-06T02:21:07.1589447Z 132 |         except Exception as e:
2025-06-06T02:21:07.1589550Z     |                ^^^^^^^^^ BLE001
2025-06-06T02:21:07.1589742Z 133 |             data_out, data_time = f"Exception: {e}", 0.0
2025-06-06T02:21:07.1589981Z 134 |         data_correct = is_correct(data_out, p["expected"], p["type"])
2025-06-06T02:21:07.1590054Z     |
2025-06-06T02:21:07.1590062Z 
2025-06-06T02:21:07.1590342Z tests/performance/test_artist_agent_benchmark.py:174:5: T201 `print` found
2025-06-06T02:21:07.1590417Z     |
2025-06-06T02:21:07.1590489Z 172 |         )
2025-06-06T02:21:07.1590561Z 173 |
2025-06-06T02:21:07.1590794Z 174 |     print(f"Benchmark complete. Results written to {md_path}")
2025-06-06T02:21:07.1590875Z     |     ^^^^^ T201
2025-06-06T02:21:07.1590945Z     |
2025-06-06T02:21:07.1591040Z     = help: Remove `print`
2025-06-06T02:21:07.1591051Z 
2025-06-06T02:21:07.1591399Z tests/security/test_security_scan.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1591474Z   |
2025-06-06T02:21:07.1591575Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1591681Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1591753Z 2 | """
2025-06-06T02:21:07.1591920Z 3 | Test script for security scanning workflow.
2025-06-06T02:21:07.1591999Z   |
2025-06-06T02:21:07.1592006Z 
2025-06-06T02:21:07.1592268Z tests/test_mem0_integration.py:40:5: ERA001 Found commented-out code
2025-06-06T02:21:07.1592339Z    |
2025-06-06T02:21:07.1592473Z 38 |     from adk.agent import Agent
2025-06-06T02:21:07.1592662Z 39 |     # SimpleMemory is not used, so we don't import it
2025-06-06T02:21:07.1592828Z 40 |     # from adk.memory import SimpleMemory
2025-06-06T02:21:07.1592963Z    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ERA001
2025-06-06T02:21:07.1593080Z 41 | except ImportError as e:
2025-06-06T02:21:07.1593208Z 42 |     # Mock ADK if not available
2025-06-06T02:21:07.1593283Z    |
2025-06-06T02:21:07.1593400Z    = help: Remove commented-out code
2025-06-06T02:21:07.1593408Z 
2025-06-06T02:21:07.1593768Z tests/test_mem0_integration.py:110:9: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T02:21:07.1593837Z     |
2025-06-06T02:21:07.1593941Z 108 |         assert True
2025-06-06T02:21:07.1594068Z 109 |     except ImportError as e:
2025-06-06T02:21:07.1594268Z 110 |         logger.error(f"Failed to import mem0ai: {e}")
2025-06-06T02:21:07.1594408Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T02:21:07.1594510Z 111 |         assert False
2025-06-06T02:21:07.1594578Z     |
2025-06-06T02:21:07.1594696Z     = help: Replace with `exception`
2025-06-06T02:21:07.1594707Z 
2025-06-06T02:21:07.1595065Z tests/test_mem0_integration.py:111:9: PT015 Assertion always fails, replace with `pytest.fail()`
2025-06-06T02:21:07.1595134Z     |
2025-06-06T02:21:07.1595267Z 109 |     except ImportError as e:
2025-06-06T02:21:07.1595458Z 110 |         logger.error(f"Failed to import mem0ai: {e}")
2025-06-06T02:21:07.1595556Z 111 |         assert False
2025-06-06T02:21:07.1595658Z     |         ^^^^^^^^^^^^ PT015
2025-06-06T02:21:07.1595733Z     |
2025-06-06T02:21:07.1595740Z 
2025-06-06T02:21:07.1596202Z tests/test_mem0_integration.py:111:16: B011 Do not `assert False` (`python -O` removes these calls), raise `AssertionError()`
2025-06-06T02:21:07.1596277Z     |
2025-06-06T02:21:07.1596402Z 109 |     except ImportError as e:
2025-06-06T02:21:07.1596597Z 110 |         logger.error(f"Failed to import mem0ai: {e}")
2025-06-06T02:21:07.1596691Z 111 |         assert False
2025-06-06T02:21:07.1596794Z     |                ^^^^^ B011
2025-06-06T02:21:07.1596864Z     |
2025-06-06T02:21:07.1597109Z     = help: Replace `assert False`
2025-06-06T02:21:07.1597116Z 
2025-06-06T02:21:07.1597491Z tests/test_mem0_integration.py:125:9: PERF203 `try`-`except` within a loop incurs performance overhead
2025-06-06T02:21:07.1597637Z     |
2025-06-06T02:21:07.1597803Z 123 |               importlib.import_module(dep)
2025-06-06T02:21:07.1598105Z 124 |               logger.info(f"Successfully imported {dep}")
2025-06-06T02:21:07.1598245Z 125 | /         except ImportError as e:
2025-06-06T02:21:07.1598446Z 126 | |             logger.error(f"Failed to import {dep}: {e}")
2025-06-06T02:21:07.1598583Z 127 | |             all_installed = False
2025-06-06T02:21:07.1598712Z     | |_________________________________^ PERF203
2025-06-06T02:21:07.1598783Z 128 |
2025-06-06T02:21:07.1599060Z 129 |       assert all_installed, "Not all required dependencies are installed"
2025-06-06T02:21:07.1599129Z     |
2025-06-06T02:21:07.1599136Z 
2025-06-06T02:21:07.1599497Z tests/test_mem0_integration.py:126:13: TRY400 Use `logging.exception` instead of `logging.error`
2025-06-06T02:21:07.1599572Z     |
2025-06-06T02:21:07.1599772Z 124 |             logger.info(f"Successfully imported {dep}")
2025-06-06T02:21:07.1599909Z 125 |         except ImportError as e:
2025-06-06T02:21:07.1600109Z 126 |             logger.error(f"Failed to import {dep}: {e}")
2025-06-06T02:21:07.1600250Z     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY400
2025-06-06T02:21:07.1600389Z 127 |             all_installed = False
2025-06-06T02:21:07.1600460Z     |
2025-06-06T02:21:07.1600579Z     = help: Replace with `exception`
2025-06-06T02:21:07.1600586Z 
2025-06-06T02:21:07.1600898Z tests/test_mem0_integration.py:155:9: SLF001 Private member accessed: `_store_memory`
2025-06-06T02:21:07.1600967Z     |
2025-06-06T02:21:07.1601110Z 154 |         # Store some test memories
2025-06-06T02:21:07.1601322Z 155 |         self.agent._store_memory("User prefers light mode")
2025-06-06T02:21:07.1601443Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T02:21:07.1601666Z 156 |         self.agent._store_memory("User is allergic to peanuts")
2025-06-06T02:21:07.1601742Z     |
2025-06-06T02:21:07.1601749Z 
2025-06-06T02:21:07.1602060Z tests/test_mem0_integration.py:156:9: SLF001 Private member accessed: `_store_memory`
2025-06-06T02:21:07.1602132Z     |
2025-06-06T02:21:07.1602267Z 154 |         # Store some test memories
2025-06-06T02:21:07.1602478Z 155 |         self.agent._store_memory("User prefers light mode")
2025-06-06T02:21:07.1602690Z 156 |         self.agent._store_memory("User is allergic to peanuts")
2025-06-06T02:21:07.1602810Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T02:21:07.1602881Z 157 |
2025-06-06T02:21:07.1602994Z 158 |     def tearDown(self):
2025-06-06T02:21:07.1603065Z     |
2025-06-06T02:21:07.1603072Z 
2025-06-06T02:21:07.1603389Z tests/test_mem0_integration.py:166:9: SLF001 Private member accessed: `_store_memory`
2025-06-06T02:21:07.1603460Z     |
2025-06-06T02:21:07.1613542Z 164 |         # Store a new memory
2025-06-06T02:21:07.1613850Z 165 |         test_content = f"Test memory {os.urandom(4).hex()}"
2025-06-06T02:21:07.1614043Z 166 |         self.agent._store_memory(test_content)
2025-06-06T02:21:07.1614175Z     |         ^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T02:21:07.1614250Z 167 |
2025-06-06T02:21:07.1614388Z 168 |         # Retrieve the memory
2025-06-06T02:21:07.1614459Z     |
2025-06-06T02:21:07.1614474Z 
2025-06-06T02:21:07.1614878Z tests/test_mem0_integration.py:169:20: SLF001 Private member accessed: `_retrieve_relevant_memories`
2025-06-06T02:21:07.1614954Z     |
2025-06-06T02:21:07.1615090Z 168 |         # Retrieve the memory
2025-06-06T02:21:07.1615387Z 169 |         memories = self.agent._retrieve_relevant_memories(test_content[:10])
2025-06-06T02:21:07.1615538Z     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T02:21:07.1615612Z 170 |
2025-06-06T02:21:07.1615821Z 171 |         # Check that the memory was stored and retrieved
2025-06-06T02:21:07.1615893Z     |
2025-06-06T02:21:07.1616069Z 
2025-06-06T02:21:07.1616464Z tests/test_mem0_integration.py:178:20: SLF001 Private member accessed: `_retrieve_relevant_memories`
2025-06-06T02:21:07.1616544Z     |
2025-06-06T02:21:07.1616841Z 176 |         """Test that the agent can retrieve memories."""
2025-06-06T02:21:07.1616984Z 177 |         # Test memory retrieval
2025-06-06T02:21:07.1617240Z 178 |         memories = self.agent._retrieve_relevant_memories("allergies")
2025-06-06T02:21:07.1617384Z     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
2025-06-06T02:21:07.1617453Z 179 |
2025-06-06T02:21:07.1617622Z 180 |         # Check that memories were retrieved
2025-06-06T02:21:07.1617690Z     |
2025-06-06T02:21:07.1617698Z 
2025-06-06T02:21:07.1618132Z verify_mock_crewai.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1618207Z   |
2025-06-06T02:21:07.1618315Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1618419Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1618501Z 2 | """
2025-06-06T02:21:07.1618834Z 3 | Verify that the mock_crewai package works correctly without circular import issues.
2025-06-06T02:21:07.1618909Z   |
2025-06-06T02:21:07.1618916Z 
2025-06-06T02:21:07.1619221Z verify_mock_crewai_fix.py:1:1: EXE001 Shebang is present but file is not executable
2025-06-06T02:21:07.1619296Z   |
2025-06-06T02:21:07.1619401Z 1 | #!/usr/bin/env python3
2025-06-06T02:21:07.1619509Z   | ^^^^^^^^^^^^^^^^^^^^^^ EXE001
2025-06-06T02:21:07.1619579Z 2 | """
2025-06-06T02:21:07.1619891Z 3 | Verify that the mock_crewai package works correctly without circular import issues.
2025-06-06T02:21:07.1619959Z   |
2025-06-06T02:21:07.1619965Z 
2025-06-06T02:21:07.1620057Z Found 438 errors.
2025-06-06T02:21:07.1620369Z No fixes available (109 hidden fixes can be enabled with the `--unsafe-fixes` option).
2025-06-06T02:21:07.1631582Z ##[error]Process completed with exit code 1.
2025-06-06T02:21:07.1747260Z ##[group]Run codecov/codecov-action@v3
2025-06-06T02:21:07.1747343Z with:
2025-06-06T02:21:07.1747447Z   file: ./coverage/lcov.info
2025-06-06T02:21:07.1747522Z   flags: javascript
2025-06-06T02:21:07.1747600Z env:
2025-06-06T02:21:07.1747724Z   TOOL_API_KEY: ci-test-api-key-for-github-actions
2025-06-06T02:21:07.1748079Z   pythonLocation: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:21:07.1748262Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib/pkgconfig
2025-06-06T02:21:07.1748396Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:21:07.1748541Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:21:07.1748671Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.10/x64
2025-06-06T02:21:07.1748816Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.12.10/x64/lib
2025-06-06T02:21:07.1748886Z ##[endgroup]
2025-06-06T02:21:07.2810244Z ==> linux OS detected
2025-06-06T02:21:07.8228111Z https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
2025-06-06T02:21:07.8898422Z ==> SHASUM file signed by key id 806bb28aed779869
2025-06-06T02:21:07.9651681Z ==> Uploader SHASUM verified (b37359013b48fbc3b0790d59fc474a52a260fb96e28e1b2c2ae001dc9b9cc996  codecov)
2025-06-06T02:21:07.9652609Z ==> Running version latest
2025-06-06T02:21:08.0534769Z ==> Running version v0.8.0
2025-06-06T02:21:08.0553777Z [command]/home/runner/work/_actions/codecov/codecov-action/v3/dist/codecov -n  -Q github-action-3.1.6 -f ./coverage/lcov.info -F javascript -C 58f675873acf8d730deab7d16fb02db3b645dc69
2025-06-06T02:21:08.2752429Z [2025-06-06T02:21:08.273Z] ['info'] 
2025-06-06T02:21:08.2752920Z      _____          _
2025-06-06T02:21:08.2753268Z     / ____|        | |
2025-06-06T02:21:08.2753652Z    | |     ___   __| | ___  ___ _____   __
2025-06-06T02:21:08.2754138Z    | |    / _ \ / _` |/ _ \/ __/ _ \ \ / /
2025-06-06T02:21:08.2754590Z    | |___| (_) | (_| |  __/ (_| (_) \ V /
2025-06-06T02:21:08.2755040Z     \_____\___/ \__,_|\___|\___\___/ \_/
2025-06-06T02:21:08.2755371Z 
2025-06-06T02:21:08.2755587Z   Codecov report uploader 0.8.0
2025-06-06T02:21:08.2810051Z [2025-06-06T02:21:08.280Z] ['info'] => Project root located at: /home/runner/work/pAIssive_income/pAIssive_income
2025-06-06T02:21:08.2819786Z [2025-06-06T02:21:08.281Z] ['info'] -> No token specified or token is empty
2025-06-06T02:21:08.4208598Z [2025-06-06T02:21:08.420Z] ['info'] Searching for coverage files...
2025-06-06T02:21:08.4730597Z [2025-06-06T02:21:08.472Z] ['error'] None of the following appear to exist as files: ./coverage/lcov.info
2025-06-06T02:21:08.4733223Z [2025-06-06T02:21:08.472Z] ['error'] There was an error running the uploader: Error while cleaning paths. No paths matched existing files!
2025-06-06T02:21:08.4736101Z [2025-06-06T02:21:08.472Z] ['info'] Codecov will exit with status code 0. If you are expecting a non-zero exit code, please pass in the `-Z` flag
2025-06-06T02:21:08.5126344Z Post job cleanup.
2025-06-06T02:21:08.6136873Z [command]/usr/bin/git version
2025-06-06T02:21:08.6177156Z git version 2.49.0
2025-06-06T02:21:08.6229165Z Temporarily overriding HOME='/home/runner/work/_temp/2d477f07-b6ce-42ff-b709-f477da07e5a8' before making global git config changes
2025-06-06T02:21:08.6230740Z Adding repository directory to the temporary git global config as a safe directory
2025-06-06T02:21:08.6235536Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/pAIssive_income/pAIssive_income
2025-06-06T02:21:08.6271184Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-06-06T02:21:08.6305507Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-06-06T02:21:08.6547585Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-06-06T02:21:08.6570002Z http.https://github.com/.extraheader
2025-06-06T02:21:08.6583001Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-06-06T02:21:08.6615854Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-06-06T02:21:08.6961508Z Cleaning up orphan processes
