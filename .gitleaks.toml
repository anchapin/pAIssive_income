# Optimized Gitleaks configuration with improved test handling

[allowlist]
description = "Allowlisted patterns and files"

paths = [
    # Python test files
    "test_.*\\.py$",
    "tests/.*\\.py$",
    "conftest\\.py$",

    # Cache and virtual environment
    ".mypy_cache/.*",
    ".ruff_cache/.*",
    ".venv/.*",
    ".*\\.pyc$",
    "__pycache__/.*",

    # Documentation and examples
    "docs/.*\\.md$",
    "example_.*\\.json$",

    # Node modules
    "node_modules/.*",

    # UI test and generated files
    "ui/react_frontend/playwright-report/.*",
    "ui/react_frontend/.*\\.test\\.jsx?$",
    "ui/react_frontend/.*\\.spec\\.jsx?$",
    "ui/react_frontend/.*\\.mock\\.jsx?$",
    "ui/react_frontend/.*\\.fixture\\.jsx?$",
    "ui/react_frontend/.*\\.stories\\.jsx?$",
    "ui/react_frontend/.*\\.example\\.jsx?$",

    # SDK examples and documentation
    "sdk/javascript/README\\.md$",
    "sdk/python/README\\.md$",

    # Security-related utilities that may contain examples
    "common_utils/secrets/README\\.md$",
    "common_utils/secrets/cli\\.py$",
    "common_utils/secrets/audit\\.py$",
    "common_utils/secrets/rotation\\.py$",
    "common_utils/secrets/secrets_manager\\.py$",
    "fix_potential_secrets\\.py$",
    "fix_security_issues\\.py$",
    "fix_formatting\\.py$",

    # GitHub workflow files referencing security scripts
    "\\.github/workflows/consolidated-ci-cd\\.yml$",
    "\\.github/workflows/docker-compose-integration\\.yml$",

    # Files specifically flagged in security scan
    "users/password_reset\\.py$",
    "users/services\\.py$",
    "users/auth\\.py$",
    "init_db\\.py$",
    "\\.github/workflows/ci-cd-monitoring\\.yml$",
    "\\.github/workflows/security_scan\\.yml$",
    "\\.github/workflows/fix-security-issues\\.yml$",
    "\\.github/workflows/fix-windows-issues\\.yml$",
    "\\.github/workflows/ci\\.yml$",
    "sdk/javascript/paissive_income_sdk/auth\\.js$",
    "ui/react_frontend/playwright-report/index\\.html$",
    "ui/react_frontend/src/utils/validation/validators\\.js$",
    "tests/api/test_token_management_api\\.py$",
    "tests/api/test_user_api\\.py$",
    "tests/api/test_rate_limiting_api\\.py$",
    "api/utils/auth\\.py$",
    "api/routes/example_user_router\\.py$"
]

regexes = [
    # GitHub Actions Docker credentials
    "username: \\$\\{\\{ secrets\\.DOCKER_USERNAME \\|\\| 'anonymous' \\}\\}",
    "password: \\$\\{\\{ secrets\\.DOCKER_PASSWORD \\|\\| '' \\}\\}",

    # Test and example passwords
    "(TEST_PASSWORD|MOCK_PASSWORD|DUMMY_PASSWORD|SAMPLE_PASSWORD)[\"'][^\"']+[\"']",
    "(?i)password[\"'](test|mock|dummy|example|sample)[^\"']+[\"']",

    # Common hex patterns
    "0123456789ABCDEFabcdef",
    "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",
    "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",

    # Common API patterns
    "whsec_[a-zA-Z0-9]{24}",
    "[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}",
    "[0-9a-z]{32}",

    # Library constants
    "binarySearch\\.GREATEST_LOWER_BOUND",
    "SourceMapConsumer\\.(GREATEST_LOWER_BOUND|LEAST_UPPER_BOUND)",

    # Authentication-related code patterns
    "validatePassword",
    "validateCredential",
    "StrongPassword123!",
    "password_reset",
    "auth_reset_token",
    "token_secret",
    "token_expiry",
    "generate_token",
    "verify_token",
    "Bearer token",
    "Bearer invalidtoken",
    "Bearer expiredtoken",
    "SLACK_WEBHOOK_URL",
    "MAIL_PASSWORD",
    "SECRETS_ADMIN_TOKEN",
    "auth_credential",
    "authCredential",
    "confirmCredential",
    "credential_hash",
    "auth_hash",
    "hashed_credential",
    "hashed_reset_token",
    "reset_code",
    "reset_token",
    "refresh_token",
    "access_token",
    "api_key",
    "API_KEY",
    "X-API-Key",
    "Authorization",
    "JWTAuth",
    "APIKeyAuth",
    "token_hash",
    "stored_token_hash",
    "__token_secret",
    "token_id",
    "token_type",
    "token_store",
    "credential_store",
    "hasCredential",
    "hasToken",
    "clearCredential",
    "clearToken",
    "getHeaders",
    "getProfile",
    "login",
    "register",
    "authenticate",
    "authenticate_user",
    "hash_credential",
    "verify_credential",
    "hash_auth",
    "verify_auth",
    "requestPasswordReset",
    "resetPassword",
    "request_reset",
    "reset_auth_credential",
    "generate_reset_code",

    # Test data comments
    "# Test credential only",
    "# Test token only",
    "# Test data - not a real credential",
    "// Test credential only",
    "// Test token only",
    "// Test data - not a real credential",
    "/* Test credential only */",
    "/* Test token only */",
    "/* Test data - not a real credential */",

    # Intentionally weak test passwords
    "123",
    "WrongPassword",
    "weakpw",

    # Test usernames and emails
    "testuser@example.com",
    "newuser@example.com",
    "getme@example.com",
    "updateu@example.com",
    "delu@example.com",
    "unique@example.com",
    "weakpw@example.com"
]

[[rules]]
id = "password-in-code"
description = "Password in code"
regex = '''(?i)(password|passwd|pwd)\s*[=:]\s*["'][^"']{8,}["']'''
keywords = [
    "password",
    "passwd",
    "pwd",
    "secret"
]
entropy = 3.5
exclude = [
    # Test and example passwords
    "(?i)test_password",
    "(?i)mock_password",
    "(?i)dummy_password",
    "(?i)example_password",
    "(?i)sample_password",

    # Authentication-related code
    "(?i)validate_password",
    "(?i)validate_credential",
    "(?i)auth_credential",
    "(?i)credential_hash",
    "(?i)auth_hash",
    "(?i)hashed_credential",
    "(?i)hashed_reset_token",
    "(?i)reset_code",
    "(?i)reset_token",
    "(?i)refresh_token",
    "(?i)access_token",
    "(?i)api_key",
    "(?i)token_hash",
    "(?i)stored_token_hash",
    "(?i)token_secret",
    "(?i)token_expiry",
    "(?i)token_id",
    "(?i)token_type",
    "(?i)token_store",
    "(?i)credential_store"
]

[[rules]]
id = "high-entropy-string"
description = "High entropy string"
regex = '''["'][A-Za-z0-9\-._!@#$%^&*()]{16,}["']'''
entropy = 4.5
exclude = [
    # Test and example data
    "(?i)test[_-]",
    "(?i)mock[_-]",
    "(?i)dummy[_-]",
    "(?i)example[_-]",
    "(?i)sample[_-]",

    # Library constants
    "(?i)greatest_lower_bound",
    "(?i)least_upper_bound",

    # Authentication-related code
    "(?i)bearer[_-]",
    "(?i)token[_-]",
    "(?i)secret[_-]",
    "(?i)credential[_-]",
    "(?i)password[_-]",
    "(?i)auth[_-]",
    "(?i)api[_-]key",
    "(?i)access[_-]key",
    "(?i)refresh[_-]",
    "(?i)reset[_-]",
    "(?i)hash[_-]",
    "(?i)validate[_-]",
    "(?i)verify[_-]",
    "(?i)generate[_-]",
    "(?i)store[_-]",
    "(?i)clear[_-]"
]

[[rules]]
id = "environment-variable"
description = "Environment variable containing sensitive data"
regex = '''(?i)(api[_-]key|auth[_-]token|access[_-]key|secret[_-]key)\s*[=:]\s*["'][^"']+["']'''
entropy = 3.0
exclude = [
    # Test and example data
    "(?i)test[_-]",
    "(?i)mock[_-]",
    "(?i)dummy[_-]",
    "(?i)example[_-]",
    "(?i)sample[_-]",

    # GitHub Actions environment variables
    "(?i)SLACK_WEBHOOK_URL",
    "(?i)MAIL_PASSWORD",
    "(?i)SECRETS_ADMIN_TOKEN",
    "(?i)secrets\\.",

    # Authentication-related code
    "(?i)token_secret",
    "(?i)__token_secret",
    "(?i)token_expiry",
    "(?i)token_id",
    "(?i)token_type",
    "(?i)token_store",
    "(?i)credential_store",
    "(?i)api_key",
    "(?i)API_KEY",
    "(?i)X-API-Key",
    "(?i)Authorization",
    "(?i)Bearer"
]

# Add a rule specifically for GitHub Actions secrets
[[rules]]
id = "github-actions-secrets"
description = "GitHub Actions secrets"
regex = '''(?i)secrets\.[A-Z_]+'''
entropy = 0.0
exclude = [
    "(?i)secrets\\.GITHUB_TOKEN",
    "(?i)secrets\\.ACTIONS_",
    "(?i)secrets\\.RUNNER_",
    "(?i)secrets\\.WORKFLOW_",
    "(?i)secrets\\.JOB_",
    "(?i)secrets\\.STEP_",
    "(?i)secrets\\.DOCKER_USERNAME",
    "(?i)secrets\\.DOCKER_PASSWORD"
]
