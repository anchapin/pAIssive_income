# Gitleaks configuration file
# This configuration is used to detect secrets in the codebase

title = "Gitleaks Configuration"

# Define the allowed paths (files or directories that are allowed to contain secrets)
[allowlist]
description = "Allowlisted files and paths"
paths = [
    '''\.gitleaks.toml''',
    '''(.*?)(jpg|jpeg|png|gif|bmp|svg)$''',
    '''(.*?)(mp4|avi|mov|wmv)$''',
    '''(.*?)(mp3|wav|ogg)$''',
    '''(.*?)(pdf|doc|docx|xls|xlsx|ppt|pptx)$''',
    '''(.*?)(zip|tar|gz|rar)$''',
    '''(.*?)\.min\.(js|css)$''',
    '''(.*?)\.venv/.*''',
    '''(.*?)venv/.*''',
    '''(.*?)__pycache__/.*''',
    '''(.*?)\.pytest_cache/.*''',
    '''(.*?)\.mypy_cache/.*''',
    '''(.*?)\.ruff_cache/.*''',
    '''(.*?)\.git/.*''',
    '''(.*?)node_modules/.*''',
    '''(.*?)build/.*''',
    '''(.*?)dist/.*''',
]

# Allowlist specific regexes that are known to be false positives
regexes = [
    '''your-[a-z-]+''',  # Example placeholders like "your-api-key"
    '''example-[a-z-]+''',
    '''placeholder-[a-z-]+''',
    '''sample-[a-z-]+''',
    '''test-[a-z-]+''',
]

# Allowlist specific commits if needed
#commits = [
#    "commit-hash-1",
#    "commit-hash-2"
#]

# Configure detection rules
[[rules]]
id = "generic-api-key"
description = "Generic API Key"
regex = '''(?i)((api[_-]?key|apikey|secret)["\']?\s*[:=]\s*["\']?)[a-zA-Z0-9_\-\.]{10,}(["\']?)'''
secretGroup = 2
keywords = [
    "api",
    "key",
    "secret",
]

[[rules]]
id = "openai-api-key"
description = "OpenAI API Key"
regex = '''sk-[a-zA-Z0-9]{48}'''
secretGroup = 0
keywords = [
    "sk-",
]

[[rules]]
id = "github-token"
description = "GitHub Token"
regex = '''gh[ps]_[a-zA-Z0-9]{36}'''
secretGroup = 0
keywords = [
    "ghp_",
    "ghs_",
]

[[rules]]
id = "aws-access-key"
description = "AWS Access Key"
regex = '''AKIA[0-9A-Z]{16}'''
secretGroup = 0
keywords = [
    "AKIA",
]

[[rules]]
id = "jwt-token"
description = "JWT Token"
regex = '''eyJ[a-zA-Z0-9_-]{10,}\.[a-zA-Z0-9_-]{10,}\.[a-zA-Z0-9_-]{10,}'''
secretGroup = 0
keywords = [
    "eyJ",
]

[[rules]]
id = "password-assignment"
description = "Password Assignment"
regex = '''(?i)(password|passwd|pwd)["\']?\s*[:=]\s*["\']?([^"\'\s]{3,})["\']?'''
secretGroup = 2
keywords = [
    "password",
    "passwd",
    "pwd",
]

# Disable PR comments for large PRs to avoid GitHub API issues
[report]
format = "json"
verbose = true
# Disable PR comments to avoid GitHub API issues with large PRs
disable-pr-comments = true
