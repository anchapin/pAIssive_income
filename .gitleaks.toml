# Gitleaks configuration file
# This configuration is used to detect secrets in the codebase

title = "Gitleaks Configuration"

# Define the allowed paths (files or directories that are allowed to contain secrets)
[allowlist]
description = "Allowlisted files and paths"
paths = [
    # Config files
    '''\.gitleaks.toml''',
    '''\.pre-commit-config\.yaml''',
    '''\.github[/\\]workflows[/\\].*\.yml''',
    '''fix_potential_secrets\.py''',

    # Files with known false positives in validation code
    '''.*ui[/\\]react_frontend[/\\]src[/\\]utils[/\\]validation[/\\]validators\.js''',
    '''.*users[/\\]services\.py''',

    # Common media and document files (false positives)
    '''.*\.(jpg|jpeg|png|gif|bmp|svg)$''',
    '''.*\.(mp4|avi|mov|wmv)$''',
    '''.*\.(mp3|wav|ogg)$''',
    '''.*\.(pdf|doc|docx|xls|xlsx|ppt|pptx)$''',
    '''.*\.(zip|tar|gz|rar)$''',
    '''.*\.min\.(js|css)$''',

    # Virtual environments, package directories, and dependency files
    '''\.venv''',
    '''venv''',
    '''node_modules''',
    '''\.venv[/\\].*''',
    '''venv[/\\].*''',
    '''node_modules[/\\].*''',
    '''.*[/\\]\.venv[/\\].*''',
    '''.*[/\\]venv[/\\].*''',
    '''.*[/\\]node_modules[/\\].*''',
    '''.*package-lock\.json''',
    '''.*yarn\.lock''',
    '''.*poetry\.lock''',
    '''.*pipfile\.lock''',

    # API docs and example files
    '''.*api[/\\]README\.md''',
    '''.*sdk[/\\]python[/\\]README\.md''',
    '''.*sdk[/\\]javascript[/\\].*[/\\]auth\.js''',
    '''.*docs[/\\]webhook.*\.md''',
    '''.*docs[/\\]deployment-architecture\.md''',
    '''.*common_utils[/\\]secrets[/\\]README\.md''',

    # Cache directories (complete exclusions)
    '''\.ruff_cache''',
    '''__pycache__''',
    '''\.pytest_cache''',
    '''\.mypy_cache''',
    '''\.ruff_cache[/\\].*''',
    '''.*[/\\]\.ruff_cache[/\\].*''',
    '''.*[/\\]__pycache__[/\\].*''',
    '''.*[/\\]\.pytest_cache[/\\].*''',
    '''.*[/\\]\.mypy_cache[/\\].*''',

    # Git directories
    '''.*[/\\]\.git[/\\].*''',

    # Build directories
    '''.*[/\\]build[/\\].*''',
    '''.*[/\\]dist[/\\].*''',

    # Lock files (often contain hashes that look like secrets)
    '''.*package-lock\.json''',
    '''.*yarn\.lock''',
    '''.*poetry\.lock''',

    # Test cache files
    '''\.pytest_cache[/\\]v[/\\]cache[/\\]lastfailed''',

    # Playwright report files (generated test reports)
    '''.*[/\\]playwright-report[/\\].*''',
    '''.*[/\\]playwright-report[/\\]index\.html''',
    '''.*ui[/\\]react_frontend[/\\]playwright-report[/\\].*''',
]

# Allowlist specific regexes that are known to be false positives
regexes = [
    # GitHub Actions secrets references
    '''\$\{\{\s*secrets\.[A-Z0-9_]+\s*\}\}''',
    '''password: \$\{\{\s*secrets\.[A-Z0-9_]+\s*\}\}''',
    '''api_key: \$\{\{\s*secrets\.[A-Z0-9_]+\s*\}\}''',
    '''API_KEY: \$\{\{\s*secrets\.[A-Z0-9_]+\s*\}\}''',
    '''secret: \$\{\{\s*secrets\.[A-Z0-9_]+\s*\}\}''',
    '''SECRET: \$\{\{\s*secrets\.[A-Z0-9_]+\s*\}\}''',

    # Specific file exemptions for remaining false positives
    '''export const validatePassword = validateCredential''',
    '''token_secret''',
    '''self\.__token_secret''',

    # Common placeholder patterns
    '''your-[a-z0-9-]+''',  # Example placeholders like "your-api-key"
    '''example-[a-z0-9-]+''',
    '''placeholder-[a-z0-9-]+''',
    '''sample-[a-z0-9-]+''',
    '''test-[a-z0-9-]+''',
    '''demo-[a-z0-9-]+''',
    '''fake-[a-z0-9-]+''',
    '''dummy-[a-z0-9-]+''',
    '''mock-[a-z0-9-]+''',

    # Common test credentials and examples
    '''xoxb-[0-9]+''',    # Example Slack tokens in docs
    '''AKIAIOSFODNN7EXAMPLE''',  # Example AWS key
    '''sk-test-[a-zA-Z0-9]{24}''',  # Example Stripe test keys
    '''00000000-0000-0000-0000-000000000000''',  # UUID zeros

    # Common false positive patterns
    '''sha256:[a-zA-Z0-9]{32}''',  # Docker image hashes
    '''sha1:[a-zA-Z0-9]{40}''',    # Git commit hashes in docs
    '''hash:[a-zA-Z0-9]{32}''',    # Generic hash labels
    '''arn:aws:[a-z0-9-]+:[a-z0-9-]*:[0-9]{12}:[a-zA-Z0-9-/]+''',  # AWS ARN patterns
      # Password-related variable/parameter names (common in library code)
    '''password\s*[=:]\s*(None|True|False|str|bytes|\[\]|\{\}|""|''|bool|Optional|Union|ClassVar|Annotated)''',
    '''password[,\)]''',
    '''self\.password''',
    '''password\s*[=:]\s*password''',
    '''[gs]et_password''',
    '''pwd\.''',
    '''pwd\s*=''',
    '''has_password''',
    '''is_password''',
    '''with_password''',
    '''check_password''',
    '''\(.*password.*\)''',
    '''\bpassword\b\s*:\s*\w+''',
    '''\bpassword\b\s+[a-zA-Z]+''',
    '''password\s*(==|!=)''',
    '''storage_options\.pop\([\'"]password[\'"]\s*,''',
    '''if\s+password:''',

    # Function parameters and type annotations commonly causing false positives
    '''Optional\[.*password.*\]''',
    '''Union\[.*password.*\]''',
    '''Callable\[.*password.*\]''',
    '''def.*password\s*:''',
    ''':param\s+password:''',
    '''\*\*\s*password''',

    # Common JWT token examples in documentation and tests
    '''eyJ[a-zA-Z0-9_-]+\.[a-zA-Z0-9_-]+\.[a-zA-Z0-9_-]+''',

    # API key variable names (without actual secrets)
    '''api_key\s*[=:]\s*(None|self\.|get_|client\.|request\.|config\.|kwargs\.|os\.|url|token)''',
    '''X-API-Key''',
    '''api[_-]?key\s*=\s*[\'"][\w-]+[\'"]''',
    '''request\.headers\.get\([\'"]X-API-Key[\'"]\)''',
      # Secret variable names (without actual secrets)
    '''secret\s*[=:]\s*(None|self\.|get_|client\.|request\.|config\.|kwargs\.|os\.|url|token)''',
    '''webhook_secret''',
    '''shared_?secret''',
    '''test[_-]secret''',
    '''correct[_-]secret''',
    '''incorrect[_-]secret''',
    '''SECRET_DO_NOT_PASS''',
    '''_secret\s*=''',
    '''self\..*secret''',
    '''self\.__token_secret''',
    '''token_secret''',
    '''not token_secret''',
    '''secret\s*=\s*[\'"]test[\w-]*[\'"]''',
    '''__token_secret =''',
    '''@property\s*def token_secret''',

    # Common testing credentials and examples
    '''"guest"''',
    '''guest''',
    '''password123''',
    '''secure_password''',
    '''test_password''',
    '''default[_-]password''',
    '''xieyanbo''',     # Common test password found in example code

    # Common patterns in type definitions (not actual passwords)
    '''include_password''',
    '''get_password''',
    '''password_[a-z_]+''',
    '''is_password''',
    '''key_password''',
    '''set_password''',    '''hash_?password''',
    '''store_password''',
    '''reset_password''',
    '''export const validatePassword''',
    '''validatePassword =''',
    '''validateCredential''',

    # Documentation and comments containing examples
    '''password.*example''',
    '''example.*password''',
    '''password.*demo''',
    '''demo.*password''',

    # Methods and functions commonly using "password" in their name
    '''\.password\(''',
    '''\.password\s*=''',
    '''hashpw\('''
]

# Allowlist specific commits if needed
#commits = [
#    "commit-hash-1",
#    "commit-hash-2"
#]

# Configure detection rules
[[rules]]
id = "generic-api-key"
description = "Generic API Key"
regex = '''(?i)((api[_-]?key|apikey|secret)["\']?\s*[:=]\s*["\']?)[a-zA-Z0-9_\-\.]{10,}(["\']?)'''
secretGroup = 2
keywords = [
    "api",
    "key",
    "secret",
]

[[rules]]
id = "openai-api-key"
description = "OpenAI API Key"
regex = '''sk-[a-zA-Z0-9]{48}'''
secretGroup = 0
keywords = [
    "sk-",
]

[[rules]]
id = "github-token"
description = "GitHub Token"
regex = '''gh[ps]_[a-zA-Z0-9]{36}'''
secretGroup = 0
keywords = [
    "ghp_",
    "ghs_",
]

[[rules]]
id = "aws-access-key"
description = "AWS Access Key"
regex = '''AKIA[0-9A-Z]{16}'''
secretGroup = 0
keywords = [
    "AKIA",
]

[[rules]]
id = "jwt-token"
description = "JWT Token"
regex = '''eyJ[a-zA-Z0-9_-]{10,}\.[a-zA-Z0-9_-]{10,}\.[a-zA-Z0-9_-]{10,}'''
secretGroup = 0
keywords = [
    "eyJ",
]

[[rules]]
id = "password-assignment"
description = "Password Assignment"
regex = '''(?i)(password|passwd|pwd)["\']?\s*[:=]\s*["\']?([^"\'\s]{3,})["\']?'''
secretGroup = 2
keywords = [
    "password",
    "passwd",
    "pwd",
]

# Disable PR comments for large PRs to avoid GitHub API issues
[report]
format = "json"
verbose = true
# Disable PR comments to avoid GitHub API issues with large PRs
disable-pr-comments = true
