# Optimized Ruff configuration for comprehensive linting and formatting

# Core settings
line-length = 88
target-version = "py38"
fix = true
unsafe-fixes = false
cache-dir = ".ruff_cache"

# Extended exclude patterns for better performance
extend-exclude = [
    ".git",
    ".venv",
    "venv",
    "node_modules",
    "ui/react_frontend/node_modules",  # Explicitly exclude node_modules in React frontend
    "__pycache__",
    "*.pyc",
    "*.pyo",
    "*.pyd",
    ".pytest_cache",
    ".mypy_cache",
    "build",
    "dist",
    "*.egg-info",
    "docs/source/conf.py",
    "old/",
    "ui/react_frontend/"  # Exclude React frontend code (uses ESLint/TypeScript)
]

# Comprehensive rule selection replacing Flake8
[lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "W",   # pycodestyle warnings
    "B",   # flake8-bugbear
    "C",   # flake8-comprehensions
    "T",   # flake8-print
    "UP",  # pyupgrade
    "RUF", # Ruff-specific rules
    "N",   # pep8-naming
    "PT",  # flake8-pytest-style
    "SIM", # flake8-simplify
    "ARG", # flake8-unused-arguments
    "ERA", # eradicate
    "PL",  # pylint
    "TRY", # tryceratops
    "FIX", # autofix
]

ignore = [
    "D203",  # One blank line before class
    "D213",  # Multi-line summary style
    "E501",  # Line length (handled by formatter)
    "PLR0913", # Too many arguments in function definition
]

[lint.isort]
combine-as-imports = true
force-single-line = true
lines-between-types = 1

# Simplified per-file-ignores with focused exceptions
[lint.per-file-ignores]
"__init__.py" = ["F401", "E402"]  # Allow unused imports in __init__
"tests/**/*.py" = [
    "PLR2004",  # Allow magic numbers in tests
    "ARG001",   # Allow unused arguments in tests (fixtures)
    "F401",     # Allow unused imports in tests
    "S101",     # Allow assert statements in tests (pytest style)
]
"**/test_*.py" = [
    "PLR0915",  # Allow long test functions
    "S101",     # Allow assert statements in tests (pytest style)
]
"artist_experiments/test_artist_experiments.py" = ["S101"]
"artist_experiments\\test_artist_experiments.py" = ["S101"]
"artist_experiments/**/test_*.py" = ["S101"]
"setup_dev_environment.py" = [
    "T201",     # Allow print statements in setup script
]
# Stub files have different type hint conventions
"**/*.pyi" = [
    "UP006",    # Allow older style type hints in stub files
    "UP007"     # Allow older style typing imports in stub files
]

# Original entries
"tool_templates/**" = ["E501"]
"niche_analysis/niche_analyzer.py" = ["E402"]
"ai_models/fallbacks/fallback_strategy.py" = ["E402"]
"ai_models/adapters/base_adapter.py" = ["E402"]
"ai_models/model_base_types.py" = ["E402"]
"ai_models/model_types.py" = ["E402"]

# Enhanced formatter settings
[format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
docstring-code-line-length = 88
line-ending = "auto"
preview = true

[lint.per-file-ignores]
"demo_vector_rag.py" = ["S101"]
# Allow binding to 0.0.0.0 in dev/test server entrypoints
"run_ui.py" = ["S104"]
"artist_experiments/run_artist.py" = ["S104"]
"verify_pr243_fixes.py" = ["S603"]
"scripts/**/*.py" = ["ALL"]
"tests/**/*.py" = ["ALL"]
"adk_demo/**/*.py" = ["ALL"]
"artist_experiments/**/*.py" = ["ALL"]
"examples/**/*.py" = ["ALL"]
"mock_adk/**/*.py" = ["ALL"]
"mock_crewai/**/*.py" = ["ALL"]
"migrations/**/*.py" = ["ALL"]
"performance/**/*.py" = ["ALL"]
"security/**/*.py" = ["ALL"]
"test-artifacts/**/*.py" = ["ALL"]
"test-results/**/*.py" = ["ALL"]
"ui/**/*.py" = ["ALL"]
