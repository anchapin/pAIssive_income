# Optimized Ruff configuration for comprehensive linting and formatting

# Core settings
line-length = 88
target-version = "py39"
fix = true
unsafe-fixes = false
cache-dir = ".ruff_cache"

# Extended exclude patterns for better performance
extend-exclude = [
    ".git",
    ".venv",
    "venv",
    "node_modules",
    "__pycache__",
    "*.pyc",
    "*.pyo",
    "*.pyd",
    ".pytest_cache",
    ".mypy_cache",
    "build",
    "dist",
    "*.egg-info"
]

# Comprehensive rule selection replacing Flake8
[lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "W",   # pycodestyle warnings
    "I",   # isort
    "B",   # flake8-bugbear
    "C",   # flake8-comprehensions
    "T",   # flake8-print
    "UP",  # pyupgrade
    "RUF", # Ruff-specific rules
    "N",   # pep8-naming
    "PT",  # flake8-pytest-style
    "SIM", # flake8-simplify
    "ARG", # flake8-unused-arguments
    "ERA", # eradicate
    "PL",  # pylint
    "TRY", # tryceratops
    "FIX", # autofix
]

ignore = [
    "D203",  # One blank line before class
    "D213",  # Multi-line summary style
    "E501",  # Line length (handled by formatter)
    "PLR0913", # Too many arguments in function definition
]

[lint.isort]
known-first-party = ["src", "tests", "utils"]
combine-as-imports = true
force-single-line = true
lines-between-types = 1

# Simplified per-file-ignores with focused exceptions
[lint.per-file-ignores]
"__init__.py" = ["F401", "E402"]  # Allow unused imports in __init__
"tests/**/*.py" = [
    "S101",     # Allow assert in tests
    "PLR2004",  # Allow magic numbers in tests
    "ARG001",   # Allow unused arguments in tests (fixtures)
]
"**/test_*.py" = [
    "PLR0915",  # Allow long test functions
]
"setup_dev_environment.py" = [
    "T201",     # Allow print statements in setup script
]

# Enhanced formatter settings
[format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
docstring-code-line-length = 88
line-ending = "auto"
preview = true
